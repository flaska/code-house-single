%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Isometric Webinar Concept 2 up-02.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For: Ayib
%%CreationDate: 23/02/18
%%BoundingBox: 0 0 500 500
%%HiResBoundingBox: 0 0 500 500
%%CropBox: 0 0 500 500
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=288 GradRes=144 Text=0 Stroke=1 Clip=0 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Isometric Webinar Concept</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-02-23T22:24:16+07:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-02-23T22:24:16+07:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-02-23T22:24:15+07:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>108</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Hecv+Ufn+af8SGWY+bX&#xA;l+l533Pz/hmS4zR6fQcVcSBUk0ANST8sVQFz5h0C2FLnU7SAjr6k8aUp1+0w6YpooCXz/wCSIqht&#xA;dsTSpPGeN/8AiJOK8JQ//KzPIX/V7tu3c+PyxTwFYv5peQC5jGtQchWpIcD/AIIrTFeAqg/MzyES&#xA;o/Tdt1/mP9MV4CiIvPnkqQUXXbAUAryuIl/4kwxRwlMYda0a6NLa/t5zQikcqP4fyk4oIRp6/SMV&#xA;aPQ/Jv14q2ev0jFXqmj/APHIsf8AmHi/4gMxJcy5ceQReRZOxV2KvLP+cg/+Ua0z/mN/5kvl2Hm1&#xA;ZuTwUdB8l/XmQ47j0Pyb9eKt9/p/hirR6H5N+vFW+/0/wxVodB8l/Xirj0Pyb9eKt9/p/hirX7J/&#xA;1Rirff6f4Yq0Og+S/rxVx6H5N+vFWz3+Y/hir6x85f8AKPz/ADT/AIkMxcfNycv0vFvzC83yeVPL&#xA;7anFaG7laZII0rRFZ1JDyEVPEcae5oMyWiMbLwfWPzc8+amWB1E2cRrSKzUQgV8HFZPvbFuEAxe8&#xA;1TU71i15dzXLHcmaR5DX/ZE4sqQuKW8VV4rV23f4R+OSEWiecDkrPZxlRQFTTY+OS4Q0jNIc0LJD&#xA;JH9obeI6ZAhyoZBLkp4GacP5S8xJ5eg8xfUpH0adnjW8QckV0biVen2TXpXBYukWhbHXNa08g2N/&#xA;cWpHT0ZXj/4iRhUgMs0X85/POnMomul1GAbGK6QE0PX94vF6/MnFicYfQHlbXl1/QLLWFt3tRdpz&#xA;9CTcqQxU77VBK1U9xi0EUXtOj/8AHIsf+YeL/iAzElzLlR5BF5Fk7FXYq8s/5yD/AOUa0z/mN/5k&#xA;vl2Hm1ZuTwUdB8l/XmQ47j0Pyb9eKt9/p/hirR6H5N+vFUdp2j31+5MKUiVvjnf4UXbx7/IYDIBy&#xA;tLosuc1AfHorazpEOnx2xjmM3qghyRQckI6e3xYIytyu0uzfywhvxGV/ZX60rPQ/Jv15J1bff6f4&#xA;Yquhj9SRI6058Vr8zTFhknwxJ7kdcaRIAZLR/rMSn4goo60HdcXD0/aEMmx9MkuHQfJf14ue49D8&#xA;m/XirZ7/ADH8MVfWPnL/AJR+f5p/xIZi4+bk5fpeZ6jp9pqNlcWN3GJba5Uxyoe6sP1+GZLjA0+Y&#xA;/NnlFtC1u4024U/AeUMo2EkTfYcdvn74HKibCB07yzfXkge1sri9ijYeqkMbvt4FkBpkJZYx5kBt&#xA;hHflYZRZeQ/KeplraK7vdM1Zdn027WNn5dxHyEHL6TXEZL3G4dvg0OnzbRlKM/5pr7OVoef8q5kt&#xA;prqPVEghtzxd9Qgls9/avqcv9jXDxsZ9j+knjAA/nAxYo4lgdkkZZFBIWVK0YDuKhTv7jLYyebz4&#xA;hE7IyDUXWBYpys9oteMMlTxqan06fEhrv8O3jglAXY2KwzSA4T6o9x/R3fD4o298neaX0ubWLTSr&#xA;keX1fj+kGRmSnvIFAoOhIFK7ZAZLG7k+BGJ2Y8NOn8VH0n+mG2VPrb/nHi1DflVa28gjmRp7pZIJ&#xA;ACrK0h23HetN9sx8nNQwX8+/yk8n6RpS+Y9JibTrmS5SCewSghYyB25oprxPwfsmnsMnjmeS08b0&#xA;TQhqOq2mnwJWW5lWMMd6Bju3+xG+WqTQfU9paQWdrDaQLwgt0SKJfBUXiB9wwuIXrWj/APHIsf8A&#xA;mHi/4gMxJcy5ceQReRZOxV2KvLP+cg/+Ua0z/mN/5kvl2Hm1ZuTwUdB8l/XmQ47j0Pyb9eKo6y0m&#xA;5uSHI9OKtebdxT9kd8BKQE5i0ixjiMZjEnL7TPu33jp9GRss4gXunF0H4r0it1QFUXoKCtFUVJyn&#xA;m+hZZ4tPAAkRixbV7qXU75bDToXufq1alR0JI5lj0UClMvxxoPG9u9pwnMAH0Qvfv71byp5TvPMV&#xA;xKsUqW1rbKGurqX7KB2ooA7saGgqOmDJkERu62EDLk9Q8uaF5Z0edIbO3FxLJ8M9/dAFiCpDBAaB&#xA;FIr+o165gzzyk5ccQDxI3UNqv1iaQQxx8WaRgzBd9iQgZuvgM2LgSiJAg8imcFZWjurGcMs5/dSI&#xA;4ZGJ3IVx8JpXdTQjoRXI13Oh1OjljFn1R71LWWZtRlZwA5CcqbVNBU7d8mXZdnzMsIJQR6H5N+vA&#xA;5zZ7/MfwxV9Y+cv+Ufn+af8AEhmLj5uTl+l533Pz/hmS4zC/zQ8n/p7RPrFsldTsFaSCnWRNi8fv&#xA;sKr7/PAzxyosC8sfmzfWemroetevJpiqqQ3VjI1tdwBB8PFoygcDwb6a9M1Go7MBlx49pdx3iXbY&#xA;tXQ4ZcvLmzHXvL17+ZqaLb+XI5Lm3sEIvPNN8hhDA0Hp14IZWUqSeK0B7ipx7PwzxcRmOG/4V1WW&#xA;Mq4d66sguZ/y4/LGGCTWL2TzH5pt0/0cSn1ZYzQUMcZJSAb1DMeRHQt0zP3k1ZdRPJXHImnhfnLz&#xA;MvmvzE+pfULXShOQhigXim7ljJMwA5ueXxPxFfDLoig45e6/lx+QPlKws7bWdUmg8w3UqiS3MQEu&#xA;nJ3rQFTP/siF/wAnKp5DyCYQje4ej6PbX+nxDT5kEum2yvS+JCBVb4iGZiq8Kk15b/RmNihwgR+1&#xA;yu0JzyZDliYmMv4eRjsAOu/eXzv+cUf5Y3eolfJUElxq8bF9Rl09KadwGxKpQ/FXjvHRN/HMuJI5&#xA;uPDHKRqIJPk9F/5x31nS5/KcGjLdxfX4JZ3lteXGdQzFgyg05KR1pX3yOQbtfVb/AM5G30Fz5Bjj&#xA;huEuDa6xFDMUPxJIsE1Ucdjvgx82eTHKNWOe7zL8k9C+savdaxKtY7KMxQE/79lFCR/qpX78yA0Z&#xA;TtT2o9fpGFoeqaP/AMcix/5h4v8AiAzElzLlx5BF5Fk7FXYq8s/5yD/5RvTP+Y3/AJkvl2Hm1ZuT&#xA;wu0s7m6YLEhI+Hkx2Ub9zmQS49J7ZaLbwUeT97L4n7Ir4D+uQJZAJjgShrvULa1Kq5LzPtHAg5SM&#xA;emyj/awgWxlMRFluTT7uW1kvdduRpWlQgepGXCvQioEsp2UkdEX4j0AOTAAcHUdo5M06hc5d/wCs&#xA;n8dwLaXttDacbJEg05QGRIgR6lR8HIsAzV98vMQB5vGT1eXLmIn9MTv+PwPJMvy5utK02PV4b+7V&#xA;PWto7gIhBk4Rc5Gqv+de2a/UxMqp9HwGhuk2ueetQv1e1s1NlZNVXAPKWRSN+cm2x7qtB41yWPAI&#xA;+ZYzyksK1m5lt7AyRM0cvKP05EPFlYNyqCP9XLMnJjjHqXJY6pp0A1EyLZzSANNLbLyieg2+s2xV&#xA;Y2pX7ce67tRjlEcne7rVdgZsePjIFVuOfzCYeoLmzivfgEkrtHMsLF4uaFW5RM3xcGSRdm+IGoPT&#xA;MiMrdF4YgAAKCmeh+TfryStnv8x/DFX1l5y/5R+f5p/xIZi4+bk5fped9z8/4ZkuM0en0HFXhf5t&#xA;eTv0Rq51W0jpp2oOSwHSOcjky+wf7Q+nAXIxysUyDy554/My98rQaU+oraaYF4Q30aAXjQqPT9NH&#xA;B4qBT7fHmD3ww04kbdJ2r2/HTeiI4p/Ift+HzZB5R038v4oLuw1+ylZr41fVeZlcMdy0ikEvU7kn&#xA;l8svnjkB6XmNP2rDNMnUmfF/DKJrg90R9+5SC8/LXyzpXmaPV4pjqnlTTJ47jVKIwjaBWBdRz6mn&#xA;VQTyHQ5TMCu49z0vZvaOWeQ4/wC9xj/KAV875n3PeG1nyZJ5fHmTypeRxqSscTaeFCPI1KR3FseK&#xA;k0UV5BZAuyla5rs2XwxZes0eklnycEdnjv5yJ+bEsscvmeBofJztycaYrelGnKo+sorsQ/2f7wla&#xA;/Z32y/CQRdUV4cccnCTxQvmL/Ylnl/yt5JvLYSaaXDMKJeRzN6gI3IboAf8AJZaZOT0+DSYBETw/&#xA;6YE2Px5sNu59Ej125hubw29zZufqutWNfjdfsllSu47le/fIZOMD0i/J1WozafNIxy7TH8cevvH4&#xA;96hq/wCYWrav5al0XUUSeWS8jvn1LcTSPHE8VJOzfC/WlfGuWiABt0s8kpAAnaPJ7J+XmhfobylZ&#xA;W7rxuJ0Nzcjv6ktDQ+6rxX6MscKZssmPX6RixeqaP/xyLH/mHi/4gMxJcy5ceQReRZOxV2KvO/zs&#xA;tIbnQtPEoJVLvlxBpU+k43yzEd2vKNnlCIiKERQqjooFAMuaV2KpfPcS3GpHTIbhLThALie4YFmC&#xA;M5RRGvQsSpycIW4Wu1sdPDikgLvzl5d8v3Q07RbV9R8wTkI8k5ZQrN0M0uznbfhFTb9uophmeHZq&#xA;7N0eTX8MifTM7AfLc9Phv/S6MQ/M3TvMyJYahrV+9ytxyFtBwEUEYIBPoIh4AfzUFSetTmPizxmT&#xA;XR67WdjY9HjjwSB3oiqovQtDs5L+3t1gjaS2srdGcqCeUhQbmny/DMuWQDmXyvHpTPNIQBMYyJPv&#xA;tifm7yFqLLZeZrG6t4YwIob7956U0MiFgzsrt8XFFQUTc/y9cxBl9ZiQ9/EAQBZLNptjfRLc2zBf&#xA;UHJZE+y1R3GWguOQg9P8mDWtUi0i/le1gkSVxdRAOAYoncGh6/Z3Gx+WDIfSyx/Um/mO31DR/KcU&#xA;GpW6Xdhbhli1S2V3R6n7L/76JJFQ4G/SvXNdHBWQzs79Ht9L2vgOMyyE8fDRj0lTB/L3/KOx/wDM&#xA;ZP8A8m4Mz8PV4rN0Rh6H5N+vLmls9/mP4Yq+sfOX/KPz/NP+JDMXHzcnL9Lzvufn/DMlxmj0+g4q&#xA;gNf0Wz1vSbnTLsfurgUDd0Ybq491O+KQaLxnTfN+q+U7iTy1rlot7YWbsioPgljDNy5xP3Vq8qN+&#xA;GR3BsbFGo0ePPDhkBKPcf0HmGb6drHlK4hW500XGt3UlTDpaL6Xp02rdSn4UWv39q5HPruCNyIj+&#xA;Ojp9F7JY5ZvSJTHcdgP6x6/D4r9f8va15k09rfVNTNov/Htp9ioWziA6BlNGlPuSPYDNDPtk8fpj&#xA;6fPmX0HT+zkIwqR9XSh6R7g8/EfmfyEZnjtQJJWUR6nGztCQpqAy7CobccgPpzOhlx6mqly/h6tf&#xA;Dk0YPpBJ24ulPaPIX/OTOiatENO83QJpt868FvEBazlJ2o4NWir71XuSuZksfc6d57qPlry751/M&#xA;XVrTyleJpOnR2itPJaRE288oYK4SNXjUJ8Q6bEioG9ckCQN2QmRdHm8iyxgn/kTQv035psbJl5W4&#xA;f1rmvT0o/iYH/W+z9OLGZoPpM9D8m/XknFbPX6Rir1TR/wDjkWP/ADDxf8QGYkuZcuPIIvIsnYq7&#xA;FWA/nF/xw7L/AJiv+ZbZZj5teTk8ky5pTex0OO8sElW4WO7kZhFE+ysFpsD/ADZq9R2mMWXgkPTX&#xA;Nz8OhOTHxA79zEb+yurTzjcRXMTRP9QhoD0NJpuh6H6M3OjyxyC4mw8b7WY5QwxEhR4/0SYc/lbz&#xA;RrH5g3D6BaGR4JImadwRAp9FC3Nvkdwu9MGcizbuPZfUyxabFOP1Rv8A3Unu/lv8p7Ge4g1XzW66&#xA;hcWUYWBGAS2hAoaIjFvpZvmKZhRiI2Ijm7/Xa+eolxTqIHQcvNIpb2HRDMbe4MJeR2T0yau3IkcV&#xA;Xr7ZmSgJcw8HpvEjM+ETud6eJ3ssh39RqSMzOldidjUj6cremD0Xybd2Nnp2nC/ha5t+JZ4I5OLs&#xA;HYkUIDdK9P1ZeMXpu3n8/beSOp8KGPiiDR7z7vx8mWaVc6fF5mikt6x2jGWOBZyN2kgdI0Y7D43Y&#xA;KPmB1zGldPSxq3oflqKF9Klie29ENI6T2z1ZakAMOLb8adjXKW55P+aXl/R9D1O3t9JtUtLe5DXU&#xA;sMdQnquwRiq9FFIxsNsvw9WnN0YQa0Pyb9eXNLZ7/MfwxV9SfmZrNno/lG5vrzl6CvEp4Dkas4A2&#xA;2zFx83Jy/S8Y/wCVq+VK9bjrX+7/ALcyXGcfzV8q06z9CP7v+3FXf8rV8qV63HWv93/birA/zO1f&#xA;yx5ghgv9PMq6nb/BJzj4iSHc7mp3Q9PavtgLbjlWzIPy38z+XLjTLfSY3jsb+JET0XAT1pKAM4b7&#xA;LMx7dc0eu7PMyZXv9n7Puel0XaUccRGrHXv/AG/ez36oIoJLq9mjsrKH++uZ2CoPpJGazF2dkkaO&#xA;w/HLvdll7VxRjcfUT0/X3PNPPv5oaLeadc6B5etjcpdAR3GqT1WoqCRChoRv+01Pkeub7S6GOLcD&#xA;f7XndXr55fqO3cOX7XmkGjajdXX1Syha9uQvNobYGVwB1qqgnNg605YjmWdfl5eDy2t3JcSrp+qT&#xA;ERyR3ZWFxCKMvFZeJozdfkMqyAvQdi49HkhKWWUbvbdhHmGOxj1q7WxdJLUvyQx/YHIBmVafsqxK&#xA;j5ZZHlu6zVxxxyyGM3C9nsP/ADj/AOXfR06+16Zfjum+rWpP++4zykI9meg/2OV5D0cZ65xXwGVW&#xA;incV8Bja0z3Tf+Oda/8AGGP/AIiMDJEYq7FXYqwH84v+OHZf8xX/ADLbLMfNrycnkmXNKYW13BJb&#xA;R2szek0RYxyEVQ8yCQ9Nx0677bZpe0ez5zlxw38v1O00esjCPBL5pldxX8+g3Uc6iYJ6YtZpCGpV&#xA;hUq4rXb+mYHZc5Y9SByvmGj2l08c+hldGqIPdv0TDTdZ0by/5fsbm4uDLPAjs1rF8JaT1nILt+yK&#xA;UoNznTzBnJ5nQ6rHptNGA9Uhew95YLqn5pXusX4tXukto3JESDaCIdRtX43P8znLhARCYYs2c8WY&#xA;0P5o5BTubG8NheS2MMt5erCWZlHqS8ahSwHgvKtAMrnPvdriwiIqIeVXDVkIpTjt9OBkHsv5WL5a&#xA;nsLeXWOKpHCAgqVVnV+NH4gsdvi6jBImlx44Ak0LT7zhe+W9cVdH0/T7dYZOXrXJSK2RkC0YfsUX&#xA;etWauMImiSWvNnIyQxwhKc8hocNfsSHQfNXm7yxSOylOv6JGaHT7l/8ASIlG3+j3JryA7JJ22BGA&#xA;gFzc2HJglwTFEdEb5p1/SPNj295BbzxxpEI5IbuJoZUcMWI38K9VJGGAIapkFh17oU0YL29ZUofg&#xA;/bFf15YJNRCWHv8AMfwySH0d+eEUcv5e3ayDkvrQbH/jIMxcX1OTl5PBPKnkSTzNqEthYCCOaKEz&#xA;sZy6qVVlQgFVferjMiUgHHjG2Sx/kRrMshSK402UjlyKSysAUYoQaRbHkrL8wfDIeKGfhFIvMP5b&#xA;3ug2j3V6kBjS5W0YRlyfUaFZx1VRTi1OvUHJRkCxlAhjv6Psv98rk6YMT13SmsbrmikW0prE3YHu&#xA;tfbIkOVjlYUr7Xdav7aC2vb6e5t7YUgilkZlX5Anr75AQA5BtMyeahb2F9cKXt4JJVX7TIpIH0jJ&#xA;0wJCrp2o3+k6kl5bkxXcJP2h/MCrBgfEHHk15cMckDE8izO+8/6Jq+jNDq2nLLeqKR1JABP7SOo5&#xA;D5ficJLqcXZ2XFk9EvT+OYYLDbyXN0lvbIXkmcRwx9WLOaKPma5F3YfW3lrRotE0Cw0qKnG0hWNm&#xA;H7T9Xb/ZOScxibKpngV2Ks803/jnWv8Axhj/AOIjAlEYq7FXYqwH84v+OHZf8xX/ADLbLMfNrycn&#xA;kmXNKceVbOC61J1mjWUJEzqjfZLVAFevjkJmgzgLKaav5a1b6tKdDnESyKpXTbkn0lkDVZldSTuu&#xA;3Fttq1GY4xwM+Mj1VVrnxnJDw7PBdkD3frp555q8s6xexNbz3clveJUmJhxiII6UHxAf5QJ+nM0T&#xA;7nDxaSOMbc2HaR+XnnDVdQTSrSyLugAd+S+mqdA7PUKAe3Km+22EzDYIEl9Efl7+V6+XtPSPVL06&#xA;jcPGYmgUfuOLkEqeQV3HTrwFNt8xchEvg5eOJi8I/MS0itvOutwxxqka3UhjVV4gIx5KAKDsctHJ&#xA;x5c2c+YvOf5dweTtDt4IpLrzh+jraGOPTqCT1EhCgXBoyOtV+wV5DsR1wRBvyZylGvNP9E8l3cuk&#xA;w6r5mkXRNPkRfV9UH1WZ13SOPdvH+hw89huxnqo6YDLOXBw8j5+TKdL8xflxpdr9Q0W4+qBvhlnn&#xA;gdxNy7SOVZqexFMTp5gOKPaXBqs1cUpzlsPSd/IAD9Clq/kjS9RiF3pxWxmlAaMqS1nLXpxYcuFf&#xA;ao+WVxyd7s8mExJBFEdGDappGo6XcfV76BoZDuhO6sP5kYVVh7g5aDbQRSUXmm210CXXjJ2kXY7e&#xA;PjkgUEPafzs/5QC7/wCM0H/JwZRi+puy8nhnlHULOwv5Zrm5e15R8FkV7iOoLAspNsQ/QfLMiQtx&#xA;4mmVHzbotVZdYvWYKwbldagKMeVPTIJ+GgX7Xf2yHCe5nxDvY5r2rza28FpYyXVyHlkkaCSW4mZ3&#xA;5FY2KyPIOQioBToNiTkwKYk2nvl78sXbjca0/Beos4z8X+zcdPkv35XLL3M44u9O/O/lXQNQ8py6&#xA;RIIrNag6eyrutyAeHBFBZ2bdSACxqcriTbbsHz4vl9NPlKakjPdLStqQVVf9c7FvkPvzLjG907lM&#xA;LO21DUbmO1tIzJKP7qGOihRt0GwGTkREWeTdgwSyHhgLKI13Rrq1kFrr1oUmIPpzqV9TancGjde/&#xA;jkIyjMWNwufSTxVYq+XcWNX2hXMCma3P1m2/34g3X/WXqOmAwIaBLvZZ+Sfl39K+cY7yReVtpSfW&#xA;WJ6eqfhiHz5fEP8AVymZ2ZPo/KFdirsVZ5pv/HOtf+MMf/ERgSiMVdirsVYD+cX/ABw7L/mK/wCZ&#xA;bZZj5teTk8ky5pT/AMlf8daT/jA3/ElyGTkzhzZv3yluef8A5na5ZaLqGjXepWk9zpLmRNQa1osq&#xA;IlCg5kEAMzHw9iCai3GLBachqnpXkjVfJeraSH8qSwNZr8Twp8LqWNKyh+T8iabycuXWmQkD1bIk&#xA;EbLPOfn/AMreT7Qz61ciKUr+5slo1xJQAgCOp26ULHj7DGMSeSykBzfM3nLzEPMvmO91tLJ9PjvS&#xA;rxWshJYIkaorEmn2wnL6cuqhTjSNm3q/5MWvki00eC6gghtfNNwSzX16PURqOQFjY7R7AdRlc7+D&#xA;djr4sp/NPTvMXmHTLWGx9Cz1mzLmOO7LC2nWQLUpIuysOA48vh33OSwZuC/N1/anZUNXw8RPovl1&#xA;uv1PO/Kv5c/nEmpmPXdAjmsJj/vSt1aD0vAhUmJZT4Ur39jZlyCQ5u29nPC7OmeHGKl/FsZj4neu&#xA;8PXBr2g+TNCTR3kW/vE5M1rFuis5LUJP2Vr9PemY4jbl9o60Z8pnTzzzF5r1TXXVbkrHaxGsFrGK&#xA;InaviTlsYgOslK0myTF69+dn/KAXf/GaD/k4MpxfU3ZeT5vzKcVlfl78vdW1PjPdg2Vmdwzj94w/&#xA;yUP6z+OVyyANkcZL0rRvL2k6PD6djAFY7PM3xSN/rN/DplEpEt8YgLH1iO419PLtndW1vqTx+oXu&#xA;m6A1osUQKtNJtUryXbevbER2tBlvSYW9taWWoS2KJdRazMCkGs3KLM7A/aWMKOMUZoP7sAd23wEs&#xA;gFHW/IGm+YLAjzGIf0gGKQahaghvD96aKla/LwwxmY8mV7U8g8y/lp5t8oXJ1CxLXVmmwuoQSQD2&#xA;kTqMyY5YyFFtwZ54pcUTRYZqerahqMqveymRkFFB2A8dvoy6MBEbM9Rqp5iOI8lKyju2mX6ty9Qm&#xA;goCa7jagry+WEkBxJEDm9s/LDy1qejWd5Jf2iWkl60bhAOMp4BgTItTx69PnmFlkCdkQtm2VM3Yq&#xA;7FWeab/xzrX/AIwx/wDERgSiMVdirsVYD+cX/HDsv+Yr/mW2WY+bXk5PJMuaU/8AJX/HWk/4wN/x&#xA;Jchk5M4c2b5S3MO88/Fc26NunBvhO43O+2W42rI85fypLZaimqeWb+XQ9RQ1529fTNTv8AIp+r2y&#xA;2+9qruX2HlOCO5fUdSuJNU1iT4nvrn4yHP7SqxP4742oCRS+XvNF/qZi1MABqj9JW/AJxUVUmNjy&#xA;rXYjj/XAimZadZiysYbUOZfRXj6jAAn3oMWTK9D866np0YtLkC/07vazb8f9R+q5CUAWcZkIzWvz&#xA;D1C4t/qOkqdO08bUVi0rA+Lnp9GCMEyydzESSTU7k9TljW7FVskkcal5GCqOpOKvbfzT0q41XylJ&#xA;p9uyrLPNDxZ6hQFbka0B7LlGM0bb5ixTBfL3kXR9I4zMPrd6N/XkGyn/ACE3A+e5yUshLGMAGSZW&#xA;zdilJvMXlHQvMEHDULcGZRSK6j+GVO4o3cex+imSjMhhKAlzSy01/wA9eTFZNT9TzN5cQEC5Ta+h&#xA;Wv7TEgkBan4ie3x5Ooy5bFhco89wzHyzrXl/zHC97oGpBpKfv4WWkyMduNxC1OQ7ciKnsxyuUSOb&#xA;ZGQPJObr0NOs3up54YLaNP8ASBOQkAB60Zq8BXtuPbAGRLyHzJ5S8v8Am7U1ufL2ntY2RNbjVpAY&#xA;opd6H0LcgO/+seK7Uy+MzHmWviJ5Mu8o+SPL2ip/o0f+lcQGvJOBkPXlxqyhBv0Xt1rlcpkshEBk&#xA;S2NsdzIKU3+JOv8Awe+QZLZbGFVokilzuFYqBT58j1xVCSJwJUgVU0+E1H3gnFVmKGeab/xzrX/j&#xA;DH/xEYGSIxV2KuxVgP5xf8cOy/5iv+ZbZZj5teTk8ky5pTjyrfW9pqnKduCSI0fM7AEkEVPh8OQm&#xA;LDOBos9BBAINQdwRlLcxzXWhTzJpDTxiaASIZYivqck9Qcl4UPKo7UyyHItc+YZVLP5GDqkWnIsJ&#xA;LxhWsJOTtyjJ4k2zsSAJF+2tDt4Mo3TsrSR+RZLsFdJcFWAKrp03EqQjhyvpCg/dcOnc7UJODdOz&#xA;zDzJNp82tXEunoI7RhGVRU9MK3przHGigEPWtAB4bZdHk1S5pZhYuxV2KuJAFT0xVLL3W7eAERES&#xA;OOrV+AfThEUGTF9R16WZzRjI3YnZR8hloi0yyPrvzUCdOQgbCVSf+BYZgB2BYpirsVdirsVcCQag&#xA;0I6EHFWM6t5C0q7vo9T02WTRdXiNVvbL4K9iGRSg3GxoR71ywZDyO7XLGDuNkcvl+S8njuvMN8+u&#xA;XMNPQSZEjtoiBTktun7sv1+Juvhg4u7ZIh37pwTXIM0bYSW6q4lKitKFqHxr+y+KrvrsAanpbcq1&#xA;Aj6Up/J9OKtfX4a/3VQPsD93t4/sb4qhZJGerNQGo6AAd+wxVTxVnmm/8c61/wCMMf8AxEYEojFX&#xA;Yq7FXln/ADkBqn1DQdKYMVMl4RWlVoIm2P35dhFlpzSoB5RY61bXAAciNz03qp+Ry0xahJMcCUy0&#xA;vX9Q04hY39SDvC+6/R/L9GRMQWQkQr33mL61qdteehxW3/3Xy3bx+Km33YBGkmVoyPziiWstsLMm&#xA;KYgy8peTfCOKFWKVDBTQk1rU48K8SlcebOUimC1EUfJWlVjG7NwUKBzEaMPsgk7k9zh4UcTH8kxd&#xA;irsVQl3qVtbAhjyk7IvX6fDCAgljOqeYnkJTlUf76Tp/sjkxFrlkSGe6mnPxt8PZR0ywBpMiVLFi&#xA;+2PM3/HLb/XXNcHbFiGKuxV2KuxVVitnlUsrKKHozAH7jiq82MwNCyClNiwxVv6hJw5GSMGrAqW3&#xA;2xVabKYblk3p+2P64qskjkioCw3r9lq/qxVZzb+Y/jirubfzH7zihosT1NfvxS7FWeab/wAc61/4&#xA;wx/8RGBKIxV2KuxV41/zk1/yjuj/APMY/wDyaOZGn5lxdVyD58guZoTVDt3U7g5lU4YkQn+l+ZXj&#xA;ojHb/fbnb/Yt2yswb45GT2moW1yPgaj90OxyBDaCicCq8NnLKgZGTc0oWAP3HFV/6OnrTlHWtAOa&#xA;1r9+KubTpAqESxEuK05jahp8sVWS2jRU9SWJSegMiD9ZxVjOua3JauYeSoKf7rZXYjp1UkDJxiwl&#xA;OmKXOozzEgEop606n5nLAGiUyULhYOxV2KvtvzD6P6Nb1eXHkv2KVrX3zXB2xYr/ALj/APi7/hcU&#xA;O/3H/wDF3/C4q7/cf/xd/wALirv9x/8Axd/wuKu/3H/8Xf8AC4q7/cf/AMXf8Lirv9x//F3/AAuK&#xA;u/3H/wDF3/C4q7/cf/xd/wALirv9x/8Axd/wuKu/3H/8Xf8AC4q7/cf/AMXf8Lirv9x//F3/AAuK&#xA;s10/j9QtuNePpJxr1pxHXAyV8VdirsVeU/8AOQf6B/QOl/pj616f1pvS+qeny5ema8vU7fLL8F3s&#xA;4+oqhbwv/kHX/a3/AOnXMj1eTiejzd/yDv8A7W//AE64+ryX0eabaT/gbmOX6a9P9in1blXtTvkZ&#xA;X5NsK82Y2f8Agz0h6n6W9vU+rcvpplZtuFK//Oj/APaz/wCnfBuuzv8AnR/+1n/0747rssl/wV6b&#xA;cP0pyptT6tX6K7Y7rsxjVf8AA1Gp+mvrNd+f1WtPbLBfk1yrzY4//KvuZ5/pjn3r9WrX6cn6vJoP&#xA;D5tf8g6/7W//AE7Y+ryX0ebv+Qdf9rf/AKdcfV5L6PN3/IO/+1v/ANOuPq8l9Hm7/kHX/a3/AOnb&#xA;H1eS+jzf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:bff77ce5-cdc1-480e-85a0-2e8657b25565</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:bff77ce5-cdc1-480e-85a0-2e8657b25565</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:1ec78f21-7611-4199-a5a0-295da0190840</stRef:instanceID>
            <stRef:documentID>xmp.did:1ec78f21-7611-4199-a5a0-295da0190840</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9055feea-6df3-418a-84b0-35eb367eec15</stEvt:instanceID>
                  <stEvt:when>2016-04-18T22:41:34+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bff77ce5-cdc1-480e-85a0-2e8657b25565</stEvt:instanceID>
                  <stEvt:when>2018-02-23T22:24:16+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>500.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BebasNeueLight</stFnt:fontName>
                  <stFnt:fontFamily>Bebas Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 001.003</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BebasNeue Light.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>BebasNeue</stFnt:fontName>
                  <stFnt:fontFamily>Bebas Neue</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.300</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>BebasNeue.otf</stFnt:fontFileName>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>OpenSans-CondensedLight</stFnt:fontName>
                  <stFnt:fontFamily>Open Sans</stFnt:fontFamily>
                  <stFnt:fontFace>Condensed Light</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 1.10</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>OpenSans-CondLight.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -500 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 500 li
500 500 li
500 0 li
cp
clp
500 0 mo
500 281.41 li
150.18 79.44 li
150.11 79.56 li
0 166.22 li
0 0 li
500 0 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.66656 .469917 .351537 .0740673 cmyk
f
gsave
500 0 mo
500 281.41 li
150.18 79.44 li
150.11 79.56 li
0 166.22 li
0 0 li
500 0 li
clp
gsave
338 282 mo
410 282 li
410 210 li
338 210 li
338 282 li
clp
388.778 217.195 mo
387.611 216.522 li
387.611 210 li
388.778 210 li
388.778 217.195 li
.702388 .509209 .384131 .123629 cmyk
f
402.972 225.391 mo
401.806 224.717 li
401.806 210 li
402.972 210 li
402.972 225.391 li
f
grestore
gsave
410 282 mo
482 282 li
482 210 li
410 210 li
410 282 li
clp
418.194 234.179 mo
417.028 233.506 li
417.028 210 li
418.194 210 li
418.194 234.179 li
.702388 .509209 .384131 .123629 cmyk
f
432.389 242.374 mo
431.222 241.701 li
431.222 210 li
432.389 210 li
432.389 242.374 li
f
460.778 258.765 mo
459.611 258.091 li
459.611 210 li
460.778 210 li
460.778 258.765 li
f
474.972 266.96 mo
473.806 266.286 li
473.806 210 li
474.972 210 li
474.972 266.96 li
f
446.583 250.57 mo
445.417 249.896 li
445.417 210 li
446.583 210 li
446.583 250.57 li
f
grestore
gsave
482 282 mo
554 282 li
554 210 li
482 210 li
482 282 li
clp
490.194 275.749 mo
489.028 275.075 li
489.028 210 li
490.194 210 li
490.194 275.749 li
.702388 .509209 .384131 .123629 cmyk
f
grestore
gsave
-22 210 mo
50 210 li
50 138 li
-22 138 li
-22 210 li
clp
0 166.22 mo
0 138 li
.388881 138 li
.388881 165.995 li
0 166.22 li
.702388 .509209 .384131 .123629 cmyk
f
27.6111 150.28 mo
27.6111 138 li
28.7778 138 li
28.7778 149.606 li
27.6111 150.28 li
f
41.8056 142.085 mo
41.8056 138 li
42.9722 138 li
42.9722 141.412 li
41.8056 142.085 li
f
13.4167 158.474 mo
13.4167 138 li
14.5833 138 li
14.5833 157.801 li
13.4167 158.474 li
f
grestore
gsave
194 210 mo
266 210 li
266 138 li
194 138 li
194 210 li
clp
258.972 142.252 mo
257.806 141.578 li
257.806 138 li
258.972 138 li
258.972 142.252 li
.702388 .509209 .384131 .123629 cmyk
f
grestore
gsave
266 210 mo
338 210 li
338 138 li
266 138 li
266 210 li
clp
274.194 151.04 mo
273.028 150.367 li
273.028 138 li
274.194 138 li
274.194 151.04 li
.702388 .509209 .384131 .123629 cmyk
f
288.389 159.235 mo
287.222 158.562 li
287.222 138 li
288.389 138 li
288.389 159.235 li
f
316.778 175.626 mo
315.611 174.952 li
315.611 138 li
316.778 138 li
316.778 175.626 li
f
330.972 183.821 mo
329.806 183.148 li
329.806 138 li
330.972 138 li
330.972 183.821 li
f
302.583 167.431 mo
301.417 166.757 li
301.417 138 li
302.583 138 li
302.583 167.431 li
f
grestore
gsave
338 210 mo
410 210 li
410 138 li
338 138 li
338 210 li
clp
388.778 210 mo
388.778 210 li
387.611 210 li
387.611 204.806 li
388.778 204.806 li
388.778 210 li
.702388 .509209 .384131 .123629 cmyk
f
402.972 210 mo
402.972 210 li
401.806 210 li
401.806 204.806 li
402.972 204.806 li
402.972 210 li
f
374.583 209 mo
373.417 208.327 li
373.417 204.806 li
374.583 204.806 li
374.583 209 li
f
346.194 192.61 mo
345.028 191.936 li
345.028 138 li
346.194 138 li
346.194 192.61 li
f
360.389 200.805 mo
359.222 200.131 li
359.222 138 li
360.389 138 li
360.389 200.805 li
f
388.778 204.806 mo
388.778 204.806 li
387.611 204.806 li
387.611 138 li
388.778 138 li
388.778 204.806 li
f
402.972 204.806 mo
402.972 204.806 li
401.806 204.806 li
401.806 138 li
402.972 138 li
402.972 204.806 li
f
374.583 204.806 mo
374.583 204.806 li
373.417 204.806 li
373.417 138 li
374.583 138 li
374.583 204.806 li
f
grestore
gsave
410 210 mo
482 210 li
482 138 li
410 138 li
410 210 li
clp
418.194 210 mo
418.194 210 li
417.028 210 li
417.028 204.806 li
418.194 204.806 li
418.194 210 li
.702388 .509209 .384131 .123629 cmyk
f
432.389 210 mo
432.389 210 li
431.222 210 li
431.222 204.806 li
432.389 204.806 li
432.389 210 li
f
460.778 210 mo
460.778 210 li
459.611 210 li
459.611 204.806 li
460.778 204.806 li
460.778 210 li
f
474.972 210 mo
474.972 210 li
473.806 210 li
473.806 204.806 li
474.972 204.806 li
474.972 210 li
f
446.583 210 mo
446.583 210 li
445.417 210 li
445.417 204.806 li
446.583 204.806 li
446.583 210 li
f
418.194 204.806 mo
418.194 204.806 li
417.028 204.806 li
417.028 138 li
418.194 138 li
418.194 204.806 li
f
432.389 204.806 mo
432.389 204.806 li
431.222 204.806 li
431.222 138 li
432.389 138 li
432.389 204.806 li
f
460.778 204.806 mo
460.778 204.806 li
459.611 204.806 li
459.611 138 li
460.778 138 li
460.778 204.806 li
f
474.972 204.806 mo
474.972 204.806 li
473.806 204.806 li
473.806 138 li
474.972 138 li
474.972 204.806 li
f
446.583 204.806 mo
446.583 204.806 li
445.417 204.806 li
445.417 138 li
446.583 138 li
446.583 204.806 li
f
grestore
gsave
482 210 mo
554 210 li
554 138 li
482 138 li
482 210 li
clp
490.194 210 mo
490.194 210 li
489.028 210 li
489.028 204.806 li
490.194 204.806 li
490.194 210 li
.702388 .509209 .384131 .123629 cmyk
f
490.194 204.806 mo
490.194 204.806 li
489.028 204.806 li
489.028 138 li
490.194 138 li
490.194 204.806 li
f
grestore
gsave
-22 138 mo
50 138 li
50 66 li
-22 66 li
-22 138 li
clp
.388881 138 mo
.388881 138 li
0 138 li
0 132.806 li
.388881 132.806 li
.388881 138 li
.702388 .509209 .384131 .123629 cmyk
f
28.7778 138 mo
28.7778 138 li
27.6111 138 li
27.6111 132.806 li
28.7778 132.806 li
28.7778 138 li
f
42.9722 138 mo
42.9722 138 li
41.8056 138 li
41.8056 132.806 li
42.9722 132.806 li
42.9722 138 li
f
14.5833 138 mo
14.5833 138 li
13.4167 138 li
13.4167 132.806 li
14.5833 132.806 li
14.5833 138 li
f
.388881 132.806 mo
.388881 132.806 li
0 132.806 li
0 66 li
.388881 66 li
.388881 132.806 li
f
28.7778 132.806 mo
28.7778 132.806 li
27.6111 132.806 li
27.6111 66 li
28.7778 66 li
28.7778 132.806 li
f
42.9722 132.806 mo
42.9722 132.806 li
41.8056 132.806 li
41.8056 66 li
42.9722 66 li
42.9722 132.806 li
f
14.5833 132.806 mo
14.5833 132.806 li
13.4167 132.806 li
13.4167 66 li
14.5833 66 li
14.5833 132.806 li
f
grestore
gsave
50 138 mo
122 138 li
122 66 li
50 66 li
50 138 li
clp
57.0277 133.297 mo
57.0277 132.806 li
57.8795 132.806 li
57.0277 133.297 li
.702388 .509209 .384131 .123629 cmyk
f
57.8795 132.806 mo
57.0277 132.806 li
57.0277 66 li
58.1945 66 li
58.1945 132.624 li
57.8795 132.806 li
f
71.2222 125.103 mo
71.2222 66 li
72.3889 66 li
72.3889 124.429 li
71.2222 125.103 li
f
99.6111 108.714 mo
99.6111 66 li
100.778 66 li
100.778 108.04 li
99.6111 108.714 li
f
113.806 100.519 mo
113.806 66 li
114.972 66 li
114.972 99.8454 li
113.806 100.519 li
f
85.4166 116.908 mo
85.4166 66 li
86.5833 66 li
86.5833 116.235 li
85.4166 116.908 li
f
grestore
gsave
122 138 mo
194 138 li
194 66 li
122 66 li
122 138 li
clp
129.028 91.7309 mo
129.028 66 li
130.194 66 li
130.194 91.0574 li
129.028 91.7309 li
.702388 .509209 .384131 .123629 cmyk
f
143.222 83.5364 mo
143.222 66 li
144.389 66 li
144.389 82.8628 li
143.222 83.5364 li
f
171.611 80.9501 mo
171.611 66 li
172.778 66 li
172.778 80.2765 li
171.611 80.9501 li
f
185.806 72.7549 mo
185.806 66 li
186.972 66 li
186.972 72.0814 li
185.806 72.7549 li
f
158.583 84.2917 mo
157.417 83.6182 li
157.417 66 li
158.583 66 li
158.583 84.2917 li
f
grestore
gsave
194 138 mo
266 138 li
266 66 li
194 66 li
194 138 li
clp
244.778 134.056 mo
243.611 133.383 li
243.611 132.806 li
244.778 132.806 li
244.778 134.056 li
.702388 .509209 .384131 .123629 cmyk
f
258.972 138 mo
258.972 138 li
257.806 138 li
257.806 132.806 li
258.972 132.806 li
258.972 138 li
f
202.195 109.471 mo
201.028 108.797 li
201.028 98.9219 li
202.195 98.2483 li
202.195 109.471 li
f
215.222 111.028 mo
215.222 90.6867 li
215.632 90.3902 216.024 90.0382 216.389 89.645 cv
216.389 110.355 li
215.222 111.028 li
f
244.778 132.806 mo
244.778 132.806 li
243.611 132.806 li
243.611 66 li
244.778 66 li
244.778 132.806 li
f
258.972 132.806 mo
258.972 132.806 li
257.806 132.806 li
257.806 66 li
258.972 66 li
258.972 132.806 li
f
229.417 102.833 mo
229.417 66 li
230.583 66 li
230.583 102.159 li
229.417 102.833 li
f
grestore
gsave
266 138 mo
338 138 li
338 66 li
266 66 li
266 138 li
clp
274.194 138 mo
274.194 138 li
273.028 138 li
273.028 132.806 li
274.194 132.806 li
274.194 138 li
.702388 .509209 .384131 .123629 cmyk
f
288.389 138 mo
288.389 138 li
287.222 138 li
287.222 132.806 li
288.389 132.806 li
288.389 138 li
f
316.778 138 mo
316.778 138 li
315.611 138 li
315.611 132.806 li
316.778 132.806 li
316.778 138 li
f
330.972 138 mo
330.972 138 li
329.806 138 li
329.806 132.806 li
330.972 132.806 li
330.972 138 li
f
302.583 138 mo
302.583 138 li
301.417 138 li
301.417 132.806 li
302.583 132.806 li
302.583 138 li
f
274.194 132.806 mo
274.194 132.806 li
273.028 132.806 li
273.028 66 li
274.194 66 li
274.194 132.806 li
f
288.389 132.806 mo
288.389 132.806 li
287.222 132.806 li
287.222 66 li
288.389 66 li
288.389 132.806 li
f
316.778 132.806 mo
316.778 132.806 li
315.611 132.806 li
315.611 66 li
316.778 66 li
316.778 132.806 li
f
330.972 132.806 mo
330.972 132.806 li
329.806 132.806 li
329.806 66 li
330.972 66 li
330.972 132.806 li
f
302.583 132.806 mo
302.583 132.806 li
301.417 132.806 li
301.417 66 li
302.583 66 li
302.583 132.806 li
f
grestore
gsave
338 138 mo
410 138 li
410 66 li
338 66 li
338 138 li
clp
346.194 138 mo
346.194 138 li
345.028 138 li
345.028 132.806 li
346.194 132.806 li
346.194 138 li
.702388 .509209 .384131 .123629 cmyk
f
360.389 138 mo
360.389 138 li
359.222 138 li
359.222 132.806 li
360.389 132.806 li
360.389 138 li
f
388.778 138 mo
388.778 138 li
387.611 138 li
387.611 132.806 li
388.778 132.806 li
388.778 138 li
f
402.972 138 mo
402.972 138 li
401.806 138 li
401.806 132.806 li
402.972 132.806 li
402.972 138 li
f
374.583 138 mo
374.583 138 li
373.417 138 li
373.417 132.806 li
374.583 132.806 li
374.583 138 li
f
346.194 132.806 mo
346.194 132.806 li
345.028 132.806 li
345.028 66 li
346.194 66 li
346.194 132.806 li
f
360.389 132.806 mo
360.389 132.806 li
359.222 132.806 li
359.222 94.5104 li
360.389 95.184 li
360.389 132.806 li
f
388.778 132.806 mo
388.778 132.806 li
387.611 132.806 li
387.611 117.784 li
388.778 119.804 li
388.778 132.806 li
388.778 78.3196 mo
387.611 77.6461 li
387.611 66 li
388.778 66 li
388.778 78.3196 li
f
402.972 132.806 mo
402.972 132.806 li
401.806 132.806 li
401.806 66 li
402.972 66 li
402.972 132.806 li
f
374.583 132.806 mo
374.583 132.806 li
373.417 132.806 li
373.417 102.706 li
374.583 103.379 li
374.583 132.806 li
374.583 70.1245 mo
373.417 69.4509 li
373.417 66 li
374.583 66 li
374.583 70.1245 li
f
grestore
gsave
410 138 mo
482 138 li
482 66 li
410 66 li
410 138 li
clp
418.194 138 mo
418.194 138 li
417.028 138 li
417.028 132.806 li
418.194 132.806 li
418.194 138 li
.702388 .509209 .384131 .123629 cmyk
f
432.389 138 mo
432.389 138 li
431.222 138 li
431.222 132.806 li
432.389 132.806 li
432.389 138 li
f
460.778 138 mo
460.778 138 li
459.611 138 li
459.611 132.806 li
460.778 132.806 li
460.778 138 li
f
474.972 138 mo
474.972 138 li
473.806 138 li
473.806 132.806 li
474.972 132.806 li
474.972 138 li
f
446.583 138 mo
446.583 138 li
445.417 138 li
445.417 132.806 li
446.583 132.806 li
446.583 138 li
f
418.194 132.806 mo
418.194 132.806 li
417.028 132.806 li
417.028 66 li
418.194 66 li
418.194 132.806 li
f
432.389 132.806 mo
432.389 132.806 li
431.222 132.806 li
431.222 66 li
432.389 66 li
432.389 132.806 li
f
460.778 132.806 mo
460.778 132.806 li
459.611 132.806 li
459.611 66 li
460.778 66 li
460.778 132.806 li
f
474.972 132.806 mo
474.972 132.806 li
473.806 132.806 li
473.806 66 li
474.972 66 li
474.972 132.806 li
f
446.583 132.806 mo
446.583 132.806 li
445.417 132.806 li
445.417 66 li
446.583 66 li
446.583 132.806 li
f
grestore
gsave
482 138 mo
554 138 li
554 66 li
482 66 li
482 138 li
clp
490.194 138 mo
490.194 138 li
489.028 138 li
489.028 132.806 li
490.194 132.806 li
490.194 138 li
.702388 .509209 .384131 .123629 cmyk
f
490.194 132.806 mo
490.194 132.806 li
489.028 132.806 li
489.028 66 li
490.194 66 li
490.194 132.806 li
f
grestore
gsave
-22 66 mo
50 66 li
50 -6.00006 li
-22 -6.00006 li
-22 66 li
clp
.388881 66 mo
.388881 66 li
0 66 li
0 60.8056 li
.388881 60.8056 li
.388881 66 li
.702388 .509209 .384131 .123629 cmyk
f
28.7778 66 mo
28.7778 66 li
27.6111 66 li
27.6111 60.8056 li
28.7778 60.8056 li
28.7778 66 li
f
42.9722 66 mo
42.9722 66 li
41.8056 66 li
41.8056 60.8056 li
42.9722 60.8056 li
42.9722 66 li
f
14.5833 66 mo
14.5833 66 li
13.4167 66 li
13.4167 60.8056 li
14.5833 60.8056 li
14.5833 66 li
f
.388881 60.8056 mo
.388881 60.8056 li
0 60.8056 li
0 0 li
.388881 0 li
.388881 60.8056 li
f
28.7778 60.8056 mo
28.7778 60.8056 li
27.6111 60.8056 li
27.6111 0 li
28.7778 0 li
28.7778 60.8056 li
f
42.9722 60.8056 mo
42.9722 60.8056 li
41.8056 60.8056 li
41.8056 0 li
42.9722 0 li
42.9722 60.8056 li
f
14.5833 60.8056 mo
14.5833 60.8056 li
13.4167 60.8056 li
13.4167 0 li
14.5833 0 li
14.5833 60.8056 li
f
grestore
gsave
50 66 mo
122 66 li
122 -6.00006 li
50 -6.00006 li
50 66 li
clp
58.1945 66 mo
58.1945 66 li
57.0277 66 li
57.0277 60.8056 li
58.1945 60.8056 li
58.1945 66 li
.702388 .509209 .384131 .123629 cmyk
f
72.3889 66 mo
72.3889 66 li
71.2222 66 li
71.2222 60.8056 li
72.3889 60.8056 li
72.3889 66 li
f
100.778 66 mo
100.778 66 li
99.6111 66 li
99.6111 60.8056 li
100.778 60.8056 li
100.778 66 li
f
114.972 66 mo
114.972 66 li
113.806 66 li
113.806 60.8056 li
114.972 60.8056 li
114.972 66 li
f
86.5833 66 mo
86.5833 66 li
85.4166 66 li
85.4166 60.8056 li
86.5833 60.8056 li
86.5833 66 li
f
58.1945 60.8056 mo
58.1945 60.8056 li
57.0277 60.8056 li
57.0277 0 li
58.1945 0 li
58.1945 60.8056 li
f
72.3889 60.8056 mo
72.3889 60.8056 li
71.2222 60.8056 li
71.2222 0 li
72.3889 0 li
72.3889 60.8056 li
f
100.778 60.8056 mo
100.778 60.8056 li
99.6111 60.8056 li
99.6111 0 li
100.778 0 li
100.778 60.8056 li
f
114.972 60.8056 mo
114.972 60.8056 li
113.806 60.8056 li
113.806 0 li
114.972 0 li
114.972 60.8056 li
f
86.5833 60.8056 mo
86.5833 60.8056 li
85.4166 60.8056 li
85.4166 0 li
86.5833 0 li
86.5833 60.8056 li
f
grestore
gsave
122 66 mo
194 66 li
194 -6.00006 li
122 -6.00006 li
122 66 li
clp
130.194 66 mo
130.194 66 li
129.028 66 li
129.028 60.8056 li
130.194 60.8056 li
130.194 66 li
.702388 .509209 .384131 .123629 cmyk
f
144.389 66 mo
144.389 66 li
143.222 66 li
143.222 60.8056 li
144.389 60.8056 li
144.389 66 li
f
172.778 66 mo
172.778 66 li
171.611 66 li
171.611 60.8056 li
172.778 60.8056 li
172.778 66 li
f
186.972 66 mo
186.972 66 li
185.806 66 li
185.806 60.8056 li
186.972 60.8056 li
186.972 66 li
f
158.583 66 mo
158.583 66 li
157.417 66 li
157.417 60.8056 li
158.583 60.8056 li
158.583 66 li
f
130.194 60.8056 mo
130.194 60.8056 li
129.028 60.8056 li
129.028 0 li
130.194 0 li
130.194 60.8056 li
f
144.389 60.8056 mo
144.389 60.8056 li
143.222 60.8056 li
143.222 0 li
144.389 0 li
144.389 60.8056 li
f
172.778 60.8056 mo
172.778 60.8056 li
171.611 60.8056 li
171.611 0 li
172.778 0 li
172.778 60.8056 li
f
186.972 60.8056 mo
186.972 60.8056 li
185.806 60.8056 li
185.806 0 li
186.972 0 li
186.972 60.8056 li
f
158.583 60.8056 mo
158.583 60.8056 li
157.417 60.8056 li
157.417 0 li
158.583 0 li
158.583 60.8056 li
f
grestore
gsave
194 66 mo
266 66 li
266 -6.00006 li
194 -6.00006 li
194 66 li
clp
201.028 63.9664 mo
201.028 60.8056 li
202.195 60.8056 li
202.195 63.2928 li
201.028 63.9664 li
.702388 .509209 .384131 .123629 cmyk
f
244.778 66 mo
244.778 66 li
243.611 66 li
243.611 60.8056 li
244.778 60.8056 li
244.778 66 li
f
258.972 66 mo
258.972 66 li
257.806 66 li
257.806 60.8056 li
258.972 60.8056 li
258.972 66 li
f
230.583 66 mo
230.583 66 li
229.417 66 li
229.417 60.8056 li
230.583 60.8056 li
230.583 66 li
f
202.195 60.8056 mo
202.195 60.8056 li
201.028 60.8056 li
201.028 0 li
202.195 0 li
202.195 60.8056 li
f
215.222 55.827 mo
215.222 0 li
216.389 0 li
216.389 55.5556 li
216.024 55.5722 215.633 55.661 215.222 55.827 cv
f
244.778 60.8056 mo
244.778 60.8056 li
243.611 60.8056 li
243.611 0 li
244.778 0 li
244.778 60.8056 li
f
258.972 60.8056 mo
258.972 60.8056 li
257.806 60.8056 li
257.806 0 li
258.972 0 li
258.972 60.8056 li
f
230.583 60.8056 mo
230.583 60.8056 li
229.417 60.8056 li
229.417 0 li
230.583 0 li
230.583 60.8056 li
f
grestore
gsave
266 66 mo
338 66 li
338 -6.00006 li
266 -6.00006 li
266 66 li
clp
274.194 66 mo
274.194 66 li
273.028 66 li
273.028 60.8056 li
274.194 60.8056 li
274.194 66 li
.702388 .509209 .384131 .123629 cmyk
f
288.389 66 mo
288.389 66 li
287.222 66 li
287.222 60.8056 li
288.389 60.8056 li
288.389 66 li
f
316.778 66 mo
316.778 66 li
315.611 66 li
315.611 60.8056 li
316.778 60.8056 li
316.778 66 li
f
330.972 66 mo
330.972 66 li
329.806 66 li
329.806 60.8056 li
330.972 60.8056 li
330.972 66 li
f
302.583 66 mo
302.583 66 li
301.417 66 li
301.417 60.8056 li
302.583 60.8056 li
302.583 66 li
f
274.194 60.8056 mo
274.194 60.8056 li
273.028 60.8056 li
273.028 0 li
274.194 0 li
274.194 60.8056 li
f
288.389 60.8056 mo
288.389 60.8056 li
287.222 60.8056 li
287.222 0 li
288.389 0 li
288.389 60.8056 li
f
316.778 60.8056 mo
316.778 60.8056 li
315.611 60.8056 li
315.611 0 li
316.778 0 li
316.778 60.8056 li
f
330.972 60.8056 mo
330.972 60.8056 li
329.806 60.8056 li
329.806 0 li
330.972 0 li
330.972 60.8056 li
f
302.583 60.8056 mo
302.583 60.8056 li
301.417 60.8056 li
301.417 0 li
302.583 0 li
302.583 60.8056 li
f
grestore
gsave
338 66 mo
410 66 li
410 -6.00006 li
338 -6.00006 li
338 66 li
clp
346.194 66 mo
346.194 66 li
345.028 66 li
345.028 60.8056 li
346.194 60.8056 li
346.194 66 li
.702388 .509209 .384131 .123629 cmyk
f
360.389 61.9293 mo
359.222 61.2557 li
359.222 60.8056 li
360.389 60.8056 li
360.389 61.9293 li
f
388.778 66 mo
388.778 66 li
387.611 66 li
387.611 60.8056 li
388.778 60.8056 li
388.778 66 li
f
402.972 66 mo
402.972 66 li
401.806 66 li
401.806 60.8056 li
402.972 60.8056 li
402.972 66 li
f
374.583 66 mo
374.583 66 li
373.417 66 li
373.417 60.8056 li
374.583 60.8056 li
374.583 66 li
f
346.194 60.8056 mo
346.194 60.8056 li
345.028 60.8056 li
345.028 0 li
346.194 0 li
346.194 60.8056 li
f
360.389 60.8056 mo
360.389 60.8056 li
359.222 60.8056 li
359.222 0 li
360.389 0 li
360.389 60.8056 li
f
388.778 60.8056 mo
388.778 60.8056 li
387.611 60.8056 li
387.611 0 li
388.778 0 li
388.778 60.8056 li
f
402.972 60.8056 mo
402.972 60.8056 li
401.806 60.8056 li
401.806 0 li
402.972 0 li
402.972 60.8056 li
f
374.583 60.8056 mo
374.583 60.8056 li
373.417 60.8056 li
373.417 0 li
374.583 0 li
374.583 60.8056 li
f
grestore
gsave
410 66 mo
482 66 li
482 -6.00006 li
410 -6.00006 li
410 66 li
clp
418.194 66 mo
418.194 66 li
417.028 66 li
417.028 60.8056 li
418.194 60.8056 li
418.194 66 li
.702388 .509209 .384131 .123629 cmyk
f
432.389 66 mo
432.389 66 li
431.222 66 li
431.222 60.8056 li
432.389 60.8056 li
432.389 66 li
f
460.778 66 mo
460.778 66 li
459.611 66 li
459.611 60.8056 li
460.778 60.8056 li
460.778 66 li
f
474.972 66 mo
474.972 66 li
473.806 66 li
473.806 60.8056 li
474.972 60.8056 li
474.972 66 li
f
446.583 66 mo
446.583 66 li
445.417 66 li
445.417 60.8056 li
446.583 60.8056 li
446.583 66 li
f
418.194 60.8056 mo
418.194 60.8056 li
417.028 60.8056 li
417.028 0 li
418.194 0 li
418.194 60.8056 li
f
432.389 60.8056 mo
432.389 60.8056 li
431.222 60.8056 li
431.222 0 li
432.389 0 li
432.389 60.8056 li
f
460.778 60.8056 mo
460.778 60.8056 li
459.611 60.8056 li
459.611 0 li
460.778 0 li
460.778 60.8056 li
f
474.972 60.8056 mo
474.972 60.8056 li
473.806 60.8056 li
473.806 0 li
474.972 0 li
474.972 60.8056 li
f
446.583 60.8056 mo
446.583 60.8056 li
445.417 60.8056 li
445.417 0 li
446.583 0 li
446.583 60.8056 li
f
grestore
gsave
482 66 mo
554 66 li
554 -6.00006 li
482 -6.00006 li
482 66 li
clp
490.194 66 mo
490.194 66 li
489.028 66 li
489.028 60.8056 li
490.194 60.8056 li
490.194 66 li
.702388 .509209 .384131 .123629 cmyk
f
490.194 60.8056 mo
490.194 60.8056 li
489.028 60.8056 li
489.028 0 li
490.194 0 li
490.194 60.8056 li
f
grestore
grestore
500 281.41 mo
500 365.57 li
267.17 500 li
142.47 500 li
0 417.74 li
0 166.22 li
150.11 79.56 li
150.18 79.44 li
500 281.41 li
.48719 .327733 .287388 .00408942 cmyk
f
500 365.57 mo
500 500 li
267.17 500 li
500 365.57 li
cp
.66656 .469917 .351537 .0740673 cmyk
f
500 500 mo
500 385.042 li
300.896 500 li
500 500 li
cp
gsave
grestore
/559068928.0 
<<
/ID /559068928.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 28.7998 28.8008 ] 
/XStep 28.7998 
/YStep 28.8008 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
{56.8794 .00126765 mo
28.08 .00126765 li
28.08 28.8006 li
56.8794 28.8006 li
56.8794 .00126765 li
cp
}exec
false sop
.824033 .545769 .401923 .173983 cmyk
f
{28.0796 .00126765 mo
-.71972 .00126765 li
-.71972 28.8006 li
28.0796 28.8006 li
28.0796 .00126765 li
cp
}exec
f
{28.08 -1.43961 mo
28.875 -1.43961 29.5196 -.795081 29.5196 -.000162345 cv
29.5196 .794768 28.875 1.4393 28.08 1.4393 cv
27.2841 1.4393 26.6397 .794768 26.6397 -.000162345 cv
26.6397 -.795081 27.2841 -1.43961 28.08 -1.43961 cv
cp
}exec
.798642 .498665 .39762 .138888 cmyk
f
{13.6796 -1.43961 mo
14.4746 -1.43961 15.1201 -.795081 15.1201 -.000162345 cv
15.1201 .794768 14.4746 1.4393 13.6796 1.4393 cv
12.8837 1.4393 12.2402 .794768 12.2402 -.000162345 cv
12.2402 -.795081 12.8837 -1.43961 13.6796 -1.43961 cv
cp
}exec
f
{28.08 12.9588 mo
28.875 12.9588 29.5196 13.6053 29.5196 14.4002 cv
29.5196 15.1952 28.875 15.8397 28.08 15.8397 cv
27.2841 15.8397 26.6397 15.1952 26.6397 14.4002 cv
26.6397 13.6053 27.2841 12.9588 28.08 12.9588 cv
cp
}exec
f
{13.6796 12.9588 mo
14.4746 12.9588 15.1201 13.6053 15.1201 14.4002 cv
15.1201 15.1952 14.4746 15.8397 13.6796 15.8397 cv
12.8837 15.8397 12.2402 15.1952 12.2402 14.4002 cv
12.2402 13.6053 12.8837 12.9588 13.6796 12.9588 cv
cp
}exec
f
{6.4795 5.75961 mo
7.27442 5.75961 7.91995 6.40414 7.91995 7.19906 cv
7.91995 7.99594 7.27442 8.64049 6.4795 8.64049 cv
5.6836 8.64049 5.04005 7.99594 5.04005 7.19906 cv
5.04005 6.40414 5.6836 5.75961 6.4795 5.75961 cv
cp
}exec
f
{20.8799 5.75961 mo
21.6749 5.75961 22.3203 6.40414 22.3203 7.19906 cv
22.3203 7.99594 21.6749 8.64049 20.8799 8.64049 cv
20.084 8.64049 19.4394 7.99594 19.4394 7.19906 cv
19.4394 6.40414 20.084 5.75961 20.8799 5.75961 cv
cp
}exec
f
{6.4795 20.16 mo
7.27442 20.16 7.91995 20.8045 7.91995 21.5995 cv
7.91995 22.3963 7.27442 23.0409 6.4795 23.0409 cv
5.6836 23.0409 5.04005 22.3963 5.04005 21.5995 cv
5.04005 20.8045 5.6836 20.16 6.4795 20.16 cv
cp
}exec
f
{20.8799 20.16 mo
21.6749 20.16 22.3203 20.8045 22.3203 21.5995 cv
22.3203 22.3963 21.6749 23.0409 20.8799 23.0409 cv
20.084 23.0409 19.4394 22.3963 19.4394 21.5995 cv
19.4394 20.8045 20.084 20.16 20.8799 20.16 cv
cp
}exec
f
{-.71972 -1.43961 mo
.0752795 -1.43961 .71978 -.795081 .71978 -.000162345 cv
.71978 .794768 .0752795 1.4393 -.71972 1.4393 cv
-1.51562 1.4393 -2.16012 .794768 -2.16012 -.000162345 cv
-2.16012 -.795081 -1.51562 -1.43961 -.71972 -1.43961 cv
cp
}exec
f
{-.71972 12.9588 mo
.0752795 12.9588 .71978 13.6053 .71978 14.4002 cv
.71978 15.1952 .0752795 15.8397 -.71972 15.8397 cv
-1.51562 15.8397 -2.16012 15.1952 -2.16012 14.4002 cv
-2.16012 13.6053 -1.51562 12.9588 -.71972 12.9588 cv
cp
}exec
f
{28.08 27.3611 mo
28.875 27.3611 29.5196 28.0057 29.5196 28.8006 cv
29.5196 29.5955 28.875 30.24 28.08 30.24 cv
27.2841 30.24 26.6397 29.5955 26.6397 28.8006 cv
26.6397 28.0057 27.2841 27.3611 28.08 27.3611 cv
cp
}exec
f
{13.6796 27.3611 mo
14.4746 27.3611 15.1201 28.0057 15.1201 28.8006 cv
15.1201 29.5955 14.4746 30.24 13.6796 30.24 cv
12.8837 30.24 12.2402 29.5955 12.2402 28.8006 cv
12.2402 28.0057 12.8837 27.3611 13.6796 27.3611 cv
cp
}exec
f
{-.71972 27.3611 mo
.0752795 27.3611 .71978 28.0057 .71978 28.8006 cv
.71978 29.5955 .0752795 30.24 -.71972 30.24 cv
-1.51562 30.24 -2.16012 29.5955 -2.16012 28.8006 cv
-2.16012 28.0057 -1.51562 27.3611 -.71972 27.3611 cv
cp
}exec
f
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/559068928.0 /Pattern get_res
[1 0 0 -1 -670 -150 ]make_pattern set_pattern
f
2 vmreclaim
142.47 500 mo
0 500 li
0 417.74 li
142.47 500 li
cp
false sop
.66656 .469917 .351537 .0740673 cmyk
f
112.405 500 mo
0 500 li
0 435.099 li
112.405 500 li
cp
gsave
grestore
/559063936.0 
<<
/ID /559063936.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 28.7998 28.8008 ] 
/XStep 28.7998 
/YStep 28.8008 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
{56.8794 .00126765 mo
28.08 .00126765 li
28.08 28.8006 li
56.8794 28.8006 li
56.8794 .00126765 li
cp
}exec
false sop
.824033 .545769 .401923 .173983 cmyk
f
{28.0796 .00126765 mo
-.71972 .00126765 li
-.71972 28.8006 li
28.0796 28.8006 li
28.0796 .00126765 li
cp
}exec
f
{28.08 -1.43961 mo
28.875 -1.43961 29.5196 -.795081 29.5196 -.000162345 cv
29.5196 .794768 28.875 1.4393 28.08 1.4393 cv
27.2841 1.4393 26.6397 .794768 26.6397 -.000162345 cv
26.6397 -.795081 27.2841 -1.43961 28.08 -1.43961 cv
cp
}exec
.798642 .498665 .39762 .138888 cmyk
f
{13.6796 -1.43961 mo
14.4746 -1.43961 15.1201 -.795081 15.1201 -.000162345 cv
15.1201 .794768 14.4746 1.4393 13.6796 1.4393 cv
12.8837 1.4393 12.2402 .794768 12.2402 -.000162345 cv
12.2402 -.795081 12.8837 -1.43961 13.6796 -1.43961 cv
cp
}exec
f
{28.08 12.9588 mo
28.875 12.9588 29.5196 13.6053 29.5196 14.4002 cv
29.5196 15.1952 28.875 15.8397 28.08 15.8397 cv
27.2841 15.8397 26.6397 15.1952 26.6397 14.4002 cv
26.6397 13.6053 27.2841 12.9588 28.08 12.9588 cv
cp
}exec
f
{13.6796 12.9588 mo
14.4746 12.9588 15.1201 13.6053 15.1201 14.4002 cv
15.1201 15.1952 14.4746 15.8397 13.6796 15.8397 cv
12.8837 15.8397 12.2402 15.1952 12.2402 14.4002 cv
12.2402 13.6053 12.8837 12.9588 13.6796 12.9588 cv
cp
}exec
f
{6.4795 5.75961 mo
7.27442 5.75961 7.91995 6.40414 7.91995 7.19906 cv
7.91995 7.99594 7.27442 8.64049 6.4795 8.64049 cv
5.6836 8.64049 5.04005 7.99594 5.04005 7.19906 cv
5.04005 6.40414 5.6836 5.75961 6.4795 5.75961 cv
cp
}exec
f
{20.8799 5.75961 mo
21.6749 5.75961 22.3203 6.40414 22.3203 7.19906 cv
22.3203 7.99594 21.6749 8.64049 20.8799 8.64049 cv
20.084 8.64049 19.4394 7.99594 19.4394 7.19906 cv
19.4394 6.40414 20.084 5.75961 20.8799 5.75961 cv
cp
}exec
f
{6.4795 20.16 mo
7.27442 20.16 7.91995 20.8045 7.91995 21.5995 cv
7.91995 22.3963 7.27442 23.0409 6.4795 23.0409 cv
5.6836 23.0409 5.04005 22.3963 5.04005 21.5995 cv
5.04005 20.8045 5.6836 20.16 6.4795 20.16 cv
cp
}exec
f
{20.8799 20.16 mo
21.6749 20.16 22.3203 20.8045 22.3203 21.5995 cv
22.3203 22.3963 21.6749 23.0409 20.8799 23.0409 cv
20.084 23.0409 19.4394 22.3963 19.4394 21.5995 cv
19.4394 20.8045 20.084 20.16 20.8799 20.16 cv
cp
}exec
f
{-.71972 -1.43961 mo
.0752795 -1.43961 .71978 -.795081 .71978 -.000162345 cv
.71978 .794768 .0752795 1.4393 -.71972 1.4393 cv
-1.51562 1.4393 -2.16012 .794768 -2.16012 -.000162345 cv
-2.16012 -.795081 -1.51562 -1.43961 -.71972 -1.43961 cv
cp
}exec
f
{-.71972 12.9588 mo
.0752795 12.9588 .71978 13.6053 .71978 14.4002 cv
.71978 15.1952 .0752795 15.8397 -.71972 15.8397 cv
-1.51562 15.8397 -2.16012 15.1952 -2.16012 14.4002 cv
-2.16012 13.6053 -1.51562 12.9588 -.71972 12.9588 cv
cp
}exec
f
{28.08 27.3611 mo
28.875 27.3611 29.5196 28.0057 29.5196 28.8006 cv
29.5196 29.5955 28.875 30.24 28.08 30.24 cv
27.2841 30.24 26.6397 29.5955 26.6397 28.8006 cv
26.6397 28.0057 27.2841 27.3611 28.08 27.3611 cv
cp
}exec
f
{13.6796 27.3611 mo
14.4746 27.3611 15.1201 28.0057 15.1201 28.8006 cv
15.1201 29.5955 14.4746 30.24 13.6796 30.24 cv
12.8837 30.24 12.2402 29.5955 12.2402 28.8006 cv
12.2402 28.0057 12.8837 27.3611 13.6796 27.3611 cv
cp
}exec
f
{-.71972 27.3611 mo
.0752795 27.3611 .71978 28.0057 .71978 28.8006 cv
.71978 29.5955 .0752795 30.24 -.71972 30.24 cv
-1.51562 30.24 -2.16012 29.5955 -2.16012 28.8006 cv
-2.16012 28.0057 -1.51562 27.3611 -.71972 27.3611 cv
cp
}exec
f
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/559063936.0 /Pattern get_res
[1 0 0 -1 -670 -150 ]make_pattern set_pattern
f
2 vmreclaim
332.877 252.495 mo
332.352 252.193 332.091 251.795 332.092 251.399 cv
332.073 257.886 li
332.072 258.282 332.334 258.679 332.858 258.982 cv
340.031 263.123 li
340.049 256.636 li
332.877 252.495 li
cp
false sop
.801663 .131746 .467292 .00280766 cmyk
f
349.665 251.048 mo
349.646 257.535 li
340.031 263.123 li
340.049 256.636 li
349.665 251.048 li
cp
.707332 0 .368841 0 cmyk
f
349.665 251.048 mo
340.049 256.636 li
332.877 252.495 li
331.835 251.894 331.83 250.921 332.86 250.322 cv
338.737 246.908 li
339.771 246.306 341.451 246.306 342.492 246.907 cv
349.665 251.048 li
cp
f
353.793 253.432 mo
353.774 259.918 li
344.159 265.506 li
344.177 259.02 li
353.793 253.432 li
cp
.0529488 .0377203 .0377203 0 cmyk
f
344.177 259.02 mo
344.159 265.506 li
340.031 263.123 li
340.049 256.636 li
344.177 259.02 li
cp
.159335 .120699 .125429 0 cmyk
f
353.793 253.432 mo
344.177 259.02 li
340.049 256.636 li
349.665 251.048 li
353.793 253.432 li
cp
0 0 0 0 cmyk
f
360.965 257.572 mo
362.002 258.171 362.007 259.144 360.973 259.745 cv
355.096 263.16 li
354.066 263.759 352.386 263.759 351.349 263.16 cv
344.177 259.02 li
353.793 253.432 li
360.965 257.572 li
cp
0 .85156 .162356 0 cmyk
f
360.973 259.745 mo
355.096 263.16 li
354.578 263.462 353.896 263.611 353.214 263.609 cv
352.539 263.607 351.865 263.458 351.349 263.16 cv
344.177 259.02 li
344.159 265.506 li
351.331 269.647 li
351.851 269.947 352.533 270.097 353.214 270.096 cv
353.89 270.095 354.565 269.945 355.078 269.647 cv
360.954 266.232 li
361.469 265.933 361.726 265.542 361.727 265.151 cv
361.746 258.664 li
361.745 259.056 361.487 259.446 360.973 259.745 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
148.231 320.073 mo
193.768 346.536 li
196.005 347.836 199.667 347.847 201.937 346.536 cv
314.594 281.494 li
315.739 280.833 316.309 279.963 316.307 279.097 cv
316.334 288.524 li
316.336 289.39 315.766 290.26 314.621 290.921 cv
201.964 355.963 li
199.693 357.274 196.032 357.263 193.795 355.963 cv
148.258 329.5 li
147.137 328.849 146.576 328.001 146.574 327.151 cv
146.547 317.724 li
146.55 318.573 147.111 319.422 148.231 320.073 cv
cp
.952148 .735225 .490547 .48014 cmyk
f
148.258 315.341 mo
145.987 316.652 145.976 318.762 148.231 320.073 cv
193.768 346.536 li
196.005 347.836 199.667 347.847 201.937 346.536 cv
314.594 281.494 li
316.864 280.183 316.876 278.051 314.639 276.751 cv
269.103 250.288 li
266.847 248.977 263.185 248.988 260.915 250.299 cv
148.258 315.341 li
cp
.857572 .623407 .472023 .324712 cmyk
f
256.504 255.685 mo
256.51 258.042 li
263.919 262.348 li
263.913 259.991 li
256.504 255.685 li
cp
.220218 .173342 .178805 0 cmyk
f
263.913 259.991 mo
263.919 262.348 li
271.229 258.127 li
271.222 255.771 li
263.913 259.991 li
cp
f
256.504 255.685 mo
263.913 259.991 li
271.222 255.771 li
263.813 251.465 li
256.504 255.685 li
cp
0 0 0 0 cmyk
f
247.126 261.099 mo
247.133 263.456 li
254.542 267.762 li
254.535 265.405 li
247.126 261.099 li
cp
.220218 .173342 .178805 0 cmyk
f
254.535 265.405 mo
254.542 267.762 li
261.87 263.531 li
261.864 261.174 li
254.535 265.405 li
cp
f
247.126 261.099 mo
254.535 265.405 li
261.864 261.174 li
254.455 256.868 li
247.126 261.099 li
cp
0 0 0 0 cmyk
f
237.767 266.503 mo
237.774 268.859 li
245.183 273.165 li
245.176 270.808 li
237.767 266.503 li
cp
.220218 .173342 .178805 0 cmyk
f
245.176 270.808 mo
245.183 273.165 li
252.493 268.945 li
252.486 266.588 li
245.176 270.808 li
cp
f
237.767 266.503 mo
245.176 270.808 li
252.486 266.588 li
245.077 262.282 li
237.767 266.503 li
cp
0 0 0 0 cmyk
f
228.409 271.906 mo
228.415 274.263 li
235.824 278.568 li
235.818 276.212 li
228.409 271.906 li
cp
.220218 .173342 .178805 0 cmyk
f
235.818 276.212 mo
235.824 278.568 li
243.134 274.348 li
243.127 271.991 li
235.818 276.212 li
cp
f
228.409 271.906 mo
235.818 276.212 li
243.127 271.991 li
235.718 267.686 li
228.409 271.906 li
cp
0 0 0 0 cmyk
f
219.05 277.309 mo
219.056 279.666 li
226.465 283.972 li
226.459 281.615 li
219.05 277.309 li
cp
.220218 .173342 .178805 0 cmyk
f
226.459 281.615 mo
226.465 283.972 li
233.775 279.751 li
233.769 277.395 li
226.459 281.615 li
cp
f
219.05 277.309 mo
226.459 281.615 li
233.769 277.395 li
226.36 273.089 li
219.05 277.309 li
cp
0 0 0 0 cmyk
f
209.672 282.723 mo
209.679 285.08 li
217.088 289.386 li
217.081 287.029 li
209.672 282.723 li
cp
.220218 .173342 .178805 0 cmyk
f
217.081 287.029 mo
217.088 289.386 li
224.398 285.165 li
224.391 282.809 li
217.081 287.029 li
cp
f
209.672 282.723 mo
217.081 287.029 li
224.391 282.809 li
216.982 278.503 li
209.672 282.723 li
cp
0 0 0 0 cmyk
f
200.314 288.127 mo
200.32 290.483 li
207.729 294.789 li
207.723 292.432 li
200.314 288.127 li
cp
.220218 .173342 .178805 0 cmyk
f
207.723 292.432 mo
207.729 294.789 li
215.039 290.569 li
215.032 288.212 li
207.723 292.432 li
cp
f
200.314 288.127 mo
207.723 292.432 li
215.032 288.212 li
207.623 283.906 li
200.314 288.127 li
cp
0 0 0 0 cmyk
f
190.955 293.53 mo
190.961 295.887 li
198.37 300.192 li
198.364 297.836 li
190.955 293.53 li
cp
.220218 .173342 .178805 0 cmyk
f
198.364 297.836 mo
198.37 300.192 li
205.68 295.972 li
205.674 293.615 li
198.364 297.836 li
cp
f
190.955 293.53 mo
198.364 297.836 li
205.674 293.615 li
198.265 289.31 li
190.955 293.53 li
cp
0 0 0 0 cmyk
f
181.577 298.944 mo
181.584 301.301 li
188.993 305.606 li
188.986 303.25 li
181.577 298.944 li
cp
.220218 .173342 .178805 0 cmyk
f
188.986 303.25 mo
188.993 305.606 li
196.321 301.375 li
196.315 299.019 li
188.986 303.25 li
cp
f
181.577 298.944 mo
188.986 303.25 li
196.315 299.019 li
188.906 294.713 li
181.577 298.944 li
cp
0 0 0 0 cmyk
f
172.219 304.347 mo
172.225 306.704 li
179.634 311.01 li
179.628 308.653 li
172.219 304.347 li
cp
.220218 .173342 .178805 0 cmyk
f
179.628 308.653 mo
179.634 311.01 li
186.944 306.789 li
186.938 304.433 li
179.628 308.653 li
cp
f
172.219 304.347 mo
179.628 308.653 li
186.938 304.433 li
179.528 300.127 li
172.219 304.347 li
cp
0 0 0 0 cmyk
f
153.482 315.165 mo
153.489 317.521 li
160.898 321.827 li
160.891 319.47 li
153.482 315.165 li
cp
.220218 .173342 .178805 0 cmyk
f
160.891 319.47 mo
160.898 321.827 li
177.585 312.193 li
177.579 309.836 li
160.891 319.47 li
cp
f
153.482 315.165 mo
160.891 319.47 li
177.579 309.836 li
170.17 305.53 li
153.482 315.165 li
cp
0 0 0 0 cmyk
f
256.571 266.588 mo
256.578 268.945 li
263.987 273.25 li
263.98 270.894 li
256.571 266.588 li
cp
.220218 .173342 .178805 0 cmyk
f
263.98 270.894 mo
263.987 273.25 li
280.674 263.616 li
280.667 261.259 li
263.98 270.894 li
cp
f
256.571 266.588 mo
263.98 270.894 li
280.667 261.259 li
273.258 256.954 li
256.571 266.588 li
cp
0 0 0 0 cmyk
f
247.212 271.991 mo
247.219 274.348 li
254.628 278.654 li
254.621 276.297 li
247.212 271.991 li
cp
.220218 .173342 .178805 0 cmyk
f
254.621 276.297 mo
254.628 278.654 li
261.938 274.433 li
261.931 272.077 li
254.621 276.297 li
cp
f
247.212 271.991 mo
254.621 276.297 li
261.931 272.077 li
254.522 267.771 li
247.212 271.991 li
cp
0 0 0 0 cmyk
f
237.853 277.395 mo
237.86 279.751 li
245.269 284.057 li
245.262 281.7 li
237.853 277.395 li
cp
.220218 .173342 .178805 0 cmyk
f
245.262 281.7 mo
245.269 284.057 li
252.579 279.837 li
252.572 277.48 li
245.262 281.7 li
cp
f
237.853 277.395 mo
245.262 281.7 li
252.572 277.48 li
245.163 273.174 li
237.853 277.395 li
cp
0 0 0 0 cmyk
f
228.495 282.798 mo
228.501 285.155 li
235.91 289.46 li
235.904 287.104 li
228.495 282.798 li
cp
.220218 .173342 .178805 0 cmyk
f
235.904 287.104 mo
235.91 289.46 li
243.22 285.24 li
243.213 282.883 li
235.904 287.104 li
cp
f
228.495 282.798 mo
235.904 287.104 li
243.213 282.883 li
235.804 278.578 li
228.495 282.798 li
cp
0 0 0 0 cmyk
f
219.117 288.212 mo
219.124 290.569 li
226.533 294.874 li
226.526 292.518 li
219.117 288.212 li
cp
.220218 .173342 .178805 0 cmyk
f
226.526 292.518 mo
226.533 294.874 li
233.843 290.654 li
233.836 288.297 li
226.526 292.518 li
cp
f
219.117 288.212 mo
226.526 292.518 li
233.836 288.297 li
226.427 283.992 li
219.117 288.212 li
cp
0 0 0 0 cmyk
f
209.758 293.615 mo
209.765 295.972 li
217.174 300.278 li
217.167 297.921 li
209.758 293.615 li
cp
.220218 .173342 .178805 0 cmyk
f
217.167 297.921 mo
217.174 300.278 li
224.484 296.057 li
224.477 293.701 li
217.167 297.921 li
cp
f
209.758 293.615 mo
217.167 297.921 li
224.477 293.701 li
217.068 289.395 li
209.758 293.615 li
cp
0 0 0 0 cmyk
f
200.399 299.019 mo
200.406 301.375 li
207.815 305.681 li
207.808 303.324 li
200.399 299.019 li
cp
.220218 .173342 .178805 0 cmyk
f
207.808 303.324 mo
207.815 305.681 li
215.125 301.461 li
215.118 299.104 li
207.808 303.324 li
cp
f
200.399 299.019 mo
207.808 303.324 li
215.118 299.104 li
207.709 294.798 li
200.399 299.019 li
cp
0 0 0 0 cmyk
f
191.022 304.433 mo
191.029 306.789 li
198.438 311.095 li
198.431 308.738 li
191.022 304.433 li
cp
.220218 .173342 .178805 0 cmyk
f
198.431 308.738 mo
198.438 311.095 li
205.766 306.864 li
205.76 304.507 li
198.431 308.738 li
cp
f
191.022 304.433 mo
198.431 308.738 li
205.76 304.507 li
198.35 300.202 li
191.022 304.433 li
cp
0 0 0 0 cmyk
f
181.663 309.836 mo
181.67 312.193 li
189.079 316.498 li
189.072 314.142 li
181.663 309.836 li
cp
.220218 .173342 .178805 0 cmyk
f
189.072 314.142 mo
189.079 316.498 li
196.389 312.278 li
196.382 309.921 li
189.072 314.142 li
cp
f
181.663 309.836 mo
189.072 314.142 li
196.382 309.921 li
188.973 305.616 li
181.663 309.836 li
cp
0 0 0 0 cmyk
f
172.304 315.239 mo
172.311 317.596 li
179.72 321.902 li
179.714 319.545 li
172.304 315.239 li
cp
.220218 .173342 .178805 0 cmyk
f
179.714 319.545 mo
179.72 321.902 li
187.03 317.681 li
187.023 315.325 li
179.714 319.545 li
cp
f
172.304 315.239 mo
179.714 319.545 li
187.023 315.325 li
179.614 311.019 li
172.304 315.239 li
cp
0 0 0 0 cmyk
f
162.927 320.653 mo
162.934 323.01 li
170.343 327.316 li
170.336 324.959 li
162.927 320.653 li
cp
.220218 .173342 .178805 0 cmyk
f
170.336 324.959 mo
170.343 327.316 li
177.671 323.085 li
177.665 320.728 li
170.336 324.959 li
cp
f
162.927 320.653 mo
170.336 324.959 li
177.665 320.728 li
170.255 316.422 li
162.927 320.653 li
cp
0 0 0 0 cmyk
f
266.016 272.077 mo
266.022 274.433 li
273.45 278.75 li
273.443 276.393 li
266.016 272.077 li
cp
.220218 .173342 .178805 0 cmyk
f
273.443 276.393 mo
273.45 278.75 li
290.137 269.115 li
290.13 266.759 li
273.443 276.393 li
cp
f
266.016 272.077 mo
273.443 276.393 li
290.13 266.759 li
282.703 262.442 li
266.016 272.077 li
cp
0 0 0 0 cmyk
f
256.657 277.48 mo
256.664 279.837 li
264.091 284.153 li
264.084 281.796 li
256.657 277.48 li
cp
.220218 .173342 .178805 0 cmyk
f
264.084 281.796 mo
264.091 284.153 li
271.401 279.933 li
271.394 277.576 li
264.084 281.796 li
cp
f
256.657 277.48 mo
264.084 281.796 li
271.394 277.576 li
263.967 273.26 li
256.657 277.48 li
cp
0 0 0 0 cmyk
f
247.298 282.883 mo
247.305 285.24 li
254.732 289.556 li
254.725 287.2 li
247.298 282.883 li
cp
.220218 .173342 .178805 0 cmyk
f
254.725 287.2 mo
254.732 289.556 li
262.042 285.336 li
262.035 282.979 li
254.725 287.2 li
cp
f
247.298 282.883 mo
254.725 287.2 li
262.035 282.979 li
254.608 278.663 li
247.298 282.883 li
cp
0 0 0 0 cmyk
f
237.939 288.287 mo
237.946 290.643 li
245.373 294.96 li
245.367 292.603 li
237.939 288.287 li
cp
.220218 .173342 .178805 0 cmyk
f
245.367 292.603 mo
245.373 294.96 li
252.683 290.739 li
252.677 288.383 li
245.367 292.603 li
cp
f
237.939 288.287 mo
245.367 292.603 li
252.677 288.383 li
245.249 284.066 li
237.939 288.287 li
cp
0 0 0 0 cmyk
f
228.562 293.701 mo
228.569 296.057 li
235.996 300.374 li
235.989 298.017 li
228.562 293.701 li
cp
.220218 .173342 .178805 0 cmyk
f
235.989 298.017 mo
235.996 300.374 li
243.306 296.153 li
243.299 293.797 li
235.989 298.017 li
cp
f
228.562 293.701 mo
235.989 298.017 li
243.299 293.797 li
235.872 289.48 li
228.562 293.701 li
cp
0 0 0 0 cmyk
f
219.203 299.104 mo
219.21 301.461 li
226.637 305.777 li
226.63 303.42 li
219.203 299.104 li
cp
.220218 .173342 .178805 0 cmyk
f
226.63 303.42 mo
226.637 305.777 li
233.947 301.557 li
233.94 299.2 li
226.63 303.42 li
cp
f
219.203 299.104 mo
226.63 303.42 li
233.94 299.2 li
226.513 294.884 li
219.203 299.104 li
cp
0 0 0 0 cmyk
f
209.844 304.507 mo
209.851 306.864 li
217.278 311.18 li
217.272 308.824 li
209.844 304.507 li
cp
.220218 .173342 .178805 0 cmyk
f
217.272 308.824 mo
217.278 311.18 li
224.588 306.96 li
224.581 304.603 li
217.272 308.824 li
cp
f
209.844 304.507 mo
217.272 308.824 li
224.581 304.603 li
217.154 300.287 li
209.844 304.507 li
cp
0 0 0 0 cmyk
f
200.467 309.921 mo
200.474 312.278 li
207.901 316.594 li
207.894 314.238 li
200.467 309.921 li
cp
.220218 .173342 .178805 0 cmyk
f
207.894 314.238 mo
207.901 316.594 li
215.229 312.363 li
215.223 310.007 li
207.894 314.238 li
cp
f
200.467 309.921 mo
207.894 314.238 li
215.223 310.007 li
207.795 305.69 li
200.467 309.921 li
cp
0 0 0 0 cmyk
f
191.108 315.325 mo
191.115 317.681 li
198.542 321.998 li
198.535 319.641 li
191.108 315.325 li
cp
.220218 .173342 .178805 0 cmyk
f
198.535 319.641 mo
198.542 321.998 li
205.852 317.777 li
205.845 315.421 li
198.535 319.641 li
cp
f
191.108 315.325 mo
198.535 319.641 li
205.845 315.421 li
198.418 311.104 li
191.108 315.325 li
cp
0 0 0 0 cmyk
f
172.372 326.142 mo
172.379 328.499 li
179.806 332.815 li
179.799 330.458 li
172.372 326.142 li
cp
.220218 .173342 .178805 0 cmyk
f
179.799 330.458 mo
179.806 332.815 li
196.493 323.181 li
196.487 320.824 li
179.799 330.458 li
cp
f
172.372 326.142 mo
179.799 330.458 li
196.487 320.824 li
189.059 316.508 li
172.372 326.142 li
cp
0 0 0 0 cmyk
f
266.12 282.979 mo
266.127 285.336 li
273.536 289.642 li
273.529 287.285 li
266.12 282.979 li
cp
.220218 .173342 .178805 0 cmyk
f
273.529 287.285 mo
273.536 289.642 li
299.582 274.604 li
299.575 272.247 li
273.529 287.285 li
cp
f
266.12 282.979 mo
273.529 287.285 li
299.575 272.247 li
292.166 267.942 li
266.12 282.979 li
cp
0 0 0 0 cmyk
f
256.761 288.383 mo
256.768 290.739 li
264.177 295.045 li
264.17 292.688 li
256.761 288.383 li
cp
.220218 .173342 .178805 0 cmyk
f
264.17 292.688 mo
264.177 295.045 li
271.487 290.825 li
271.48 288.468 li
264.17 292.688 li
cp
f
256.761 288.383 mo
264.17 292.688 li
271.48 288.468 li
264.071 284.162 li
256.761 288.383 li
cp
0 0 0 0 cmyk
f
247.402 293.786 mo
247.409 296.143 li
254.818 300.448 li
254.811 298.092 li
247.402 293.786 li
cp
.220218 .173342 .178805 0 cmyk
f
254.811 298.092 mo
254.818 300.448 li
262.128 296.228 li
262.121 293.871 li
254.811 298.092 li
cp
f
247.402 293.786 mo
254.811 298.092 li
262.121 293.871 li
254.712 289.566 li
247.402 293.786 li
cp
0 0 0 0 cmyk
f
238.025 299.2 mo
238.032 301.557 li
245.441 305.862 li
245.434 303.506 li
238.025 299.2 li
cp
.220218 .173342 .178805 0 cmyk
f
245.434 303.506 mo
245.441 305.862 li
252.751 301.642 li
252.744 299.285 li
245.434 303.506 li
cp
f
238.025 299.2 mo
245.434 303.506 li
252.744 299.285 li
245.335 294.98 li
238.025 299.2 li
cp
0 0 0 0 cmyk
f
228.666 304.603 mo
228.673 306.96 li
236.082 311.266 li
236.075 308.909 li
228.666 304.603 li
cp
.220218 .173342 .178805 0 cmyk
f
236.075 308.909 mo
236.082 311.266 li
243.392 307.045 li
243.385 304.689 li
236.075 308.909 li
cp
f
228.666 304.603 mo
236.075 308.909 li
243.385 304.689 li
235.976 300.383 li
228.666 304.603 li
cp
0 0 0 0 cmyk
f
219.307 310.007 mo
219.314 312.363 li
226.723 316.669 li
226.716 314.312 li
219.307 310.007 li
cp
.220218 .173342 .178805 0 cmyk
f
226.716 314.312 mo
226.723 316.669 li
234.033 312.449 li
234.026 310.092 li
226.716 314.312 li
cp
f
219.307 310.007 mo
226.716 314.312 li
234.026 310.092 li
226.617 305.786 li
219.307 310.007 li
cp
0 0 0 0 cmyk
f
209.93 315.421 mo
209.937 317.777 li
217.346 322.083 li
217.339 319.726 li
209.93 315.421 li
cp
.220218 .173342 .178805 0 cmyk
f
217.339 319.726 mo
217.346 322.083 li
224.674 317.852 li
224.667 315.495 li
217.339 319.726 li
cp
f
209.93 315.421 mo
217.339 319.726 li
224.667 315.495 li
217.258 311.19 li
209.93 315.421 li
cp
0 0 0 0 cmyk
f
200.571 320.824 mo
200.578 323.181 li
207.987 327.486 li
207.98 325.13 li
200.571 320.824 li
cp
.220218 .173342 .178805 0 cmyk
f
207.98 325.13 mo
207.987 327.486 li
215.297 323.266 li
215.29 320.909 li
207.98 325.13 li
cp
f
200.571 320.824 mo
207.98 325.13 li
215.29 320.909 li
207.881 316.604 li
200.571 320.824 li
cp
0 0 0 0 cmyk
f
181.835 331.641 mo
181.842 333.998 li
189.251 338.304 li
189.244 335.947 li
181.835 331.641 li
cp
.220218 .173342 .178805 0 cmyk
f
189.244 335.947 mo
189.251 338.304 li
205.938 328.669 li
205.931 326.313 li
189.244 335.947 li
cp
f
181.835 331.641 mo
189.244 335.947 li
205.931 326.313 li
198.522 322.007 li
181.835 331.641 li
cp
0 0 0 0 cmyk
f
294.301 277.651 mo
294.307 280.007 li
301.717 284.313 li
301.71 281.956 li
294.301 277.651 li
cp
.220218 .173342 .178805 0 cmyk
f
301.71 281.956 mo
301.717 284.313 li
309.026 280.093 li
309.02 277.736 li
301.71 281.956 li
cp
f
294.301 277.651 mo
301.71 281.956 li
309.02 277.736 li
301.611 273.43 li
294.301 277.651 li
cp
0 0 0 0 cmyk
f
284.924 283.065 mo
284.93 285.421 li
292.339 289.727 li
292.333 287.37 li
284.924 283.065 li
cp
.220218 .173342 .178805 0 cmyk
f
292.333 287.37 mo
292.339 289.727 li
299.668 285.496 li
299.661 283.139 li
292.333 287.37 li
cp
f
284.924 283.065 mo
292.333 287.37 li
299.661 283.139 li
292.252 278.834 li
284.924 283.065 li
cp
0 0 0 0 cmyk
f
275.565 288.468 mo
275.571 290.825 li
282.98 295.131 li
282.974 292.774 li
275.565 288.468 li
cp
.220218 .173342 .178805 0 cmyk
f
282.974 292.774 mo
282.98 295.131 li
290.29 290.91 li
290.284 288.553 li
282.974 292.774 li
cp
f
275.565 288.468 mo
282.974 292.774 li
290.284 288.553 li
282.874 284.248 li
275.565 288.468 li
cp
0 0 0 0 cmyk
f
228.752 315.495 mo
228.759 317.852 li
236.168 322.158 li
236.161 319.801 li
228.752 315.495 li
cp
.220218 .173342 .178805 0 cmyk
f
236.161 319.801 mo
236.168 322.158 li
280.931 296.313 li
280.925 293.957 li
236.161 319.801 li
cp
f
228.752 315.495 mo
236.161 319.801 li
280.925 293.957 li
273.516 289.651 li
228.752 315.495 li
cp
0 0 0 0 cmyk
f
219.375 320.909 mo
219.381 323.266 li
226.79 327.572 li
226.784 325.215 li
219.375 320.909 li
cp
.220218 .173342 .178805 0 cmyk
f
226.784 325.215 mo
226.79 327.572 li
234.119 323.341 li
234.112 320.984 li
226.784 325.215 li
cp
f
219.375 320.909 mo
226.784 325.215 li
234.112 320.984 li
226.703 316.678 li
219.375 320.909 li
cp
0 0 0 0 cmyk
f
210.016 326.313 mo
210.023 328.669 li
217.432 332.975 li
217.425 330.618 li
210.016 326.313 li
cp
.220218 .173342 .178805 0 cmyk
f
217.425 330.618 mo
217.432 332.975 li
224.741 328.755 li
224.735 326.398 li
217.425 330.618 li
cp
f
210.016 326.313 mo
217.425 330.618 li
224.735 326.398 li
217.326 322.092 li
210.016 326.313 li
cp
0 0 0 0 cmyk
f
191.28 337.13 mo
191.286 339.487 li
198.695 343.792 li
198.689 341.436 li
191.28 337.13 li
cp
.220218 .173342 .178805 0 cmyk
f
198.689 341.436 mo
198.695 343.792 li
215.383 334.158 li
215.376 331.801 li
198.689 341.436 li
cp
f
191.28 337.13 mo
198.689 341.436 li
215.376 331.801 li
207.967 327.496 li
191.28 337.13 li
cp
0 0 0 0 cmyk
f
446.935 300.934 mo
446.927 303.887 li
352.714 358.638 li
352.722 355.685 li
446.935 300.934 li
cp
.0927138 .0886854 .080415 0 cmyk
f
352.722 355.685 mo
352.714 358.638 li
283.604 318.737 li
283.612 315.784 li
352.722 355.685 li
cp
.220218 .173342 .178805 0 cmyk
f
446.935 300.934 mo
352.722 355.685 li
283.612 315.784 li
377.825 261.034 li
446.935 300.934 li
cp
0 0 0 0 cmyk
f
388.873 294.048 mo
378.719 288.186 364.129 286.697 351.169 290.196 cv
334.504 294.709 327.341 306.2 335.176 315.875 cv
365.365 307.709 li
388.873 294.048 li
.707332 0 .368841 0 cmyk
f
365.365 307.709 mo
335.176 315.875 li
336.047 316.95 336.928 317.818 338.109 318.793 cv
339.255 319.736 340.519 320.602 341.882 321.389 cv
353.151 327.895 371.159 328.995 384.589 323.533 cv
365.365 307.709 li
.960967 .723171 .449805 .374731 cmyk
f
398.577 306.026 mo
365.365 307.709 li
384.589 323.533 li
394.618 319.46 399.7 313.104 398.577 306.026 cv
0 .64239 .00363165 0 cmyk
f
388.873 294.048 mo
365.365 307.709 li
398.577 306.026 li
397.847 301.306 394.678 297.4 388.873 294.048 cv
0 .85156 .162356 0 cmyk
f
432.319 300.431 mo
377.735 268.916 li
376.769 269.477 li
431.354 300.992 li
432.319 300.431 li
.220218 .173342 .178805 0 cmyk
f
429.424 302.114 mo
374.839 270.599 li
373.874 271.16 li
428.459 302.674 li
429.424 302.114 li
f
426.529 303.796 mo
371.944 272.282 li
370.979 272.842 li
425.564 304.357 li
426.529 303.796 li
f
404.471 294.429 mo
369.037 273.971 li
368.072 274.532 li
403.506 294.99 li
404.471 294.429 li
f
362.188 341.187 mo
307.603 309.672 li
298.228 315.121 li
352.813 346.635 li
362.188 341.187 li
f
320.974 203.143 mo
320.962 207.347 li
310.095 213.662 li
310.107 209.458 li
320.974 203.143 li
cp
f
310.107 209.458 mo
310.095 213.662 li
300.261 207.984 li
300.273 203.78 li
310.107 209.458 li
cp
f
320.974 203.143 mo
310.107 209.458 li
300.273 203.78 li
311.139 197.465 li
320.974 203.143 li
cp
0 0 0 0 cmyk
f
312.882 200.023 mo
310.918 198.888 li
308.966 200.023 li
310.93 201.157 li
312.882 200.023 li
.220218 .173342 .178805 0 cmyk
f
318.217 203.102 mo
316.252 201.968 li
314.3 203.102 li
316.265 204.237 li
318.217 203.102 li
f
293.591 221.149 mo
289.512 223.519 282.872 223.519 278.766 221.149 cv
276.701 219.957 275.669 218.39 275.674 216.826 cv
275.646 223.326 li
275.641 224.891 276.673 226.457 278.739 227.65 cv
282.844 230.02 289.484 230.02 293.563 227.65 cv
312.875 216.427 li
312.903 209.926 li
293.591 221.149 li
cp
.801663 .131746 .467292 .00280766 cmyk
f
312.903 209.926 mo
293.591 221.149 li
289.512 223.519 282.872 223.519 278.767 221.149 cv
274.661 218.779 274.64 214.933 278.718 212.563 cv
298.03 201.34 li
312.903 209.926 li
cp
.707332 0 .368841 0 cmyk
f
287.463 215.014 mo
285.866 214.092 283.284 214.092 281.698 215.014 cv
280.116 215.933 280.125 217.428 281.722 218.35 cv
283.319 219.272 285.895 219.269 287.476 218.35 cv
289.063 217.428 289.06 215.936 287.463 215.014 cv
.590631 0 .279942 0 cmyk
f
331.855 230.583 mo
328.322 228.543 322.595 228.543 319.085 230.583 cv
298.466 242.565 li
296.659 241.522 li
296.653 243.601 li
298.46 244.644 li
319.079 232.661 li
322.589 230.622 328.316 230.621 331.849 232.661 cv
333.626 233.687 334.514 235.037 334.51 236.385 cv
334.516 234.307 li
334.52 232.959 333.632 231.609 331.855 230.583 cv
cp
.159335 .120699 .125429 0 cmyk
f
327.648 232.688 mo
326.492 232.021 324.61 232.021 323.454 232.693 cv
301.362 245.531 li
300.163 246.227 299.562 247.142 299.559 248.057 cv
299.554 250.136 li
299.556 249.22 300.157 248.306 301.356 247.609 cv
323.448 234.771 li
324.604 234.099 326.486 234.099 327.642 234.766 cv
328.223 235.101 328.513 235.543 328.512 235.985 cv
328.518 233.907 li
328.519 233.465 328.228 233.023 327.648 232.688 cv
cp
f
329.46 236.16 mo
308.8 248.167 li
306.993 247.124 li
306.987 249.202 li
308.794 250.245 li
329.454 238.239 li
330.521 237.619 331.056 236.806 331.058 235.992 cv
331.064 233.914 li
331.062 234.728 330.527 235.541 329.46 236.16 cv
cp
f
333.703 239.022 mo
311.968 251.653 li
308.571 253.627 303.014 253.632 299.588 251.654 cv
297.868 250.66 297.008 249.351 297.012 248.043 cv
297.006 250.121 li
297.003 251.429 297.862 252.739 299.582 253.732 cv
303.008 255.71 308.565 255.705 311.962 253.732 cv
333.697 241.1 li
335.937 239.799 337.059 238.093 337.064 236.385 cv
337.069 234.307 li
337.065 236.015 335.943 237.721 333.703 239.022 cv
cp
f
333.658 229.535 mo
338.191 232.152 338.207 236.405 333.703 239.022 cv
311.968 251.654 li
308.571 253.627 303.014 253.632 299.588 251.654 cv
296.169 249.68 296.151 246.456 299.547 244.483 cv
321.639 231.645 li
323.781 230.399 327.286 230.399 329.443 231.645 cv
331.6 232.89 331.603 234.915 329.46 236.16 cv
308.8 248.167 li
306.993 247.124 li
327.653 235.117 li
328.81 234.445 328.804 233.355 327.648 232.688 cv
326.492 232.021 324.61 232.021 323.454 232.693 cv
301.362 245.531 li
298.953 246.931 298.957 249.21 301.383 250.61 cv
303.816 252.015 307.751 252.011 310.161 250.61 cv
331.896 237.979 li
335.406 235.94 335.387 232.622 331.855 230.583 cv
328.322 228.543 322.595 228.543 319.085 230.583 cv
298.466 242.565 li
296.659 241.522 li
317.279 229.539 li
321.782 226.922 329.133 226.922 333.658 229.535 cv
cp
0 0 0 0 cmyk
f
0 0 0 0 cmyk
%ADOBeginSubsetFont: BebasNeue Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BebasNeue def/FontInfo 7 dict dup begin/Notice (Copyright (c) 2010 by Ryoichi Tsunekawa. All rights reserved.) def/Weight (Regular) def/ItalicAngle 0 def/FSType 0 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 87 /W putdup 97 /a putdup 98 /b putdup 101 /e putdup 105 /i putdup 110 /n putdup 114 /r putdef/FontBBox {-137 -179 1000 894} defendsystemdict begindup /Private12 dict dup begin/|- {def} def/| {put} def/BlueValues [-8 -0 379 384 700 708 795 800] def/OtherBlues [-70 -65 -43 -43 346 351] def/StdHW [100] def/StdVW [110] def/StemSnapH [63 78 90 100] def/StemSnapV [70 84 110] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/W <1C60D8A8C9B7E897B5E9FDA8C659182022BFB53BF8F9EB83D255B0D7CD6D0EF80CE161AD25E38A23908D0ABCDAFC981E9DEE5F7384DF54AD9F97297CF39A877D> |-/a <1C60D8A8C9B704CCECA9F5B12CFA01E4F817A1C59671F474EE49E4BE48D12417F37518FC27A5A566FF8C819C4E1BB2658325B89AE5C67491F33A5BFAF3B62AF553F3> |-/b <1C60D8A8C9B70582B0F868FAB522D4DFC57CEB3395BC3C874CDF248815EEFC2A1E7382C20AA68464454A2661BC320D7938A28FD85F724A39B0EC067B5CFA5D94231140D4E5985B484BC03C8FAADDD38E8D1F42EDE864EC85687E82BC1A4232E7844D78B14066EDF52FAEBCC476466250B6940CB84D9F3C9A0DBB6B74360EA504ED0F67A6C5E3B71E1025256CAD4ED664F1382B7E2ECEFC2689B3EAF389F92AB89FBE49062545AB1DF66BC9C009B63C32571D29F63048C3CA1609FC11A83F53396B192D167368542FFF532FBCE3A6B7FC> |-/e <1C60D8A8C9B72B39C2796B5764C50A6726AF22BC0C2FC2CA2D9AA2BFE2C21D246012164094CB09747562166F9A712A38048564792BA5D512D9C2BD9F> |-/i <1C60D8A8C9B8ACDEC112B38EE3A68733B579CB4DA7AAA38A0FA2CF491F033ABB> |-/n <1C60D8A8C9B710637ED95CF3A5B750832C90CE1D5B687104B7E2E6E3AB154BCA59B42455B627D01F6E212C69FD91A131A31FA9589EEA> |-/r <1C60D8A8C9B709C47C9D4F67C84516544562B11094F39B0E2E1CE7EF9F79334203FD734D9037B6902C670D93336226898BC1CEF6FC40962B0BB83EA9E19A018580D82742913C6929DB0241F07C963B6ADBA041F9CA022B554B98452FB5E6BED7CE0C1CFBAA90C62413A2F26D590A2BB1193419BCDF> |-/.notdef <1C60D8A8C9B610D9309A4F989AED5904A556A57A61E09A093B4E5705DAB85E66A84978A0EE7E019EFBCE298D4CE344F5E82042F159BE5912E4C119E25A23E43E8C866C4E27C7A8D06D4E40F90042CF49A6B142F2F9518EB1E8664C97C7E0F962091F15BA71D489505B6B868E8E0FC0118D299815BCEE5A9664D2F430EAE3CFB0D3F94D518E5C7608CC66D42B82F2973411C5101D6C2906E1F080829123493AF4812A4711C898C56F3F1BD343C75F3A1A386401A9D8E07B89391336DCC35E0BC61A5A056D682E57CE61F7A52DDE236980AC9E8FF655BC069A01CC2FBE61AB55E6A2D24C59A7603B0E7B7AF95EE6005979EAF563CC9E344FF2CBEF9FD2B23FBCBA05E99749098AB52359E51507D8FCC9ED10532FFAA91956873EAC31B3B0A8D5E352A8F6948AAE06E619B2C3AE1650113BAB2C5DABE066ABA1E354F1C1F383B37ACC6B3D6758E3368F770D360E7AC76CA59EB0047587C5E77128EC9227BB30FBBA1D9738C3857A12F2D932C095CF7E53BC5EBCD720DF039BCAEA39E9983C131C9F7773996260C2A8DC33C54622071379446B5ACCF23E83196AC7D290303AF8C4FE30D2AD1A36C6B73B44F0029F6158E16C81EF9B927651FDED32DAC7B7E62152E5685CCD3F601C303FAD27828F13435FADA9C17A6A9973C0B10C1ECF86856A5228CF46D5039BD0DAB9ABF6FA130C3D8802F5859F86C17EB66D716913D32A6D630549CAB4C0EA16C97FA5BADBA349D556019A6BD7DB53DA72EA568886F438DF57BFF729264B867989B86F0EAC8BC4CBF52E135168E17A77904CB7F10D04899D8B5BD902AF188B2D73255385CFB307750F29FAC39A1C706685C4EACEFDA791071A9A591DA07AC34E5ABBEB187E1E164B14EC9263EAD3BD4C88F4366C8405F5BB0D0313D0F40628C046642A08505C633F7DEB5C14865A31F7CA9614DEE462789FAB09618399C39195E597C7FA9FCAB95CD8F8957B302D318E86F148D89437DE52188EF2D24C586B26B4A85D8E7623041F05DE588D22D93C533E2EC4D92F3D77370B0EB24C9C0A6C7821FBE5FE88FFFDA66AC3EE14442DDE7DF98C7FF7A9DC701C20E37DC432576F75175CC0E2E75511D83F3A4237674DE3F7F4CAD5C5A7955A0881AE9FF1245FC60B94202D2113F5F481E80B10B4357293888B076560EC89DF779E82E65990C0D91CD529A013D4A2E1A48805581A75355A8C048F3A23B34F72B22262497E34B618CD969320E5A1B98BBAC60478CFB082CC5554BFA298AE854E0B3DE463A85FF09DB3F5C3A7F2CDD3F1B301C0A74AD6421ACE165F72DDACA1DAF42E6F15E7217344477285DBA197BFB56B06B428767721E675CB37B06167E4A19002A47919244B1CB2F06E71595010D44FE807021C878CB1A4515D7D5DF0E51BFDEAF7B46FAE11610A93F9D82D27369FF379852BC7CC3187E6E65FBFB5833DB76FF675A337B0157907E4BC8FCFB4B4ADC25EDBEC681B071C5932566498BEE06EA520394EA01F7075B5D2D636B826F5BC9D888FDC23D55310FA4AB102D1AB8C2495578D00F3446B02CB03AF7C55E06832980A12A5AA8F57C2A3C3731DA1BCDC797E511F7530B9B9BF817DA0727DBCAEDAE1ECC054C69850474848CE9D237E73E16C3B5C1C329EB76337F63004522C7042EDE39615D2087CF66E2A7DAEA44AC2F4C1A9BBAA8E0C7D02500C74869B6506D50BAC5063AEED91994924BEDD3AF91ACF48E5F4053EE65B2587B44589698C8207DBDFE2A85BF35F2AC4177A8AA18E20F10F3B5C1F9B9221D5CF9C4C82F323225D357CA373405B0C496FA4E508ED0FE5E1A80140D0B68BAFB19E22805651210E86C28CF50DDB09F819E44905F1248D410DCA0329B89BE4CAA285076C477C60CD8B462F40BAA7C3CBFAB51A328DB986125BE5035DC1F4469AE49288138C3800F841A683E06969022FE22461FE0158AB6D82C4B5401B04114B4F7329C9EE83BC9F4902780DC9552605A3D2CBDFBE82C01CE40420CB12C5109A9CE66E098295032766E31C827637640FCF30BB1BDE3AC37A3B9A053713EAE87A232608EED7397E495EC800DB561B8C461189F7A9FBD104FD380A6F3497FD3A06> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GEMALB+BebasNeue /BebasNeue findfont ct_VMDictPut/GEMALB+BebasNeue*1 [87{/.notdef}rp /W 9{/.notdef}rp /a /b 2{/.notdef}rp /e 3{/.notdef}rp /i 4{/.notdef}rp /n 3{/.notdef}rp /r 141{/.notdef}rp]GEMALB+BebasNeue nfGEMALB+BebasNeue*1 [32.6134 0 0 -32.6134 0 0 ]msf157.19 400.422 mo(Webinar)[18.3613 12.001 13.2412 6.19629 13.9248 13.2734 0 ]xsh%ADOBeginSubsetFont: BebasNeueLight Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2018 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /BebasNeueLight def/FontInfo 7 dict dup begin/Notice (Copyright \\\\\\\(c\\\\\\\) 2010 by Ryoichi Tsunekawa. All rights reserved.) def/Weight (Light) def/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 67 /C putdup 99 /c putdup 101 /e putdup 110 /n putdup 111 /o putdup 112 /p putdup 116 /t putdef/FontBBox {-47 -179 801 875} defendsystemdict begindup /Private11 dict dup begin/|- {def} def/| {put} def/BlueValues [-5 -0 700 705] def/BlueScale 0.037 def/BlueFuzz 0 def/StdHW [20] def/StdVW [22] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings8 dict dup begin/C <1C60D8A8C9B7299ACAB23777FC708249788E7EC29B05D497C46D76855C0D3BF543E0826F5E02543B0008BD1DA562D64FF82F37451765B12CD156E980602E423ADCCD2F2B4FF39C0FEE31179DE4568557FFF4FEA5373ED6> |-/c <1C60D8A8C9B7299ACAB23777FC708249788E7EC29B05D497C46D76855C0D3BF543E0826F5E02543B0008BD1DA562D64FF82F37451765B12CD156E980602E423ADCCD2F2B4FF39C0FEE31179DE4568557FFF4FEA5373ED6> |-/e <1C60D8A8C9B813792CAA7EB2A8E879ADC68C6EEAEF623AFFED6A9A7CCDB49A7A244AE7423F8BD203F1FD24679DE03D18A9E3218E741CA773871C> |-/n <1C60D8A8C9B7212EC2E283F114FF5764E6F508BCE3D048B16EA82279E276C5C52AC29875B3167382FF3F4D154089E339D72F6B5526327D555857F1A325A2080C500F888309AC37> |-/o <1C60D8A8C9B723CD4B9F6679BCE2F0556917BDEBBCCEA793AC9DF7FD2B8CCE4A858B11915CA326B5669D5519760394253AA5C4F86DA3C778FA607A990D189337CDF4F47A14F3ADB8642AA1F8A1E33FF9> |-/p <1C60D8A8C9B80527B72EF549B815217E9A0C6C1D0FD3710266AB3686B383A696F6849C86A709B2818C35B237A0DEDED98386C0B544C6D8F17DDC1AF082D0AB35D03E8DAF2D80AED3E91C2C95A5B50F4870> |-/t <1C60D8A8C9B72C0FA69C4967D01395C40EC4C0B17B78375C6741710BB9D05B8149A535F556817D0155BB9E> |-/.notdef <1C60D8A8C9B797473C5DF189A056D3A967C82EA5EB22C7BCF30D41A52C022A4BC8832A254F70C19CC10612F5A712ED2CD61F6B32C87A351A16EDCC26B80265A0F869C417C578F3A1FFAAC4088B5BC12D22B0> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/GEMALC+BebasNeueLight /BebasNeueLight findfont ct_VMDictPut/GEMALC+BebasNeueLight*1 [67{/.notdef}rp /C 31{/.notdef}rp /c /.notdef /e 8{/.notdef}rp /n /o /p 3{/.notdef}rp /t 139{/.notdef}rp]GEMALC+BebasNeueLight nfGEMALC+BebasNeueLight*1 [32.6134 0 0 -32.6134 0 0 ]msf157.19 431.977 mo(Concept)[12.0664 12.2627 12.3271 12.0674 11.251 11.708 0 ]xsh210.202 266.85 mo
212.656 268.267 212.688 270.559 210.25 271.976 cv
182.898 287.872 li
180.479 289.277 176.502 289.277 174.048 287.86 cv
146.537 271.976 li
144.083 270.559 144.09 268.267 146.508 266.862 cv
173.861 250.966 li
176.299 249.549 180.236 249.549 182.69 250.966 cv
210.202 266.85 li
cp
.857572 .623407 .472023 .324712 cmyk
f
210.25 271.976 mo
182.898 287.872 li
181.684 288.577 180.078 288.926 178.469 288.922 cv
176.872 288.918 175.271 288.566 174.048 287.86 cv
146.536 271.976 li
145.304 271.265 144.692 270.332 144.695 269.403 cv
144.688 271.95 li
144.685 272.879 145.297 273.812 146.529 274.523 cv
174.041 290.407 li
175.266 291.114 176.869 291.467 178.469 291.47 cv
180.076 291.473 181.679 291.123 182.89 290.419 cv
210.243 274.523 li
211.449 273.822 212.051 272.907 212.053 271.989 cv
212.061 269.442 li
212.058 270.36 211.457 271.275 210.25 271.976 cv
cp
.952148 .735225 .490547 .48014 cmyk
f
167.996 276.546 mo
163.591 273.986 li
163.54 255.875 li
167.944 258.435 li
167.996 276.546 li
cp
.936248 .742184 .517174 .56936 cmyk
f
167.944 258.435 mo
163.54 255.875 li
184.348 243.862 li
188.753 246.421 li
167.944 258.435 li
cp
.960967 .723171 .449805 .374731 cmyk
f
188.753 246.421 mo
188.804 264.532 li
167.996 276.546 li
167.944 258.435 li
188.753 246.421 li
cp
.838773 .592706 .414343 .215976 cmyk
f
108.298 287.755 mo
108.094 177.976 li
103.689 175.417 li
103.894 285.196 li
103.898 286.6 104.396 287.587 105.195 288.052 cv
109.6 290.611 li
108.8 290.147 108.302 289.159 108.298 287.755 cv
.952148 .735225 .490547 .48014 cmyk
f
235.131 95.9497 mo
234.321 95.479 233.197 95.5478 231.957 96.2636 cv
108.104 167.77 li
105.67 169.176 103.681 172.597 103.689 175.417 cv
108.094 177.976 li
108.086 175.157 110.074 171.735 112.508 170.33 cv
236.361 98.8233 li
237.601 98.1075 238.726 98.0387 239.536 98.5095 cv
235.131 95.9497 li
cp
.838773 .592706 .414343 .215976 cmyk
f
236.361 98.8233 mo
238.815 97.4066 240.817 98.5243 240.825 101.344 cv
241.03 211.123 li
241.037 213.943 239.049 217.387 236.595 218.804 cv
112.742 290.311 li
110.308 291.716 108.306 290.575 108.298 287.756 cv
108.094 177.977 li
108.086 175.157 110.074 171.735 112.508 170.33 cv
236.361 98.8233 li
.743252 .453803 .350103 .0764477 cmyk
f
236.527 146.796 mo
236.71 211.418 li
171.395 249.128 li
180.072 238.661 189.02 226.929 197.965 213.844 cv
214.783 189.243 227.345 166.07 236.527 146.796 cv
cp
.588006 0 .309911 0 cmyk
f
236.425 110.682 mo
236.456 121.515 li
233.21 126.605 229.627 132.024 225.7 137.713 cv
230.37 126.906 233.887 117.715 236.425 110.682 cv
cp
.530266 0 .280858 0 cmyk
f
236.456 121.515 mo
236.484 131.637 li
230.281 141.563 222.442 153.059 212.894 165.05 cv
217.885 155.168 222.132 145.975 225.7 137.713 cv
229.627 132.024 233.21 126.605 236.456 121.515 cv
cp
.603082 0 .366522 0 cmyk
f
236.484 131.637 mo
236.527 146.796 li
227.345 166.07 214.783 189.243 197.965 213.844 cv
189.02 226.929 180.072 238.661 171.395 249.128 cv
148.74 262.208 li
152.093 258.26 155.466 254.142 158.838 249.883 cv
182.589 219.869 200.172 190.225 212.894 165.05 cv
222.442 153.059 230.281 141.563 236.484 131.637 cv
cp
.776211 .0650034 .471412 0 cmyk
f
225.7 137.713 mo
222.132 145.975 217.885 155.168 212.894 165.05 cv
206.328 173.309 198.956 181.787 190.756 190.141 cv
176.535 204.616 162.712 215.765 149.867 224.378 cv
159.273 216.008 169.138 206.464 179.281 195.594 cv
198.111 175.408 213.529 155.322 225.7 137.713 cv
cp
.530266 0 .280858 0 cmyk
f
212.894 165.05 mo
200.172 190.225 182.589 219.869 158.838 249.883 cv
155.466 254.142 152.093 258.26 148.74 262.208 cv
112.893 282.904 li
112.81 253.598 li
123.824 245.995 136.37 236.392 149.867 224.378 cv
162.712 215.765 176.535 204.616 190.756 190.141 cv
198.956 181.787 206.328 173.309 212.894 165.05 cv
cp
.603082 0 .366522 0 cmyk
f
112.784 244.212 mo
114.165 243.656 115.578 243.068 117.02 242.445 cv
123.188 239.781 129.896 236.475 137.02 232.377 cv
137.112 232.324 137.205 232.271 137.297 232.218 cv
137.45 232.129 li
140.544 230.339 143.714 228.4 146.954 226.298 cv
147.919 225.673 148.89 225.033 149.867 224.378 cv
136.37 236.392 123.824 245.995 112.81 253.598 cv
112.784 244.212 li
cp
.776211 .0650034 .471412 0 cmyk
f
236.406 104.221 mo
236.425 110.682 li
233.887 117.715 230.37 126.906 225.7 137.713 cv
213.529 155.322 198.111 175.408 179.281 195.594 cv
169.138 206.464 159.273 216.008 149.867 224.378 cv
148.89 225.033 147.919 225.673 146.954 226.298 cv
143.715 228.4 140.543 230.34 137.45 232.129 cv
129.896 236.475 123.188 239.781 117.02 242.445 cv
115.578 243.068 114.165 243.656 112.784 244.212 cv
112.589 175.707 li
236.406 104.221 li
cp
.707332 0 .368841 0 cmyk
f
112.714 175.631 mo
112.725 181.788 li
236.41 110.379 li
236.399 104.221 li
112.714 175.631 li
cp
.447974 0 .236027 0 cmyk
f
121.343 275.154 mo
119.527 276.202 118.076 278.739 118.082 280.802 cv
118.087 282.888 119.549 283.721 121.364 282.673 cv
123.16 281.636 124.611 279.122 124.605 277.036 cv
124.6 274.973 123.138 274.117 121.343 275.154 cv
.936248 .742184 .517174 .56936 cmyk
f
121.343 276.19 mo
120.027 276.949 118.975 278.789 118.979 280.284 cv
118.983 281.796 120.042 282.4 121.358 281.64 cv
122.66 280.889 123.712 279.066 123.708 277.554 cv
123.704 276.058 122.645 275.438 121.343 276.19 cv
.11313 .869688 .333989 .000488289 cmyk
f
137.552 174.924 mo
137.947 174.696 138.268 174.879 138.27 175.333 cv
138.271 175.787 137.952 176.34 137.556 176.568 cv
137.155 176.8 136.834 176.617 136.833 176.162 cv
136.832 175.708 137.151 175.156 137.552 174.924 cv
cp
0 .85156 .162356 0 cmyk
f
140.477 173.235 mo
140.873 173.007 141.194 173.19 141.195 173.644 cv
141.196 174.098 140.877 174.651 140.482 174.879 cv
140.086 175.107 139.766 174.924 139.764 174.47 cv
139.763 174.016 140.082 173.463 140.477 173.235 cv
cp
.67126 0 .361639 0 cmyk
f
143.304 171.603 mo
143.699 171.375 144.02 171.558 144.021 172.012 cv
144.023 172.467 143.704 173.019 143.308 173.247 cv
142.913 173.475 142.592 173.293 142.591 172.838 cv
142.589 172.384 142.908 171.831 143.304 171.603 cv
cp
0 .493324 .647425 0 cmyk
f
140.482 174.879 mo
140.877 174.651 141.196 174.098 141.195 173.644 cv
141.194 173.19 140.873 173.007 140.477 173.235 cv
140.082 173.463 139.763 174.016 139.764 174.47 cv
139.765 174.924 140.086 175.107 140.482 174.879 cv
143.308 173.247 mo
143.704 173.019 144.023 172.467 144.021 172.012 cv
144.02 171.558 143.699 171.375 143.304 171.603 cv
142.908 171.831 142.589 172.384 142.591 172.838 cv
142.592 173.293 142.913 173.475 143.308 173.247 cv
137.556 176.568 mo
137.952 176.34 138.271 175.787 138.269 175.333 cv
138.268 174.879 137.947 174.696 137.552 174.924 cv
137.15 175.156 136.832 175.708 136.833 176.162 cv
136.834 176.617 137.155 176.8 137.556 176.568 cv
201.61 136.461 mo
202.227 136.105 202.728 136.391 202.73 137.099 cv
202.74 140.587 li
135.531 179.391 li
135.521 175.902 li
135.519 175.194 136.018 174.33 136.64 173.971 cv
201.61 136.461 li
cp
.0402228 .022919 .0259098 0 cmyk
f
198.986 207.331 mo
198.988 208.093 li
161.969 229.466 li
161.967 228.704 li
198.986 207.331 li
cp
.264561 .199496 .196445 0 cmyk
f
198.98 205.473 mo
198.983 206.235 li
161.964 227.608 li
161.962 226.846 li
198.98 205.473 li
cp
f
161.973 230.562 mo
161.975 231.323 li
178.841 221.586 li
178.839 220.824 li
161.973 230.562 li
161.967 228.704 mo
161.969 229.466 li
198.988 208.093 li
198.986 207.331 li
161.967 228.704 li
161.962 226.846 mo
161.964 227.608 li
198.982 206.235 li
198.98 205.473 li
161.962 226.846 li
161.947 221.379 mo
161.953 223.518 li
184.896 210.271 li
184.89 208.133 li
161.947 221.379 li
140.707 233.642 mo
140.74 245.337 li
156.164 236.432 li
156.131 224.737 li
140.707 233.642 li
135.743 253.939 mo
135.68 231.825 li
202.889 193.022 li
202.955 216.466 li
202.957 217.181 202.459 218.044 201.842 218.4 cv
136.873 255.91 li
136.25 256.27 135.749 255.984 135.746 255.269 cv
135.743 253.939 li
cp
.0402228 .022919 .0259098 0 cmyk
f
178.839 220.824 mo
178.841 221.586 li
161.975 231.323 li
161.973 230.562 li
178.839 220.824 li
cp
.264561 .199496 .196445 0 cmyk
f
184.89 208.133 mo
184.896 210.271 li
161.953 223.518 li
161.947 221.379 li
184.89 208.133 li
cp
f
199.605 191.638 mo
199.608 192.78 li
149.483 221.721 li
149.537 221.511 149.567 221.302 149.567 221.103 cv
149.566 220.901 149.535 220.726 149.479 220.578 cv
199.605 191.638 li
cp
.451301 .360998 .348333 .0130312 cmyk
f
156.131 224.737 mo
156.164 236.432 li
140.74 245.337 li
140.707 233.642 li
156.131 224.737 li
cp
.264561 .199496 .196445 0 cmyk
f
148.085 220.252 mo
148.724 219.882 149.272 220.038 149.479 220.578 cv
149.535 220.726 149.566 220.901 149.567 221.103 cv
149.567 221.302 149.537 221.511 149.483 221.721 cv
149.281 222.496 148.735 223.284 148.094 223.654 cv
147.274 224.127 146.609 223.748 146.606 222.812 cv
146.604 221.87 147.265 220.725 148.085 220.252 cv
cp
.11313 .869688 .333989 .000488289 cmyk
f
169.226 191.954 mo
173.286 189.61 176.567 183.927 176.554 179.262 cv
176.541 174.597 173.238 172.715 169.179 175.059 cv
165.119 177.403 161.838 183.086 161.851 187.751 cv
161.864 192.415 165.167 194.297 169.226 191.954 cv
135.531 179.391 mo
202.74 140.587 li
202.874 187.615 li
135.665 226.418 li
135.531 179.391 li
cp
.855436 .829465 .462623 .51165 cmyk
f
139.091 228.825 mo
141.61 225.697 li
139.082 225.477 li
139.091 228.825 li
199.608 192.78 mo
199.605 191.638 li
149.479 220.578 li
149.272 220.038 148.724 219.882 148.085 220.252 cv
147.265 220.725 146.604 221.87 146.606 222.812 cv
146.609 223.748 147.274 224.127 148.094 223.654 cv
148.735 223.284 149.281 222.496 149.483 221.721 cv
199.608 192.78 li
135.665 226.418 mo
202.874 187.615 li
202.889 193.022 li
135.68 231.825 li
135.665 226.418 li
cp
.264561 .199496 .196445 0 cmyk
f
167.233 181.283 mo
172.297 181.72 li
167.252 187.986 li
167.233 181.283 li
cp
0 .219608 .596918 0 cmyk
f
167.252 187.986 mo
172.297 181.72 li
167.233 181.283 li
167.252 187.986 li
169.179 175.059 mo
173.238 172.715 176.541 174.597 176.554 179.262 cv
176.567 183.927 173.286 189.61 169.226 191.954 cv
165.167 194.297 161.864 192.415 161.851 187.751 cv
161.838 183.086 165.119 177.403 169.179 175.059 cv
cp
0 .85156 .162356 0 cmyk
f
139.082 225.477 mo
141.61 225.697 li
139.091 228.825 li
139.082 225.477 li
cp
.0402228 .022919 .0259098 0 cmyk
f
168.694 192.746 mo
165.352 190.804 li
174.094 179.939 li
177.435 181.881 li
168.694 192.746 li
cp
0 .85156 .162356 0 cmyk
f
177.769 167.489 mo
181.111 169.431 li
178.792 168.083 175.58 168.273 172.036 170.319 cv
168.695 168.377 li
172.239 166.331 175.45 166.141 177.769 167.489 cv
cp
0 .679622 .1308 0 cmyk
f
163.044 200.517 mo
159.703 198.576 li
157.413 197.245 155.994 194.416 155.982 190.396 cv
155.959 182.303 161.652 172.444 168.695 168.377 cv
172.036 170.319 li
164.993 174.385 159.301 184.245 159.324 192.338 cv
159.335 196.358 160.755 199.187 163.044 200.517 cv
cp
.0706798 .87216 .2309 0 cmyk
f
168.694 192.746 mo
177.435 181.881 li
168.661 181.117 li
168.694 192.746 li
172.036 170.319 mo
179.079 166.253 184.808 169.518 184.831 177.611 cv
184.854 185.704 179.162 195.563 172.119 199.629 cv
165.076 203.696 159.347 200.43 159.324 192.338 cv
159.301 184.245 164.993 174.385 172.036 170.319 cv
cp
0 .85156 .162356 0 cmyk
f
171.731 182.6 mo
180.816 183.391 li
171.765 194.641 li
171.731 182.6 li
cp
0 .219608 .596918 0 cmyk
f
171.731 182.6 mo
168.271 180.589 li
177.356 181.38 li
180.816 183.391 li
171.731 182.6 li
cp
0 .14786 .399512 0 cmyk
f
171.765 194.641 mo
168.305 192.631 li
168.271 180.589 li
171.731 182.6 li
171.765 194.641 li
cp
.123751 .290471 .664302 0 cmyk
f
272.615 199.284 mo
270.628 203.709 267.234 204.095 262.926 204.631 cv
262.733 204.656 262.548 204.648 262.339 204.623 cv
262.247 204.589 li
262.096 204.556 261.953 204.514 261.819 204.447 cv
261.719 204.422 li
255.13 202.117 237.327 191.966 236.514 191.916 cv
236.514 191.916 233.556 193.098 232.391 192.268 cv
231.226 191.438 230.505 190.935 229.692 190.868 cv
228.895 190.776 225.861 191.262 225.04 191.17 cv
224.881 191.153 224.621 191.028 224.302 190.826 cv
224.294 190.826 li
224.294 190.818 li
223.967 190.273 229.189 188.907 229.189 188.907 cv
229.189 188.513 li
229.189 188.513 223.255 189.485 222.602 189.418 cv
221.688 188.504 221.222 187.807 221.59 187.128 cv
221.59 187.128 224.644 185.445 225.406 185.093 cv
226.144 184.724 229.608 183.702 230.48 183.878 cv
231.351 184.02 239.138 185.747 239.138 185.747 cv
261.811 191.656 li
263.412 192.075 264.677 192.679 265.658 193.425 cv
266.102 193.76 268.323 192.536 268.885 192.478 cv
270.159 192.352 271.768 192.754 272.581 193.802 cv
273.788 195.353 273.361 197.624 272.615 199.284 cv
cp
.0567636 .141695 .269688 0 cmyk
f
226.297 186.5 mo
226.245 187.286 228.602 187.155 229.676 187.181 cv
230.75 187.208 231.326 188.465 232.374 189.015 cv
233.422 189.565 236.172 189.748 236.093 190.194 cv
236.015 190.639 233.448 190.194 232.374 189.827 cv
231.3 189.46 231.09 187.915 229.833 187.889 cv
228.576 187.862 226.559 187.784 226.166 187.181 cv
225.773 186.579 226.297 186.5 226.297 186.5 cv
cp
.106111 .20856 .329503 0 cmyk
f
229.961 183.868 mo
229.961 183.868 225.942 183.829 224.973 183.855 cv
224.004 183.881 220.697 183.775 220.587 184.614 cv
220.505 185.242 223.517 185.322 225.274 185.4 cv
227.03 185.479 229.781 184.483 229.781 184.483 cv
230.481 183.874 li
229.961 183.868 li
cp
.0567636 .141695 .269688 0 cmyk
f
229.833 187.889 mo
229.833 187.889 229.665 189.117 229.624 190.089 cv
229.582 191.06 229.025 190.81 229.231 187.705 cv
229.833 187.889 li
cp
.106111 .20856 .329503 0 cmyk
f
226.166 186.911 mo
221.591 188.103 li
221.794 188.44 li
226.681 187.295 li
226.166 186.911 li
cp
f
224.805 185.405 mo
224.805 185.405 228.392 185.208 228.48 185.405 cv
228.567 185.601 226.454 185.584 225.668 185.584 cv
224.883 185.584 224.354 185.628 224.354 185.628 cv
224.805 185.405 li
cp
f
229.201 188.253 mo
222.602 189.418 li
222.934 189.551 li
222.934 189.551 226.873 188.989 227.642 188.849 cv
228.41 188.709 229.509 188.44 229.509 188.44 cv
229.201 188.253 li
cp
f
228.043 185.628 mo
228.043 185.628 229.929 185.164 230.243 185.164 cv
230.558 185.164 232.723 185.331 232.81 185.317 cv
232.898 185.304 230.645 184.71 230.051 184.833 cv
229.458 184.955 228.043 185.628 228.043 185.628 cv
cp
f
240.708 195.152 mo
238.132 194.306 li
238.132 194.306 236.522 191.334 237.147 188.787 cv
237.773 186.24 239.358 185.429 239.358 185.429 cv
242.271 185.786 li
240.708 195.152 li
cp
.0153201 .0126345 .0151369 0 cmyk
f
251.547 187.186 mo
247.797 185.582 241.735 184.973 241.735 184.973 cv
241.735 184.973 239.968 185.582 239.549 189.381 cv
239.131 193.181 239.173 194.248 240.07 195.913 cv
246.772 199.029 li
251.547 187.186 li
cp
.757717 .536461 .470283 .232944 cmyk
f
248.623 163.519 mo
248.623 163.519 246.552 164.494 246.153 165.05 cv
245.755 165.607 245.716 168.785 246.58 169.336 cv
247.444 169.887 249.171 169.108 249.171 169.108 cv
.0779431 .0682383 .132265 0 cmyk
f
247.396 169.908 mo
247.031 169.908 246.674 169.84 246.379 169.652 cv
246.027 169.428 245.776 168.941 245.634 168.204 cv
245.422 167.108 245.471 165.36 245.849 164.832 cv
246.282 164.227 248.103 163.35 248.464 163.18 cv
248.783 163.859 li
247.959 164.247 246.693 164.94 246.458 165.269 cv
246.291 165.502 246.147 166.911 246.37 168.062 cv
246.513 168.798 246.722 168.981 246.781 169.02 cv
247.35 169.381 248.617 168.946 249.017 168.767 cv
249.325 169.45 li
249.187 169.513 248.274 169.908 247.396 169.908 cv
cp
.855436 .829465 .462623 .51165 cmyk
f
271.609 339.954 mo
271.609 339.954 259.666 336.539 257.104 337.82 cv
254.543 339.1 256.507 344.053 262.056 347.212 cv
267.606 350.371 270.607 352.335 273.546 353.103 cv
276.486 353.872 281.097 353.957 281.78 351.054 cv
282.463 348.151 282.121 344.65 281.353 343.37 cv
280.584 342.089 271.609 339.954 271.609 339.954 cv
cp
.936248 .742184 .517174 .56936 cmyk
f
270.542 339.168 mo
270.542 341.811 li
270.542 341.811 271.564 345.571 275.873 345.546 cv
280.772 345.518 280.885 342.958 280.885 342.958 cv
280.74 339.281 li
.0840467 .204257 .380835 0 cmyk
f
254.602 350.334 mo
254.602 350.334 241.207 346.504 238.334 347.94 cv
235.461 349.377 237.664 354.931 243.888 358.474 cv
250.113 362.017 253.478 364.22 256.775 365.082 cv
260.072 365.944 265.244 366.04 266.01 362.784 cv
266.776 359.528 266.393 355.601 265.531 354.165 cv
264.669 352.728 254.602 350.334 254.602 350.334 cv
cp
.936248 .742184 .517174 .56936 cmyk
f
254.602 348.803 mo
254.602 353.59 li
254.602 353.59 255.189 356.75 259.881 357.038 cv
264.573 357.325 265.531 354.165 265.531 354.165 cv
265.531 350.454 li
258.444 349.377 li
254.602 348.803 li
cp
.0840467 .204257 .380835 0 cmyk
f
281.736 252.36 mo
283.011 258.477 279.41 265.553 279.219 268.234 cv
279.027 270.916 280.998 290.843 282.147 305.007 cv
283.297 319.172 282.57 344.893 282.57 344.893 cv
282.57 344.893 280.526 347.862 275.982 347 cv
271.438 346.138 268.858 343.936 268.858 343.936 cv
268.858 343.936 265.429 293.133 264.471 287.579 cv
263.514 282.024 261.859 259.807 261.728 256.36 cv
261.598 252.912 279.119 239.808 281.736 252.36 cv
cp
.765133 .54107 .492592 .267643 cmyk
f
244.317 258.336 mo
243.978 279.151 247.234 301.177 247.617 303.667 cv
248 306.157 250.981 351.357 250.981 351.357 cv
250.981 351.357 255.325 364.061 267.583 357.453 cv
267.583 357.453 266.649 312.163 266.422 305.138 cv
266.195 298.112 265.059 283.556 265.531 276.278 cv
266.003 269 270.101 267.085 270.542 257.509 cv
270.542 257.509 268.941 248.699 257.417 249.465 cv
245.893 250.231 244.317 258.336 244.317 258.336 cv
cp
.757717 .536461 .470283 .232944 cmyk
f
240.229 205.181 mo
238.859 196.862 243.364 192.273 253.444 186.364 cv
257.61 183.922 273.124 173.292 280.737 182.772 cv
288.35 192.253 280.306 213.512 280.737 225.579 cv
281.168 237.645 284.027 256.877 284.027 256.877 cv
284.027 256.877 279.157 262.628 265.08 263.92 cv
251.002 265.213 240.962 262.018 240.962 262.018 cv
240.962 262.018 244.251 229.601 240.229 205.181 cv
cp
.779202 .591241 .502647 .329534 cmyk
f
249.853 157.635 mo
249.853 157.635 248.321 163.285 248.034 164.434 cv
247.746 165.583 247.938 167.211 248.034 167.977 cv
248.129 168.743 246.789 170.85 246.98 171.808 cv
247.172 172.765 248.034 178.511 249.853 180.139 cv
251.673 181.767 255.024 181.192 255.024 181.192 cv
255.024 181.192 254.737 186.268 255.024 186.938 cv
255.312 187.608 263.164 187.034 266.42 185.119 cv
269.676 183.203 268.527 178.032 268.527 178.032 cv
260.196 157.635 li
249.853 157.635 li
cp
.0567636 .141695 .269688 0 cmyk
f
249.848 157.64 mo
249.743 157.541 249.639 157.44 249.536 157.338 cv
249 156.808 248.707 156.114 248.409 155.436 cv
247.806 154.061 247.494 152.687 247.322 151.21 cv
247.461 151.707 248.087 152.046 248.475 152.315 cv
248.451 151.559 248.864 150.911 249.106 150.216 cv
249.386 149.412 249.702 148.584 249.957 147.787 cv
250.118 148.126 250.283 148.624 250.58 148.854 cv
250.976 148.038 252.289 147.513 253.028 147.199 cv
253.97 146.798 255.22 146.16 256.273 146.156 cv
256.268 146.614 255.996 147.009 255.923 147.453 cv
257.001 147.274 258.131 147.334 259.221 147.315 cv
259.789 147.305 260.379 147.281 260.936 147.413 cv
260.889 147.813 260.536 148.352 260.322 148.707 cv
260.777 148.811 261.243 148.878 261.681 149.036 cv
264.776 150.153 267.937 151.301 270.884 152.727 cv
271.455 153.003 271.997 153.327 272.526 153.675 cv
273.116 154.063 273.945 154.598 274.129 155.336 cv
274.704 157.635 274.129 159.646 274.129 159.646 cv
274.129 159.646 275.997 162.806 275.709 164.673 cv
275.422 166.541 268.527 178.032 268.527 178.032 cv
268.527 178.032 264.152 178.607 262.605 177.314 cv
261.057 176.021 259.621 170.994 257.61 170.419 cv
255.599 169.844 254.881 173.579 254.881 173.579 cv
253.588 172.574 li
253.588 172.574 254.306 168.408 253.444 166.971 cv
252.932 166.118 252.458 165.475 252.158 165.095 cv
251.949 164.83 251.854 164.496 251.897 164.162 cv
252.439 159.933 li
251.58 159.17 250.679 158.43 249.848 157.64 cv
cp
.855436 .829465 .462623 .51165 cmyk
f
225.107 262.402 mo
225.383 261.482 228.301 253.277 228.301 253.277 cv
237.748 229.513 li
238.414 227.836 239.241 226.55 240.182 225.584 cv
239.637 216.565 241.965 200.656 241.965 200.656 cv
241.965 200.656 250.549 194.732 253.301 204.909 cv
253.301 204.909 252.329 220.743 252.034 227.445 cv
252.043 227.467 li
252.002 228.197 li
251.968 229.028 251.948 229.678 251.948 230.047 cv
251.948 230.265 251.914 230.465 251.861 230.656 cv
251.859 230.685 li
251.813 230.78 li
251.759 230.937 251.689 231.085 251.6 231.223 cv
251.56 231.306 li
251.56 231.329 li
248.182 238.154 235.564 256.794 235.403 257.667 cv
235.403 257.667 236.024 260.839 234.966 261.988 cv
233.909 263.137 232.76 263.321 232.576 264.194 cv
232.369 265.045 232.484 268.4 232.278 269.274 cv
232.094 270.124 228.462 273.572 227.106 272.606 cv
227.106 272.606 225.957 269.458 225.681 268.584 cv
225.383 267.734 224.808 263.321 225.107 262.402 cv
cp
.0567636 .141695 .269688 0 cmyk
f
231.875 269.948 mo
231.233 270.266 230.38 263.92 230.38 263.92 cv
229.792 264.062 230.983 270.889 230.983 270.889 cv
231.875 269.948 li
cp
.106111 .20856 .329503 0 cmyk
f
230.003 271.738 mo
229.238 271.697 228.375 264.242 228.159 264.074 cv
227.943 263.906 228.894 271.869 229.379 272.119 cv
230.003 271.738 li
cp
f
228.354 272.649 mo
227.712 272.502 227.231 268.687 227.063 267.846 cv
226.894 267.005 226.894 264.093 226.702 264.083 cv
226.51 264.074 226.414 266.873 226.774 268.345 cv
227.135 269.817 227.748 272.724 228.053 272.734 cv
228.354 272.649 li
cp
f
237.643 255.6 mo
236.171 257.971 li
236.171 257.971 232.807 258.856 230.413 257.612 cv
228.019 256.367 227.816 254.645 227.816 254.645 cv
228.881 251.819 li
237.643 255.6 li
cp
.0153201 .0126345 .0151369 0 cmyk
f
253.758 200.351 mo
250.816 190.285 241.605 193.565 240.305 197.948 cv
239.194 201.696 239.336 206.153 239.248 210.021 cv
239.145 214.529 239.292 219.111 238.359 223.548 cv
237.337 228.4 235.401 232.91 233.786 237.563 cv
232.916 240.065 231.965 242.545 231.027 245.022 cv
230.556 246.265 230.078 247.505 229.59 248.741 cv
229.424 249.16 227.983 251.954 228.177 252.226 cv
231.624 257.064 239.989 258.276 239.989 258.276 cv
239.989 258.276 252.726 233.479 253.302 231.899 cv
253.877 230.319 253.875 225.579 254.577 213.08 cv
254.934 208.451 254.781 203.854 253.758 200.351 cv
cp
.757717 .536461 .470283 .232944 cmyk
f
258.343 170.831 mo
259.398 172.089 258.519 174.539 257.843 175.532 cv
257.166 176.526 255.628 176.814 255.147 175.532 cv
255.147 175.532 254.883 176.965 255.812 177.359 cv
256.742 177.753 258.287 177.487 258.833 175.308 cv
259.378 173.128 259.121 172.163 259.039 171.878 cv
258.958 171.593 258.343 170.831 258.343 170.831 cv
cp
.0840467 .204257 .380835 0 cmyk
f
268.527 178.032 mo
268.527 178.032 268.522 182.307 262.13 183.313 cv
255.738 184.318 254.449 183.632 254.449 183.632 cv
251.542 187.505 li
251.542 187.505 258.811 189.38 264.125 186.866 cv
269.44 184.353 269.871 182.198 270.23 181.264 cv
270.589 180.33 268.527 178.032 268.527 178.032 cv
cp
.0153201 .0126345 .0151369 0 cmyk
f
239.891 253.239 mo
239.891 253.531 240.128 253.768 240.42 253.768 cv
240.712 253.768 240.949 253.531 240.949 253.239 cv
240.949 252.947 240.712 252.711 240.42 252.711 cv
240.128 252.711 239.891 252.947 239.891 253.239 cv
cp
.779202 .591241 .502647 .329534 cmyk
f
238.633 255.9 mo
238.633 256.192 238.87 256.428 239.162 256.428 cv
239.454 256.428 239.691 256.192 239.691 255.9 cv
239.691 255.608 239.454 255.371 239.162 255.371 cv
238.87 255.371 238.633 255.608 238.633 255.9 cv
cp
f
255.87 173.691 mo
255.87 173.093 256.115 172.174 256.838 172.135 cv
257.211 172.115 257.561 172.204 257.756 172.553 cv
257.838 172.699 257.879 172.93 257.807 173.079 cv
257.549 172.714 257.129 172.42 256.69 172.738 cv
256.353 172.982 256.124 173.407 256.407 173.749 cv
256.659 174.053 256.927 174.809 256.343 174.962 cv
256.113 175.023 255.486 175.077 255.652 174.68 cv
255.747 174.452 256.061 174.435 256.174 174.242 cv
256.302 174.024 256.119 173.91 255.993 173.777 cv
255.873 173.65 255.826 173.525 255.889 173.331 cv
.0840467 .204257 .380835 0 cmyk
f
256.154 170.465 mo
246.324 165.227 li
f
255.978 170.796 mo
246.147 165.559 li
246.501 164.896 li
256.331 170.134 li
255.978 170.796 li
cp
.855436 .829465 .462623 .51165 cmyk
f
269.232 178.906 mo
269.232 178.906 270.07 181.705 267.327 183.105 cv
260.085 186.799 252.071 186.8 252.071 186.8 cv
248.623 189.402 li
248.623 189.402 252.451 189.326 257.492 189.061 cv
262.532 188.796 268.159 186.69 270.272 184.715 cv
274.084 181.151 268.724 178.261 268.724 178.261 cv
269.232 178.906 li
cp
.757717 .536461 .470283 .232944 cmyk
f
204.08 97.1595 mo
200.87 95.294 li
200.896 104.456 li
204.106 106.322 li
204.08 97.1595 li
cp
0 .85156 .162356 0 cmyk
f
217.651 55.8446 mo
214.441 53.9792 li
213.655 53.522 212.565 53.5866 211.362 54.281 cv
214.572 56.1465 li
215.775 55.4521 216.865 55.3874 217.651 55.8446 cv
cp
.00280766 .44303 .00903334 0 cmyk
f
164.908 114.581 mo
168.118 116.447 li
167.341 115.995 166.86 115.035 166.856 113.671 cv
163.646 111.805 li
163.65 113.17 164.131 114.13 164.908 114.581 cv
cp
0 .85156 .162356 0 cmyk
f
166.785 88.7166 mo
163.575 86.8511 li
163.646 111.805 li
166.856 113.671 li
166.785 88.7166 li
cp
f
214.572 56.1465 mo
211.362 54.281 li
167.888 79.3808 li
171.098 81.2463 li
214.572 56.1465 li
cp
.00280766 .44303 .00903334 0 cmyk
f
171.098 81.2463 mo
168.708 82.6264 166.777 85.97 166.785 88.7166 cv
166.856 113.671 li
166.864 116.417 168.807 117.525 171.197 116.145 cv
204.08 97.1595 li
204.106 106.322 li
212.054 92.5559 li
214.671 91.0449 li
217.061 89.6648 218.992 86.3213 218.984 83.5746 cv
218.913 58.6204 li
218.906 55.8737 216.963 54.7664 214.572 56.1465 cv
171.098 81.2463 li
0 .64239 .00363165 0 cmyk
f
171.098 81.2463 mo
167.888 79.3808 li
165.498 80.7609 163.567 84.1044 163.575 86.8511 cv
166.785 88.7166 li
166.777 85.9699 168.708 82.6264 171.098 81.2463 cv
cp
.00280766 .44303 .00903334 0 cmyk
f
179.64 104.797 mo
179.633 102.324 li
212.609 83.2851 li
212.617 85.7578 li
179.64 104.797 li
.16434 .72256 .159609 0 cmyk
f
174.365 101.771 mo
174.358 99.2913 li
212.592 77.217 li
212.599 79.6963 li
174.365 101.771 li
f
174.348 95.7026 mo
174.341 93.2299 li
212.575 71.1556 li
212.582 73.6283 li
174.348 95.7026 li
f
174.331 89.6412 mo
174.324 87.1617 li
212.558 65.0874 li
212.565 67.5668 li
174.331 89.6412 li
f
267.239 138.054 mo
264.671 136.562 li
264.697 145.717 li
267.265 147.21 li
267.239 138.054 li
cp
.148653 .13901 .253941 0 cmyk
f
310.948 78.1852 mo
308.38 76.6928 li
307.593 76.2356 306.504 76.3002 305.301 76.9947 cv
307.869 78.4871 li
309.072 77.7926 310.161 77.728 310.948 78.1852 cv
cp
.0153201 .0126345 .0151369 0 cmyk
f
258.899 138.418 mo
261.467 139.911 li
260.69 139.459 260.209 138.499 260.205 137.135 cv
257.637 135.642 li
257.641 137.007 258.122 137.967 258.899 138.418 cv
cp
.148653 .13901 .253941 0 cmyk
f
260.082 111.057 mo
257.514 109.565 li
257.637 135.642 li
260.205 137.135 li
260.082 111.057 li
cp
f
307.869 78.4871 mo
305.301 76.9947 li
261.827 102.094 li
264.395 103.587 li
307.869 78.4871 li
cp
.0153201 .0126345 .0151369 0 cmyk
f
264.395 103.587 mo
262.005 104.967 260.074 108.31 260.082 111.057 cv
260.205 137.135 li
260.213 139.881 262.156 140.989 264.546 139.609 cv
267.239 138.054 li
267.265 147.21 li
275.213 133.45 li
308.02 114.509 li
310.411 113.129 312.341 109.785 312.333 107.039 cv
312.21 80.961 li
312.202 78.2143 310.259 77.107 307.869 78.4871 cv
264.395 103.587 li
cp
.0779431 .0682383 .132265 0 cmyk
f
264.395 103.587 mo
261.827 102.094 li
259.436 103.475 257.506 106.818 257.514 109.565 cv
260.082 111.057 li
260.074 108.31 262.005 104.967 264.395 103.587 cv
cp
.0153201 .0126345 .0151369 0 cmyk
f
272.436 126.521 mo
272.443 128.994 li
305.419 109.955 li
305.412 107.482 li
272.436 126.521 li
cp
.333593 .281956 .382788 .00299077 cmyk
f
267.161 123.488 mo
267.168 125.968 li
305.402 103.893 li
305.395 101.414 li
267.161 123.488 li
cp
f
267.144 117.427 mo
267.151 119.9 li
305.385 97.8253 li
305.378 95.3526 li
267.144 117.427 li
cp
f
267.127 111.359 mo
267.134 113.838 li
305.368 91.7639 li
305.361 89.2845 li
267.127 111.359 li
cp
f
108.231 265.236 mo
110.799 263.744 li
110.773 272.9 li
108.205 274.392 li
108.231 265.236 li
cp
.11313 .310857 .72784 0 cmyk
f
64.5217 205.368 mo
67.0898 203.875 li
67.8765 203.418 68.9661 203.483 70.1689 204.177 cv
67.6008 205.67 li
66.398 204.975 65.3084 204.91 64.5217 205.368 cv
cp
0 .143648 .391485 0 cmyk
f
116.571 265.601 mo
114.003 267.093 li
114.779 266.642 115.261 265.682 115.265 264.317 cv
117.833 262.825 li
117.829 264.189 117.348 265.149 116.571 265.601 cv
cp
.11313 .310857 .72784 0 cmyk
f
115.388 238.24 mo
117.956 236.747 li
117.833 262.825 li
115.265 264.317 li
115.388 238.24 li
cp
f
67.6008 205.67 mo
70.1689 204.177 li
113.643 229.277 li
111.075 230.769 li
67.6008 205.67 li
cp
0 .143648 .391485 0 cmyk
f
111.075 230.769 mo
113.465 232.149 115.396 235.493 115.388 238.24 cv
115.265 264.317 li
115.257 267.064 113.314 268.171 110.924 266.791 cv
108.231 265.236 li
108.205 274.392 li
100.257 260.633 li
67.4496 241.691 li
65.0593 240.311 63.1289 236.968 63.1367 234.221 cv
63.2597 208.143 li
63.2676 205.397 65.2104 204.29 67.6009 205.67 cv
111.075 230.769 li
0 .219608 .596918 0 cmyk
f
111.075 230.769 mo
113.643 229.277 li
116.033 230.657 117.964 234.001 117.956 236.747 cv
115.388 238.24 li
115.396 235.493 113.465 232.149 111.075 230.769 cv
cp
0 .143648 .391485 0 cmyk
f
103.027 256.176 mo
70.0505 237.137 li
70.0576 234.665 li
103.034 253.704 li
103.027 256.176 li
.304234 .441169 .812589 .0740368 cmyk
f
108.302 253.15 mo
70.0679 231.076 li
70.0748 228.597 li
108.309 250.671 li
108.302 253.15 li
f
108.319 247.082 mo
70.0851 225.008 li
70.092 222.535 li
108.326 244.609 li
108.319 247.082 li
f
108.336 241.021 mo
70.1021 218.946 li
70.1092 216.467 li
108.343 238.541 li
108.336 241.021 li
f
388.989 111.696 mo
391.354 110.322 li
391.33 118.754 li
388.965 120.128 li
388.989 111.696 li
cp
.78143 .108064 .448432 .000885023 cmyk
f
348.735 56.5601 mo
351.1 55.1857 li
351.825 54.7647 352.828 54.8242 353.936 55.4637 cv
351.571 56.8382 li
350.463 56.1986 349.46 56.1391 348.735 56.5601 cv
cp
.471626 0 .252323 0 cmyk
f
396.67 112.032 mo
394.305 113.406 li
395.02 112.99 395.463 112.106 395.467 110.85 cv
397.832 109.475 li
397.828 110.732 397.385 111.616 396.67 112.032 cv
cp
.78143 .108064 .448432 .000885023 cmyk
f
395.58 86.8336 mo
397.945 85.4591 li
397.832 109.475 li
395.467 110.85 li
395.58 86.8336 li
cp
f
351.571 56.8382 mo
353.936 55.4637 li
393.973 78.5794 li
391.608 79.9538 li
351.571 56.8382 li
cp
.471626 0 .252323 0 cmyk
f
391.608 79.9538 mo
393.809 81.2248 395.587 84.3041 395.58 86.8336 cv
395.467 110.85 li
395.46 113.379 393.67 114.399 391.469 113.128 cv
388.989 111.696 li
388.965 120.128 li
381.646 107.457 li
351.431 90.0125 li
349.23 88.7414 347.452 85.6622 347.459 83.1327 cv
347.573 59.1165 li
347.58 56.587 349.369 55.5672 351.571 56.8381 cv
391.608 79.9538 li
.67126 0 .361639 0 cmyk
f
391.608 79.9538 mo
393.973 78.5794 li
396.175 79.8503 397.952 82.9296 397.945 85.4591 cv
395.58 86.8336 li
395.587 84.304 393.81 81.2247 391.608 79.9538 cv
cp
.471626 0 .252323 0 cmyk
f
384.196 103.352 mo
353.827 85.8184 li
353.833 83.5411 li
384.203 101.075 li
384.196 103.352 li
.820615 .300664 .624689 .113558 cmyk
f
389.054 100.566 mo
353.843 80.2362 li
353.849 77.9528 li
389.061 98.2822 li
389.054 100.566 li
f
389.07 94.9771 mo
353.859 74.6478 li
353.865 72.3705 li
389.076 92.6998 li
389.07 94.9771 li
f
389.086 89.3947 mo
353.874 69.0654 li
353.881 66.7821 li
389.092 87.1114 li
389.086 89.3947 li
f
403.403 254.979 mo
399.018 257.527 li
400.152 256.868 400.855 255.467 400.86 253.476 cv
405.245 250.928 li
405.239 252.919 404.537 254.32 403.403 254.979 cv
cp
.52285 .426642 .408667 .062562 cmyk
f
343.068 102.817 mo
347.453 100.269 li
348.601 99.6015 350.192 99.6954 351.948 100.709 cv
347.564 103.258 li
345.807 102.243 344.216 102.15 343.068 102.817 cv
cp
.264561 .199496 .196445 0 cmyk
f
401.178 141.473 mo
405.563 138.925 li
405.245 250.928 li
400.86 253.476 li
401.178 141.473 li
cp
.361334 .281498 .27158 0 cmyk
f
347.564 103.258 mo
351.948 100.709 li
399.268 128.029 li
394.883 130.577 li
347.564 103.258 li
cp
.264561 .199496 .196445 0 cmyk
f
394.883 130.577 mo
398.372 132.592 401.189 137.472 401.178 141.473 cv
400.86 253.476 li
400.849 257.484 398.013 259.101 394.524 257.086 cv
347.205 229.767 li
343.716 227.752 340.899 222.872 340.91 218.863 cv
341.228 106.861 li
341.239 102.859 344.075 101.243 347.564 103.258 cv
394.883 130.577 li
cp
.676844 .618402 .580743 .45658 cmyk
f
394.883 130.577 mo
399.268 128.029 li
402.756 130.043 405.574 134.924 405.563 138.925 cv
401.178 141.473 li
401.189 137.472 398.372 132.592 394.883 130.577 cv
cp
.264561 .199496 .196445 0 cmyk
f
363.661 206.931 mo
363.607 226.093 li
346.938 216.469 li
346.992 197.307 li
363.661 206.931 li
cp
.361334 .281498 .27158 0 cmyk
f
363.728 183.266 mo
363.674 202.42 li
347.005 192.797 li
347.059 173.643 li
363.728 183.266 li
cp
f
394.275 237.43 mo
394.272 238.7 li
367.143 223.037 li
367.147 221.767 li
394.275 237.43 li
cp
f
384.334 235.553 mo
384.331 236.816 li
367.132 226.886 li
367.136 225.624 li
384.334 235.553 li
cp
f
374.263 214.286 mo
374.259 215.557 li
367.176 211.467 li
367.18 210.197 li
374.263 214.286 li
cp
f
394.286 233.573 mo
394.282 234.843 li
367.154 219.181 li
367.158 217.91 li
394.286 233.573 li
cp
f
394.297 229.716 mo
394.293 230.987 li
367.165 215.324 li
367.168 214.054 li
394.297 229.716 li
cp
f
384.401 211.888 mo
384.398 213.151 li
367.199 203.221 li
367.203 201.959 li
384.401 211.888 li
cp
f
394.342 213.765 mo
394.339 215.027 li
367.21 199.365 li
367.214 198.102 li
394.342 213.765 li
cp
f
394.353 209.908 mo
394.35 211.171 li
367.221 195.508 li
367.225 194.245 li
394.353 209.908 li
cp
f
394.364 206.051 mo
394.361 207.322 li
367.232 191.659 li
367.236 190.389 li
394.364 206.051 li
cp
f
374.33 190.622 mo
374.326 191.892 li
367.243 187.802 li
367.247 186.532 li
374.33 190.622 li
cp
f
371.07 171.169 mo
378.669 175.557 384.852 172.041 384.877 163.308 cv
384.902 154.576 378.759 143.935 371.159 139.548 cv
363.56 135.16 357.376 138.684 357.352 147.416 cv
357.327 156.149 363.47 166.782 371.07 171.169 cv
341.214 111.569 mo
401.165 146.181 li
401.015 198.866 li
341.065 164.254 li
341.214 111.569 li
cp
.676844 .618402 .580743 .45658 cmyk
f
398.013 139.988 mo
399.76 140.997 401.172 143.443 401.167 145.451 cv
401.165 146.181 li
341.214 111.569 li
341.216 110.839 li
341.222 108.831 342.643 108.021 344.391 109.03 cv
398.013 139.988 li
cp
.264561 .199496 .196445 0 cmyk
f
394.883 130.577 mo
398.372 132.592 401.189 137.472 401.178 141.473 cv
401.167 145.451 li
401.172 143.443 399.76 140.997 398.013 139.988 cv
344.391 109.03 li
342.643 108.021 341.222 108.831 341.216 110.839 cv
340.921 214.885 li
340.916 216.893 342.328 219.339 344.076 220.348 cv
397.697 251.306 li
399.445 252.315 400.866 251.506 400.872 249.497 cv
400.86 253.476 li
400.849 257.484 398.013 259.101 394.524 257.086 cv
347.205 229.767 li
343.716 227.752 340.899 222.872 340.91 218.863 cv
341.228 106.861 li
341.239 102.859 344.075 101.243 347.564 103.258 cv
394.883 130.577 li
cp
.952148 .735225 .490547 .48014 cmyk
f
367.246 186.532 mo
367.243 187.802 li
374.326 191.892 li
374.33 190.622 li
367.246 186.532 li
367.179 210.197 mo
367.176 211.467 li
374.259 215.557 li
374.263 214.286 li
367.179 210.197 li
367.203 201.959 mo
367.199 203.221 li
384.398 213.151 li
384.401 211.888 li
367.203 201.959 li
384.331 236.816 mo
384.334 235.553 li
367.136 225.623 li
367.132 226.886 li
384.331 236.816 li
394.339 215.027 mo
394.342 213.765 li
367.214 198.102 li
367.21 199.365 li
394.339 215.027 li
394.35 211.171 mo
394.353 209.908 li
367.225 194.245 li
367.221 195.508 li
394.35 211.171 li
394.293 230.986 mo
394.297 229.716 li
367.168 214.053 li
367.165 215.324 li
394.293 230.986 li
394.282 234.843 mo
394.286 233.573 li
367.158 217.91 li
367.154 219.181 li
394.282 234.843 li
394.361 207.322 mo
394.364 206.051 li
367.236 190.389 li
367.232 191.659 li
394.361 207.322 li
394.272 238.7 mo
394.275 237.429 li
367.147 221.767 li
367.143 223.037 li
394.272 238.7 li
363.674 202.42 mo
363.728 183.266 li
347.059 173.643 li
347.005 192.797 li
363.674 202.42 li
363.607 226.093 mo
363.661 206.931 li
346.992 197.307 li
346.938 216.469 li
363.607 226.093 li
341.065 164.254 mo
401.015 198.866 li
400.872 249.497 li
400.866 251.505 399.445 252.315 397.697 251.306 cv
344.076 220.348 li
342.328 219.339 340.916 216.893 340.921 214.885 cv
341.065 164.254 li
cp
.0847486 .0569162 .0569467 0 cmyk
f
363.437 162.071 mo
374.393 161.133 li
363.478 147.559 li
363.437 162.071 li
367.752 138.974 mo
376.543 144.05 383.65 156.359 383.621 166.461 cv
383.593 176.564 376.44 180.631 367.648 175.555 cv
358.856 170.479 351.749 158.179 351.778 148.077 cv
351.807 137.974 358.96 133.898 367.752 138.974 cv
cp
0 .85156 .162356 0 cmyk
f
363.478 147.559 mo
366.859 145.594 li
366.818 160.105 li
363.437 162.071 li
363.478 147.559 li
cp
f
363.437 162.071 mo
366.818 160.105 li
377.775 159.168 li
374.393 161.133 li
363.437 162.071 li
cp
f
382.362 174.701 mo
378.98 176.666 li
381.836 175.006 383.607 171.478 383.621 166.461 cv
383.65 156.359 376.543 144.05 367.752 138.974 cv
371.133 137.009 li
379.925 142.084 387.032 154.394 387.003 164.496 cv
386.989 169.513 385.218 173.041 382.362 174.701 cv
cp
.105837 .875792 .254551 0 cmyk
f
361.787 150.096 mo
365.168 148.13 li
376.084 161.704 li
372.702 163.67 li
361.787 150.096 li
cp
.0961929 .278355 .648371 0 cmyk
f
361.787 150.096 mo
372.702 163.67 li
361.746 164.607 li
361.787 150.096 li
cp
0 .219608 .596918 0 cmyk
f
356.423 137.865 mo
359.805 135.9 li
362.7 134.218 366.709 134.454 371.133 137.009 cv
367.752 138.974 li
363.327 136.419 359.318 136.183 356.423 137.865 cv
cp
0 .679927 .164431 0 cmyk
f
140.786 428.48 mo
136.253 431.114 li
137.425 430.433 138.151 428.985 138.157 426.926 cv
142.69 424.291 li
142.684 426.35 141.958 427.799 140.786 428.48 cv
cp
.39176 .292271 .295415 .00146487 cmyk
f
78.4142 271.161 mo
82.9475 268.526 li
84.1336 267.837 85.7754 267.934 87.5862 268.979 cv
83.053 271.614 li
81.2421 270.568 79.6003 270.471 78.4142 271.161 cv
cp
.108461 .0746166 .0825208 0 cmyk
f
138.485 311.133 mo
143.018 308.498 li
142.69 424.291 li
138.157 426.926 li
138.485 311.133 li
cp
.264561 .199496 .196445 0 cmyk
f
83.053 271.614 mo
87.5862 268.979 li
136.51 297.225 li
131.977 299.86 li
83.053 271.614 li
cp
.108461 .0746166 .0825208 0 cmyk
f
131.977 299.86 mo
135.584 301.942 138.497 306.988 138.485 311.133 cv
138.157 426.926 li
138.145 431.07 135.213 432.741 131.606 430.659 cv
82.6821 402.413 li
79.082 400.334 76.1689 395.288 76.1807 391.144 cv
76.5089 275.351 li
76.5206 271.206 79.4527 269.535 83.053 271.614 cv
131.977 299.86 li
cp
.169497 .120851 .124178 0 cmyk
f
131.977 299.86 mo
136.51 297.225 li
140.117 299.308 143.03 304.354 143.018 308.498 cv
138.485 311.133 li
138.497 306.988 135.584 301.942 131.977 299.86 cv
cp
.108461 .0746166 .0825208 0 cmyk
f
110.505 328.86 mo
113.63 324.473 li
110.54 316.497 li
104.332 312.913 li
101.207 317.3 li
104.297 325.276 li
110.505 328.86 li
111.421 315.257 mo
115.382 325.484 li
111.376 331.112 li
103.409 326.512 li
99.4482 316.285 li
103.454 310.657 li
111.421 315.257 li
cp
.264561 .199496 .196445 0 cmyk
f
110.505 328.86 mo
104.297 325.276 li
101.207 317.3 li
104.332 312.913 li
110.54 316.497 li
113.63 324.473 li
110.505 328.86 li
cp
.169497 .120851 .124178 0 cmyk
f
120.232 392.266 mo
120.226 394.209 li
94.2379 379.204 li
94.2435 377.262 li
120.232 392.266 li
cp
.264561 .199496 .196445 0 cmyk
f
115.256 394.317 mo
115.25 396.259 li
99.1863 386.985 li
99.1918 385.042 li
115.256 394.317 li
cp
f
85.3954 282.081 mo
85.5938 282.195 85.7438 282.463 85.7432 282.683 cv
85.7427 282.903 85.5916 282.997 85.393 282.883 cv
85.2013 282.772 85.0446 282.5 85.0452 282.28 cv
85.0457 282.06 85.2037 281.97 85.3954 282.081 cv
cp
f
85.7982 285.054 mo
86.6262 285.533 87.3061 285.153 87.3088 284.194 cv
87.3116 283.242 86.636 282.072 85.808 281.594 cv
84.973 281.112 84.3 281.503 84.2973 282.455 cv
84.2946 283.414 84.9633 284.572 85.7982 285.054 cv
85.8112 280.43 mo
87.2007 281.232 88.3262 283.182 88.3218 284.778 cv
88.3172 286.383 87.1842 287.021 85.7949 286.218 cv
84.3986 285.412 83.2797 283.474 83.2843 281.87 cv
83.2888 280.273 84.4151 279.624 85.8112 280.43 cv
cp
.638453 .555322 .526604 .275334 cmyk
f
85.393 282.883 mo
85.5916 282.997 85.7427 282.903 85.7432 282.683 cv
85.7438 282.463 85.5938 282.195 85.3954 282.08 cv
85.2036 281.97 85.0457 282.06 85.045 282.28 cv
85.0444 282.5 85.2013 282.772 85.393 282.883 cv
85.808 281.594 mo
86.636 282.072 87.3116 283.242 87.3088 284.194 cv
87.3061 285.153 86.6262 285.533 85.7982 285.054 cv
84.9633 284.572 84.2946 283.414 84.2973 282.455 cv
84.3 281.503 84.973 281.112 85.808 281.594 cv
cp
.676844 .618402 .580743 .45658 cmyk
f
85.7949 286.218 mo
87.1842 287.021 88.3172 286.383 88.3218 284.778 cv
88.3262 283.182 87.2007 281.232 85.8112 280.43 cv
84.4151 279.624 83.2888 280.273 83.2843 281.87 cv
83.2797 283.474 84.3986 285.412 85.7949 286.218 cv
85.8135 279.667 mo
87.5724 280.683 88.9914 283.14 88.9858 285.162 cv
88.98 287.183 87.5517 288.005 85.7927 286.989 cv
84.0336 285.974 82.6079 283.504 82.6135 281.483 cv
82.6193 279.461 84.0544 278.652 85.8135 279.667 cv
cp
.451301 .360998 .348333 .0130312 cmyk
f
92.6937 285.491 mo
93.5629 285.993 94.2656 287.21 94.2628 288.208 cv
94.26 289.207 93.5527 289.61 92.6835 289.109 cv
91.8142 288.607 91.1115 287.39 91.1144 286.391 cv
91.1172 285.392 91.8244 284.989 92.6937 285.491 cv
cp
.0402228 .022919 .0259098 0 cmyk
f
92.6816 289.761 mo
93.8589 290.441 94.8202 289.893 94.824 288.533 cv
94.8279 287.18 93.8728 285.525 92.6956 284.846 cv
91.5115 284.162 90.5501 284.71 90.5463 286.063 cv
90.5424 287.423 91.4976 289.078 92.6816 289.761 cv
115.25 396.259 mo
115.256 394.317 li
99.1918 385.042 li
99.1863 386.985 li
115.25 396.259 li
85.7927 286.989 mo
87.5517 288.005 88.98 287.183 88.9858 285.162 cv
88.9914 283.14 87.5724 280.683 85.8135 279.667 cv
84.0544 278.652 82.6193 279.461 82.6135 281.483 cv
82.6079 283.504 84.0336 285.974 85.7927 286.989 cv
120.226 394.209 mo
120.232 392.266 li
94.2434 377.262 li
94.2379 379.204 li
120.226 394.209 li
103.454 310.657 mo
99.4482 316.285 li
103.409 326.512 li
111.376 331.112 li
115.382 325.484 li
111.421 315.257 li
103.454 310.657 li
131.977 299.86 mo
135.584 301.942 138.497 306.988 138.485 311.133 cv
138.157 426.926 li
138.145 431.07 135.213 432.741 131.606 430.659 cv
82.6821 402.413 li
79.082 400.334 76.1689 395.288 76.1807 391.144 cv
76.5089 275.351 li
76.5206 271.206 79.4527 269.535 83.053 271.614 cv
131.977 299.86 li
cp
.169497 .120851 .124178 0 cmyk
f
92.6834 289.108 mo
93.5527 289.61 94.26 289.207 94.2628 288.208 cv
94.2656 287.21 93.5629 285.993 92.6937 285.491 cv
91.8244 284.989 91.1171 285.392 91.1144 286.391 cv
91.1115 287.389 91.8142 288.607 92.6834 289.108 cv
92.6956 284.846 mo
93.8728 285.525 94.8279 287.18 94.824 288.533 cv
94.8202 289.893 93.8589 290.441 92.6816 289.761 cv
91.4976 289.078 90.5424 287.423 90.5463 286.063 cv
90.5501 284.71 91.5115 284.162 92.6956 284.846 cv
cp
.451301 .360998 .348333 .0130312 cmyk
f
143.075 330.749 mo
141.846 330.035 li
141.608 329.897 141.279 329.917 140.919 330.124 cv
142.148 330.839 li
142.508 330.631 142.837 330.611 143.075 330.749 cv
cp
.169497 .120851 .124178 0 cmyk
f
139.988 333.211 mo
141.217 333.926 li
140.984 333.79 140.84 333.504 140.839 333.094 cv
140.837 332.262 141.425 331.256 142.148 330.839 cv
140.919 330.124 li
140.196 330.542 139.608 331.548 139.61 332.379 cv
139.611 332.789 139.756 333.076 139.988 333.211 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
142.148 330.839 mo
141.425 331.256 140.837 332.262 140.839 333.094 cv
140.841 333.925 141.433 334.25 142.157 333.832 cv
142.869 333.421 143.457 332.415 143.455 331.583 cv
143.453 330.752 142.861 330.427 142.148 330.839 cv
cp
.169497 .120851 .124178 0 cmyk
f
143.091 337.404 mo
141.863 336.69 li
141.625 336.552 141.297 336.569 140.938 336.776 cv
142.167 337.491 li
142.526 337.283 142.854 337.266 143.091 337.404 cv
cp
f
140.013 339.873 mo
141.242 340.587 li
141.006 340.45 140.859 340.159 140.858 339.746 cv
140.855 338.927 141.444 337.908 142.167 337.491 cv
140.938 336.776 li
140.215 337.194 139.627 338.213 139.629 339.031 cv
139.63 339.445 139.777 339.736 140.013 339.873 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
142.167 337.491 mo
141.444 337.908 140.855 338.927 140.858 339.746 cv
140.86 340.577 141.452 340.914 142.176 340.497 cv
142.888 340.085 143.476 339.067 143.474 338.235 cv
143.472 337.417 142.88 337.079 142.167 337.491 cv
cp
.169497 .120851 .124178 0 cmyk
f
140.347 326.327 mo
141.576 327.042 li
141.434 326.959 141.345 326.784 141.344 326.536 cv
140.115 325.822 li
140.116 326.07 140.205 326.245 140.347 326.327 cv
cp
f
141.328 320.882 mo
140.099 320.168 li
140.115 325.822 li
141.344 326.536 li
141.328 320.882 li
cp
.0847486 .0569162 .0569467 0 cmyk
f
142.667 319.464 mo
141.438 318.75 li
141.297 318.668 141.103 318.679 140.887 318.803 cv
142.116 319.517 li
142.332 319.393 142.526 319.382 142.667 319.464 cv
cp
.169497 .120851 .124178 0 cmyk
f
142.116 319.517 mo
140.887 318.803 li
140.453 319.054 140.098 319.669 140.099 320.168 cv
141.328 320.882 li
141.327 320.383 141.682 319.768 142.116 319.517 cv
cp
.0847486 .0569162 .0569467 0 cmyk
f
142.116 319.517 mo
141.682 319.768 141.327 320.383 141.328 320.882 cv
141.344 326.536 li
141.346 327.035 141.703 327.239 142.137 326.988 cv
142.572 326.737 142.916 326.129 142.914 325.63 cv
142.898 319.976 li
142.897 319.477 142.55 319.267 142.116 319.517 cv
cp
.169497 .120851 .124178 0 cmyk
f
177.12 478.897 mo
177.12 479.336 177.188 479.71 177.325 480.019 cv
177.461 480.328 177.648 480.559 177.886 480.716 cv
178.123 480.872 178.382 480.951 178.663 480.951 cv
178.948 480.951 179.208 480.877 179.444 480.728 cv
179.679 480.58 179.867 480.352 180.008 480.046 cv
180.148 479.739 180.218 479.355 180.218 478.897 cv
180.218 478.465 180.148 478.094 180.008 477.782 cv
179.867 477.472 179.678 477.235 179.438 477.071 cv
179.198 476.907 178.936 476.825 178.652 476.825 cv
178.355 476.825 178.09 476.91 177.856 477.077 cv
177.622 477.245 177.442 477.486 177.313 477.801 cv
177.184 478.116 177.12 478.48 177.12 478.897 cv
cp
180.308 481.277 mo
180.308 481.116 li
180.09 481.365 179.875 481.569 179.664 481.724 cv
179.452 481.881 179.222 482 178.975 482.08 cv
178.728 482.163 178.458 482.203 178.165 482.203 cv
177.777 482.203 177.417 482.121 177.087 481.957 cv
176.757 481.792 176.471 481.558 176.23 481.253 cv
175.988 480.949 175.805 480.591 175.68 480.178 cv
175.556 479.767 175.493 479.322 175.493 478.843 cv
175.493 477.83 175.741 477.04 176.236 476.474 cv
176.73 475.909 177.381 475.625 178.189 475.625 cv
178.655 475.625 179.049 475.706 179.37 475.866 cv
179.69 476.026 180.003 476.273 180.308 476.604 cv
180.308 474.213 li
180.308 473.88 180.374 473.63 180.507 473.459 cv
180.639 473.289 180.828 473.203 181.073 473.203 cv
181.319 473.203 181.507 473.282 181.64 473.438 cv
181.773 473.595 181.839 473.825 181.839 474.13 cv
181.839 481.277 li
181.839 481.586 181.768 481.817 181.625 481.972 cv
181.483 482.126 181.299 482.203 181.073 482.203 cv
180.852 482.203 180.669 482.123 180.524 481.963 cv
180.38 481.802 180.308 481.574 180.308 481.277 cv
cp
.28571 .162905 .142123 0 cmyk
f
184.284 478.387 mo
187.223 478.387 li
187.184 477.832 187.033 477.417 186.774 477.143 cv
186.515 476.867 186.174 476.73 185.751 476.73 cv
185.347 476.73 185.015 476.869 184.756 477.148 cv
184.497 477.427 184.34 477.84 184.284 478.387 cv
cp
187.454 479.307 mo
184.284 479.307 li
184.288 479.674 184.362 479.999 184.507 480.28 cv
184.651 480.561 184.843 480.773 185.083 480.915 cv
185.322 481.057 185.586 481.128 185.875 481.128 cv
186.069 481.128 186.246 481.106 186.406 481.061 cv
186.567 481.015 186.722 480.944 186.873 480.846 cv
187.023 480.75 187.161 480.646 187.288 480.535 cv
187.414 480.424 187.578 480.273 187.781 480.083 cv
187.864 480.013 187.983 479.976 188.137 479.976 cv
188.303 479.976 188.438 480.022 188.54 480.114 cv
188.643 480.205 188.695 480.332 188.695 480.5 cv
188.695 480.646 188.637 480.816 188.523 481.012 cv
188.407 481.209 188.234 481.397 188.003 481.576 cv
187.771 481.757 187.481 481.906 187.13 482.024 cv
186.781 482.144 186.378 482.203 185.922 482.203 cv
184.882 482.203 184.072 481.906 183.495 481.313 cv
182.917 480.719 182.628 479.914 182.628 478.897 cv
182.628 478.417 182.699 477.973 182.842 477.564 cv
182.984 477.154 183.192 476.803 183.465 476.51 cv
183.738 476.217 184.074 475.993 184.474 475.837 cv
184.874 475.68 185.317 475.602 185.804 475.602 cv
186.437 475.602 186.98 475.735 187.433 476.003 cv
187.887 476.27 188.226 476.615 188.451 477.038 cv
188.676 477.461 188.79 477.893 188.79 478.332 cv
188.79 478.741 188.673 479.004 188.44 479.125 cv
188.207 479.246 187.878 479.307 187.454 479.307 cv
cp
f
194.838 480.083 mo
194.838 480.53 194.73 480.913 194.512 481.232 cv
194.294 481.551 193.973 481.792 193.547 481.957 cv
193.122 482.121 192.604 482.203 191.995 482.203 cv
191.413 482.203 190.914 482.113 190.499 481.935 cv
190.083 481.758 189.776 481.535 189.579 481.269 cv
189.381 481 189.282 480.733 189.282 480.463 cv
189.282 480.285 189.345 480.133 189.472 480.006 cv
189.599 479.881 189.759 479.817 189.953 479.817 cv
190.123 479.817 190.253 479.859 190.344 479.942 cv
190.436 480.025 190.523 480.142 190.605 480.291 cv
190.772 480.581 190.971 480.795 191.203 480.939 cv
191.434 481.081 191.749 481.153 192.15 481.153 cv
192.474 481.153 192.74 481.079 192.948 480.935 cv
193.155 480.79 193.259 480.625 193.259 480.44 cv
193.259 480.154 193.152 479.948 192.936 479.817 cv
192.72 479.687 192.365 479.561 191.87 479.443 cv
191.312 479.305 190.858 479.158 190.508 479.005 cv
190.157 478.854 189.877 478.653 189.668 478.404 cv
189.458 478.155 189.353 477.847 189.353 477.483 cv
189.353 477.16 189.45 476.852 189.644 476.563 cv
189.838 476.275 190.124 476.044 190.502 475.872 cv
190.88 475.7 191.336 475.613 191.87 475.613 cv
192.29 475.613 192.667 475.657 193.001 475.745 cv
193.335 475.83 193.615 475.949 193.838 476.095 cv
194.062 476.241 194.232 476.403 194.348 476.581 cv
194.465 476.759 194.523 476.933 194.523 477.104 cv
194.523 477.289 194.461 477.442 194.337 477.561 cv
194.212 477.678 194.035 477.74 193.805 477.74 cv
193.639 477.74 193.497 477.692 193.381 477.596 cv
193.264 477.502 193.131 477.359 192.98 477.17 cv
192.858 477.011 192.714 476.884 192.547 476.789 cv
192.381 476.693 192.155 476.647 191.87 476.647 cv
191.577 476.647 191.334 476.708 191.14 476.834 cv
190.946 476.958 190.849 477.113 190.849 477.299 cv
190.849 477.47 190.92 477.609 191.062 477.718 cv
191.205 477.828 191.397 477.918 191.639 477.989 cv
191.88 478.059 192.212 478.146 192.636 478.249 cv
193.138 478.372 193.549 478.518 193.868 478.688 cv
194.186 478.858 194.427 479.059 194.592 479.291 cv
194.756 479.523 194.838 479.787 194.838 480.083 cv
cp
f
197.295 476.534 mo
197.295 481.217 li
197.295 481.542 197.218 481.787 197.064 481.953 cv
196.909 482.12 196.714 482.203 196.476 482.203 cv
196.238 482.203 196.045 482.118 195.897 481.947 cv
195.748 481.778 195.675 481.534 195.675 481.217 cv
195.675 476.581 li
195.675 476.261 195.748 476.02 195.897 475.857 cv
196.045 475.695 196.238 475.613 196.476 475.613 cv
196.714 475.613 196.909 475.695 197.064 475.857 cv
197.218 476.02 197.295 476.245 197.295 476.534 cv
cp
196.494 474.86 mo
196.268 474.86 196.075 474.79 195.915 474.652 cv
195.755 474.515 195.675 474.318 195.675 474.064 cv
195.675 473.835 195.757 473.647 195.921 473.498 cv
196.085 473.349 196.276 473.274 196.494 473.274 cv
196.704 473.274 196.889 473.341 197.052 473.477 cv
197.214 473.611 197.295 473.807 197.295 474.064 cv
197.295 474.314 197.216 474.508 197.057 474.649 cv
196.899 474.789 196.711 474.86 196.494 474.86 cv
cp
f
199.699 478.855 mo
199.699 479.512 199.842 480.009 200.129 480.345 cv
200.416 480.682 200.787 480.85 201.242 480.85 cv
201.511 480.85 201.765 480.777 202.005 480.633 cv
202.244 480.489 202.439 480.27 202.59 479.98 cv
202.74 479.689 202.815 479.336 202.815 478.92 cv
202.815 478.26 202.67 477.745 202.379 477.377 cv
202.088 477.01 201.705 476.825 201.23 476.825 cv
200.767 476.825 200.396 477.001 200.117 477.354 cv
199.838 477.705 199.699 478.206 199.699 478.855 cv
cp
204.395 476.801 mo
204.395 481.508 li
204.395 482.046 204.337 482.51 204.222 482.898 cv
204.108 483.285 203.923 483.606 203.67 483.859 cv
203.417 484.112 203.085 484.301 202.676 484.423 cv
202.266 484.546 201.757 484.607 201.147 484.607 cv
200.589 484.607 200.09 484.529 199.651 484.373 cv
199.212 484.215 198.874 484.014 198.636 483.767 cv
198.399 483.52 198.28 483.266 198.28 483.005 cv
198.28 482.807 198.347 482.644 198.482 482.521 cv
198.616 482.395 198.779 482.333 198.968 482.333 cv
199.206 482.333 199.414 482.438 199.592 482.648 cv
199.678 482.754 199.768 482.863 199.862 482.971 cv
199.955 483.081 200.058 483.174 200.17 483.251 cv
200.283 483.328 200.419 483.385 200.577 483.423 cv
200.735 483.46 200.918 483.479 201.123 483.479 cv
201.543 483.479 201.868 483.421 202.1 483.303 cv
202.332 483.188 202.494 483.024 202.587 482.814 cv
202.68 482.605 202.734 482.381 202.75 482.14 cv
202.766 481.901 202.778 481.516 202.785 480.985 cv
202.536 481.335 202.249 481.599 201.922 481.781 cv
201.595 481.963 201.206 482.055 200.755 482.055 cv
200.213 482.055 199.739 481.916 199.333 481.639 cv
198.928 481.361 198.616 480.974 198.399 480.475 cv
198.181 479.976 198.073 479.401 198.073 478.748 cv
198.073 478.262 198.139 477.821 198.271 477.431 cv
198.404 477.038 198.593 476.708 198.838 476.438 cv
199.083 476.17 199.366 475.967 199.687 475.83 cv
200.007 475.694 200.359 475.625 200.744 475.625 cv
201.202 475.625 201.6 475.714 201.937 475.889 cv
202.273 476.066 202.586 476.342 202.875 476.718 cv
202.875 476.498 li
202.875 476.217 202.944 476 203.082 475.845 cv
203.221 475.691 203.399 475.613 203.617 475.613 cv
203.929 475.613 204.137 475.716 204.24 475.92 cv
204.343 476.123 204.395 476.418 204.395 476.801 cv
cp
f
206.97 476.51 mo
206.97 476.706 li
207.254 476.33 207.566 476.054 207.905 475.878 cv
208.243 475.702 208.632 475.613 209.071 475.613 cv
209.499 475.613 209.88 475.707 210.217 475.893 cv
210.553 476.079 210.805 476.342 210.971 476.681 cv
211.078 476.88 211.147 477.094 211.178 477.323 cv
211.21 477.553 211.227 477.846 211.227 478.202 cv
211.227 481.217 li
211.227 481.542 211.152 481.787 211.004 481.953 cv
210.855 482.12 210.662 482.203 210.425 482.203 cv
210.183 482.203 209.988 482.118 209.837 481.947 cv
209.686 481.778 209.612 481.534 209.612 481.217 cv
209.612 478.516 li
209.612 477.983 209.537 477.574 209.389 477.29 cv
209.24 477.008 208.945 476.866 208.501 476.866 cv
208.213 476.866 207.949 476.952 207.712 477.124 cv
207.474 477.297 207.3 477.533 207.189 477.834 cv
207.11 478.075 207.071 478.526 207.071 479.187 cv
207.071 481.217 li
207.071 481.546 206.994 481.792 206.842 481.957 cv
206.69 482.121 206.493 482.203 206.252 482.203 cv
206.018 482.203 205.827 482.118 205.676 481.947 cv
205.526 481.778 205.45 481.534 205.45 481.217 cv
205.45 476.534 li
205.45 476.225 205.517 475.994 205.652 475.841 cv
205.787 475.69 205.971 475.613 206.204 475.613 cv
206.347 475.613 206.475 475.647 206.59 475.714 cv
206.705 475.783 206.797 475.883 206.866 476.017 cv
206.936 476.151 206.97 476.316 206.97 476.51 cv
cp
f
213.659 478.387 mo
216.598 478.387 li
216.558 477.832 216.409 477.417 216.15 477.143 cv
215.89 476.867 215.549 476.73 215.126 476.73 cv
214.722 476.73 214.39 476.869 214.131 477.148 cv
213.872 477.427 213.715 477.84 213.659 478.387 cv
cp
216.829 479.307 mo
213.659 479.307 li
213.664 479.674 213.737 479.999 213.882 480.28 cv
214.027 480.561 214.218 480.773 214.458 480.915 cv
214.697 481.057 214.961 481.128 215.25 481.128 cv
215.444 481.128 215.621 481.106 215.782 481.061 cv
215.942 481.015 216.097 480.944 216.248 480.846 cv
216.398 480.75 216.536 480.646 216.664 480.535 cv
216.79 480.424 216.954 480.273 217.156 480.083 cv
217.239 480.013 217.358 479.976 217.512 479.976 cv
217.678 479.976 217.813 480.022 217.916 480.114 cv
218.019 480.205 218.07 480.332 218.07 480.5 cv
218.07 480.646 218.013 480.816 217.898 481.012 cv
217.783 481.209 217.61 481.397 217.378 481.576 cv
217.146 481.757 216.856 481.906 216.506 482.024 cv
216.156 482.144 215.753 482.203 215.298 482.203 cv
214.257 482.203 213.448 481.906 212.869 481.313 cv
212.292 480.719 212.003 479.914 212.003 478.897 cv
212.003 478.417 212.074 477.973 212.217 477.564 cv
212.359 477.154 212.567 476.803 212.84 476.51 cv
213.113 476.217 213.45 475.993 213.849 475.837 cv
214.249 475.68 214.693 475.602 215.179 475.602 cv
215.812 475.602 216.355 475.735 216.808 476.003 cv
217.262 476.27 217.601 476.615 217.827 477.038 cv
218.052 477.461 218.165 477.893 218.165 478.332 cv
218.165 478.741 218.049 479.004 217.815 479.125 cv
217.582 479.246 217.253 479.307 216.829 479.307 cv
cp
f
220.248 478.897 mo
220.248 479.336 220.316 479.71 220.452 480.019 cv
220.589 480.328 220.776 480.559 221.014 480.716 cv
221.251 480.872 221.51 480.951 221.791 480.951 cv
222.076 480.951 222.337 480.877 222.572 480.728 cv
222.807 480.58 222.995 480.352 223.135 480.046 cv
223.276 479.739 223.346 479.355 223.346 478.897 cv
223.346 478.465 223.276 478.094 223.135 477.782 cv
222.995 477.472 222.805 477.235 222.566 477.071 cv
222.326 476.907 222.064 476.825 221.779 476.825 cv
221.483 476.825 221.217 476.91 220.984 477.077 cv
220.751 477.245 220.569 477.486 220.44 477.801 cv
220.312 478.116 220.248 478.48 220.248 478.897 cv
cp
223.435 481.277 mo
223.435 481.116 li
223.218 481.365 223.003 481.569 222.791 481.724 cv
222.579 481.881 222.35 482 222.103 482.08 cv
221.856 482.163 221.586 482.203 221.293 482.203 cv
220.904 482.203 220.546 482.121 220.215 481.957 cv
219.885 481.792 219.599 481.558 219.357 481.253 cv
219.116 480.949 218.933 480.591 218.808 480.178 cv
218.684 479.767 218.621 479.322 218.621 478.843 cv
218.621 477.83 218.869 477.04 219.363 476.474 cv
219.858 475.909 220.509 475.625 221.316 475.625 cv
221.783 475.625 222.177 475.706 222.498 475.866 cv
222.818 476.026 223.131 476.273 223.435 476.604 cv
223.435 474.213 li
223.435 473.88 223.502 473.63 223.634 473.459 cv
223.767 473.289 223.956 473.203 224.202 473.203 cv
224.447 473.203 224.635 473.282 224.768 473.438 cv
224.901 473.595 224.967 473.825 224.967 474.13 cv
224.967 481.277 li
224.967 481.586 224.896 481.817 224.754 481.972 cv
224.611 482.126 224.427 482.203 224.202 482.203 cv
223.98 482.203 223.797 482.123 223.652 481.963 cv
223.508 481.802 223.435 481.574 223.435 481.277 cv
cp
f
230.136 478.944 mo
230.136 479.589 230.284 480.085 230.578 480.43 cv
230.873 480.777 231.26 480.951 231.739 480.951 cv
232.146 480.951 232.498 480.774 232.793 480.419 cv
233.087 480.065 233.235 479.557 233.235 478.897 cv
233.235 478.47 233.174 478.101 233.051 477.792 cv
232.928 477.483 232.754 477.245 232.529 477.077 cv
232.303 476.91 232.04 476.825 231.739 476.825 cv
231.431 476.825 231.155 476.91 230.914 477.077 cv
230.672 477.245 230.483 477.488 230.344 477.807 cv
230.206 478.125 230.136 478.505 230.136 478.944 cv
cp
230.059 474.13 mo
230.059 476.604 li
230.364 476.288 230.674 476.045 230.991 475.878 cv
231.307 475.71 231.7 475.625 232.167 475.625 cv
232.705 475.625 233.176 475.754 233.583 476.007 cv
233.988 476.264 234.302 476.634 234.526 477.118 cv
234.75 477.603 234.862 478.178 234.862 478.843 cv
234.862 479.334 234.799 479.783 234.675 480.193 cv
234.55 480.603 234.369 480.958 234.132 481.259 cv
233.894 481.559 233.606 481.792 233.268 481.957 cv
232.929 482.121 232.556 482.203 232.149 482.203 cv
231.899 482.203 231.665 482.173 231.445 482.113 cv
231.225 482.055 231.038 481.977 230.884 481.879 cv
230.73 481.783 230.599 481.682 230.49 481.58 cv
230.381 481.477 230.237 481.322 230.059 481.116 cv
230.059 481.277 li
230.059 481.581 229.986 481.812 229.839 481.969 cv
229.693 482.126 229.507 482.203 229.281 482.203 cv
229.052 482.203 228.869 482.126 228.732 481.969 cv
228.596 481.812 228.528 481.581 228.528 481.277 cv
228.528 474.201 li
228.528 473.872 228.594 473.623 228.726 473.456 cv
228.859 473.288 229.044 473.203 229.281 473.203 cv
229.531 473.203 229.723 473.284 229.857 473.444 cv
229.992 473.605 230.059 473.832 230.059 474.13 cv
cp
f
236.963 482.405 mo
237.111 482.043 li
235.116 477.021 li
234.994 476.733 234.932 476.521 234.932 476.391 cv
234.932 476.253 234.968 476.125 235.039 476.006 cv
235.111 475.887 235.208 475.791 235.333 475.721 cv
235.458 475.648 235.587 475.613 235.722 475.613 cv
235.955 475.613 236.131 475.688 236.25 475.837 cv
236.369 475.984 236.474 476.197 236.565 476.474 cv
237.936 480.463 li
239.236 476.753 li
239.339 476.453 239.432 476.217 239.515 476.047 cv
239.598 475.877 239.686 475.762 239.779 475.703 cv
239.872 475.644 240.004 475.613 240.174 475.613 cv
240.297 475.613 240.415 475.646 240.527 475.712 cv
240.64 475.777 240.727 475.865 240.788 475.976 cv
240.849 476.087 240.881 476.203 240.881 476.326 cv
240.864 476.401 240.839 476.508 240.803 476.647 cv
240.767 476.785 240.724 476.927 240.673 477.068 cv
238.56 482.6 li
238.377 483.088 238.199 483.468 238.025 483.745 cv
237.851 484.023 237.621 484.236 237.333 484.384 cv
237.046 484.533 236.66 484.607 236.173 484.607 cv
235.698 484.607 235.342 484.556 235.105 484.453 cv
234.867 484.35 234.749 484.162 234.749 483.888 cv
234.749 483.703 234.805 483.559 234.918 483.458 cv
235.03 483.357 235.198 483.306 235.419 483.306 cv
235.675 483.343 li
235.777 483.366 235.866 483.378 235.941 483.378 cv
236.127 483.378 236.274 483.351 236.381 483.295 cv
236.488 483.24 236.583 483.144 236.669 483.007 cv
236.754 482.871 236.852 482.67 236.963 482.405 cv
cp
f
260.439 475.754 mo
260.826 475.754 li
260.826 475.268 li
260.826 474.759 260.888 474.357 261.018 474.057 cv
261.145 473.758 261.365 473.54 261.672 473.404 cv
261.979 473.268 262.398 473.2 262.932 473.2 cv
263.882 473.2 264.353 473.429 264.353 473.896 cv
264.353 474.045 264.303 474.174 264.203 474.28 cv
264.106 474.386 263.988 474.44 263.854 474.44 cv
263.791 474.44 263.68 474.429 263.524 474.403 cv
263.376 474.383 263.242 474.368 263.135 474.368 cv
262.843 474.368 262.656 474.456 262.569 474.628 cv
262.49 474.8 262.447 475.046 262.447 475.368 cv
262.447 475.754 li
262.843 475.754 li
263.462 475.754 263.768 475.939 263.768 476.314 cv
263.768 476.575 263.689 476.745 263.523 476.817 cv
263.359 476.888 263.133 476.923 262.843 476.923 cv
262.447 476.923 li
262.447 481.217 li
262.447 481.537 262.372 481.78 262.217 481.947 cv
262.065 482.118 261.87 482.201 261.627 482.201 cv
261.398 482.201 261.208 482.118 261.053 481.947 cv
260.901 481.78 260.826 481.537 260.826 481.217 cv
260.826 476.923 li
260.379 476.923 li
260.137 476.923 259.953 476.87 259.822 476.759 cv
259.691 476.653 259.625 476.51 259.625 476.336 cv
259.625 475.946 259.896 475.754 260.439 475.754 cv
f
265.746 479.862 mo
265.746 481.217 li
265.746 481.545 265.663 481.792 265.511 481.955 cv
265.357 482.121 265.162 482.201 264.925 482.201 cv
264.687 482.201 264.496 482.12 264.347 481.951 cv
264.199 481.786 264.121 481.541 264.121 481.217 cv
264.121 476.703 li
264.121 475.974 264.383 475.611 264.909 475.611 cv
265.181 475.611 265.373 475.695 265.493 475.866 cv
265.611 476.037 265.677 476.287 265.691 476.62 cv
265.884 476.287 266.081 476.037 266.284 475.866 cv
266.492 475.695 266.76 475.611 267.102 475.611 cv
267.445 475.611 267.772 475.695 268.093 475.866 cv
268.415 476.037 268.575 476.264 268.575 476.543 cv
268.575 476.74 268.506 476.906 268.371 477.032 cv
268.233 477.162 268.087 477.227 267.93 477.227 cv
267.867 477.227 267.723 477.188 267.497 477.115 cv
267.269 477.044 267.066 477.006 266.896 477.006 cv
266.658 477.006 266.462 477.071 266.313 477.193 cv
266.162 477.321 266.044 477.503 265.961 477.747 cv
265.88 477.993 265.824 478.288 265.79 478.625 cv
265.759 478.963 265.746 479.377 265.746 479.862 cv
f
270.024 478.383 mo
272.962 478.383 li
272.923 477.83 272.777 477.415 272.517 477.141 cv
272.256 476.866 271.918 476.729 271.492 476.729 cv
271.087 476.729 270.755 476.867 270.497 477.148 cv
270.238 477.426 270.079 477.837 270.024 478.383 cv
273.196 479.305 mo
270.024 479.305 li
270.03 479.672 270.102 479.999 270.246 480.279 cv
270.393 480.558 270.583 480.771 270.824 480.915 cv
271.064 481.056 271.327 481.127 271.617 481.127 cv
271.811 481.127 271.987 481.106 272.148 481.057 cv
272.307 481.014 272.463 480.941 272.613 480.844 cv
272.765 480.749 272.901 480.645 273.028 480.531 cv
273.155 480.423 273.32 480.271 273.523 480.082 cv
273.607 480.011 273.725 479.974 273.878 479.974 cv
274.045 479.974 274.178 480.02 274.283 480.113 cv
274.387 480.204 274.436 480.331 274.436 480.498 cv
274.436 480.645 274.38 480.816 274.269 481.01 cv
274.151 481.209 273.979 481.396 273.746 481.576 cv
273.512 481.755 273.221 481.906 272.872 482.023 cv
272.523 482.141 272.119 482.201 271.665 482.201 cv
270.621 482.201 269.813 481.906 269.236 481.313 cv
268.658 480.718 268.367 479.911 268.367 478.896 cv
268.367 478.416 268.44 477.971 268.584 477.561 cv
268.724 477.15 268.932 476.801 269.208 476.507 cv
269.48 476.213 269.814 475.989 270.216 475.833 cv
270.614 475.677 271.057 475.599 271.545 475.599 cv
272.178 475.599 272.721 475.733 273.175 476.003 cv
273.627 476.266 273.971 476.613 274.193 477.036 cv
274.419 477.461 274.531 477.891 274.531 478.333 cv
274.531 478.738 274.414 479.002 274.181 479.124 cv
273.948 479.245 273.619 479.305 273.196 479.305 cv
f
276.767 478.383 mo
279.706 478.383 li
279.665 477.83 279.515 477.415 279.259 477.141 cv
278.995 476.866 278.657 476.729 278.232 476.729 cv
277.828 476.729 277.497 476.867 277.236 477.148 cv
276.979 477.426 276.82 477.837 276.767 478.383 cv
279.938 479.305 mo
276.767 479.305 li
276.771 479.672 276.846 479.999 276.988 480.279 cv
277.134 480.558 277.325 480.771 277.565 480.915 cv
277.804 481.056 278.067 481.127 278.359 481.127 cv
278.551 481.127 278.729 481.106 278.887 481.057 cv
279.049 481.014 279.203 480.941 279.355 480.844 cv
279.507 480.749 279.643 480.645 279.77 480.531 cv
279.895 480.423 280.061 480.271 280.263 480.082 cv
280.348 480.011 280.467 479.974 280.619 479.974 cv
280.786 479.974 280.92 480.02 281.025 480.113 cv
281.128 480.204 281.175 480.331 281.175 480.498 cv
281.175 480.645 281.12 480.816 281.004 481.01 cv
280.893 481.209 280.72 481.396 280.486 481.576 cv
280.254 481.755 279.961 481.906 279.613 482.023 cv
279.265 482.141 278.858 482.201 278.404 482.201 cv
277.362 482.201 276.555 481.906 275.975 481.313 cv
275.398 480.718 275.107 479.911 275.107 478.896 cv
275.107 478.416 275.179 477.971 275.325 477.561 cv
275.466 477.15 275.674 476.801 275.947 476.507 cv
276.219 476.213 276.555 475.989 276.955 475.833 cv
277.355 475.677 277.8 475.599 278.286 475.599 cv
278.917 475.599 279.46 475.733 279.919 476.003 cv
280.37 476.266 280.71 476.613 280.932 477.036 cv
281.157 477.461 281.273 477.891 281.273 478.333 cv
281.273 478.738 281.153 479.002 280.923 479.124 cv
280.688 479.245 280.36 479.305 279.938 479.305 cv
f
286.665 478.877 mo
286.665 478.449 286.599 478.081 286.468 477.775 cv
286.338 477.467 286.157 477.233 285.928 477.071 cv
285.698 476.906 285.438 476.823 285.157 476.823 cv
284.711 476.823 284.333 477 284.027 477.35 cv
283.719 477.704 283.564 478.222 283.564 478.908 cv
283.564 479.55 283.717 480.054 284.025 480.412 cv
284.328 480.771 284.703 480.949 285.157 480.949 cv
285.425 480.949 285.676 480.87 285.906 480.716 cv
286.138 480.558 286.321 480.324 286.457 480.011 cv
286.595 479.698 286.665 479.319 286.665 478.877 cv
283.487 476.523 mo
283.487 476.717 li
283.791 476.341 284.109 476.065 284.441 475.889 cv
284.764 475.711 285.139 475.622 285.554 475.622 cv
286.051 475.622 286.513 475.752 286.933 476.007 cv
287.353 476.266 287.683 476.642 287.927 477.137 cv
288.17 477.633 288.293 478.218 288.293 478.896 cv
288.293 479.392 288.223 479.853 288.083 480.271 cv
287.943 480.689 287.748 481.038 287.502 481.321 cv
287.257 481.602 286.968 481.822 286.634 481.974 cv
286.295 482.126 285.94 482.201 285.554 482.201 cv
285.093 482.201 284.702 482.109 284.388 481.922 cv
284.075 481.74 283.774 481.464 283.487 481.106 cv
283.487 483.539 li
283.487 484.248 283.227 484.607 282.71 484.607 cv
282.403 484.607 282.204 484.516 282.103 484.333 cv
282.008 484.146 281.957 483.881 281.957 483.526 cv
281.957 476.53 li
281.957 476.221 282.024 475.993 282.157 475.838 cv
282.291 475.689 282.477 475.611 282.71 475.611 cv
282.94 475.611 283.126 475.689 283.27 475.844 cv
283.417 476.003 283.487 476.226 283.487 476.523 cv
f
290.727 476.53 mo
290.727 481.219 li
290.727 481.541 290.65 481.786 290.497 481.951 cv
290.34 482.12 290.146 482.201 289.908 482.201 cv
289.67 482.201 289.48 482.118 289.328 481.947 cv
289.182 481.775 289.106 481.532 289.106 481.219 cv
289.106 476.576 li
289.106 476.258 289.182 476.017 289.328 475.855 cv
289.48 475.69 289.67 475.611 289.908 475.611 cv
290.146 475.611 290.34 475.69 290.497 475.855 cv
290.65 476.017 290.727 476.244 290.727 476.53 cv
289.925 474.856 mo
289.698 474.856 289.507 474.784 289.348 474.646 cv
289.186 474.507 289.106 474.314 289.106 474.062 cv
289.106 473.831 289.188 473.643 289.354 473.493 cv
289.518 473.346 289.708 473.271 289.925 473.271 cv
290.138 473.271 290.322 473.337 290.483 473.47 cv
290.646 473.606 290.727 473.804 290.727 474.062 cv
290.727 474.311 290.648 474.506 290.492 474.646 cv
290.333 474.784 290.145 474.856 289.925 474.856 cv
f
295.952 481.462 mo
294.525 479.108 li
293.645 479.938 li
293.645 481.23 li
293.645 481.541 293.562 481.78 293.397 481.947 cv
293.236 482.118 293.043 482.201 292.831 482.201 cv
292.582 482.201 292.384 482.12 292.242 481.951 cv
292.101 481.786 292.027 481.541 292.027 481.217 cv
292.027 474.303 li
292.027 473.944 292.099 473.671 292.235 473.482 cv
292.374 473.291 292.575 473.2 292.831 473.2 cv
293.08 473.2 293.276 473.285 293.424 473.456 cv
293.57 473.626 293.645 473.877 293.645 474.208 cv
293.645 478.141 li
295.467 476.227 li
295.693 475.992 295.863 475.827 295.984 475.74 cv
296.102 475.653 296.246 475.611 296.415 475.611 cv
296.618 475.611 296.786 475.675 296.925 475.803 cv
297.057 475.932 297.125 476.094 297.125 476.287 cv
297.125 476.524 296.904 476.842 296.466 477.238 cv
295.605 478.026 li
297.267 480.641 li
297.388 480.837 297.479 480.98 297.532 481.082 cv
297.584 481.182 297.613 481.282 297.613 481.371 cv
297.613 481.629 297.541 481.83 297.4 481.98 cv
297.259 482.128 297.073 482.201 296.847 482.201 cv
296.649 482.201 296.494 482.151 296.388 482.041 cv
296.282 481.934 296.134 481.74 295.952 481.462 cv
f
299.475 482.201 mo
299.23 482.201 299.02 482.123 298.841 481.963 cv
298.663 481.808 298.573 481.585 298.573 481.298 cv
298.573 481.057 298.659 480.849 298.829 480.677 cv
299.001 480.502 299.209 480.414 299.459 480.414 cv
299.708 480.414 299.919 480.502 300.099 480.672 cv
300.273 480.844 300.362 481.055 300.362 481.298 cv
300.362 481.581 300.273 481.803 300.099 481.961 cv
299.919 482.123 299.712 482.201 299.475 482.201 cv
f
307.536 480.196 mo
307.536 480.396 307.475 480.613 307.355 480.841 cv
307.235 481.073 307.049 481.291 306.8 481.498 cv
306.554 481.706 306.244 481.874 305.867 482 cv
305.491 482.127 305.066 482.191 304.597 482.191 cv
303.594 482.191 302.811 481.898 302.248 481.316 cv
301.689 480.732 301.407 479.948 301.407 478.966 cv
301.407 478.299 301.535 477.713 301.794 477.201 cv
302.049 476.692 302.422 476.297 302.908 476.017 cv
303.395 475.738 303.981 475.599 304.654 475.599 cv
305.075 475.599 305.459 475.66 305.812 475.783 cv
306.162 475.905 306.457 476.065 306.703 476.258 cv
306.944 476.454 307.131 476.659 307.258 476.878 cv
307.388 477.098 307.451 477.303 307.451 477.494 cv
307.451 477.687 307.38 477.852 307.236 477.986 cv
307.09 478.12 306.914 478.189 306.712 478.189 cv
306.576 478.189 306.463 478.153 306.374 478.085 cv
306.284 478.016 306.184 477.904 306.075 477.747 cv
305.876 477.448 305.671 477.221 305.453 477.072 cv
305.238 476.921 304.964 476.846 304.631 476.846 cv
304.155 476.846 303.767 477.032 303.473 477.406 cv
303.181 477.779 303.033 478.294 303.033 478.941 cv
303.033 479.246 303.072 479.528 303.148 479.783 cv
303.221 480.037 303.33 480.255 303.473 480.435 cv
303.617 480.614 303.788 480.751 303.989 480.844 cv
304.192 480.94 304.415 480.985 304.654 480.985 cv
304.98 480.985 305.259 480.91 305.489 480.76 cv
305.725 480.609 305.929 480.38 306.106 480.071 cv
306.205 479.889 306.311 479.748 306.424 479.644 cv
306.538 479.541 306.68 479.488 306.847 479.488 cv
307.044 479.488 307.209 479.565 307.337 479.715 cv
307.469 479.865 307.536 480.026 307.536 480.196 cv
f
312.903 478.908 mo
312.903 478.246 312.756 477.732 312.467 477.365 cv
312.178 476.993 311.786 476.809 311.295 476.809 cv
310.978 476.809 310.698 476.892 310.456 477.056 cv
310.215 477.22 310.03 477.461 309.9 477.784 cv
309.769 478.105 309.703 478.479 309.703 478.908 cv
309.703 479.331 309.767 479.7 309.896 480.016 cv
310.027 480.335 310.21 480.577 310.45 480.745 cv
310.691 480.911 310.971 480.998 311.295 480.998 cv
311.786 480.998 312.178 480.812 312.467 480.44 cv
312.756 480.071 312.903 479.558 312.903 478.908 cv
314.53 478.908 mo
314.53 479.389 314.454 479.836 314.308 480.245 cv
314.154 480.652 313.938 481.003 313.652 481.293 cv
313.368 481.586 313.026 481.811 312.632 481.968 cv
312.232 482.123 311.788 482.203 311.295 482.203 cv
310.804 482.203 310.362 482.123 309.969 481.963 cv
309.58 481.808 309.238 481.58 308.954 481.287 cv
308.666 480.989 308.448 480.641 308.296 480.24 cv
308.153 479.837 308.077 479.392 308.077 478.908 cv
308.077 478.416 308.154 477.967 308.301 477.559 cv
308.452 477.15 308.669 476.801 308.95 476.513 cv
309.232 476.225 309.571 476.003 309.969 475.844 cv
310.372 475.689 310.813 475.611 311.295 475.611 cv
311.786 475.611 312.231 475.689 312.632 475.849 cv
313.031 476.006 313.371 476.233 313.659 476.524 cv
313.945 476.82 314.161 477.167 314.309 477.569 cv
314.455 477.975 314.53 478.418 314.53 478.908 cv
f
320.713 479.026 mo
320.713 481.181 li
320.713 481.523 320.637 481.775 320.482 481.947 cv
320.326 482.118 320.124 482.203 319.87 482.203 cv
319.625 482.203 319.425 482.118 319.276 481.947 cv
319.122 481.775 319.044 481.523 319.044 481.181 cv
319.044 478.599 li
319.044 478.19 319.031 477.873 319.004 477.646 cv
318.976 477.425 318.899 477.237 318.778 477.094 cv
318.655 476.947 318.459 476.874 318.196 476.874 cv
317.665 476.874 317.317 477.056 317.148 477.425 cv
316.981 477.785 316.894 478.308 316.894 478.992 cv
316.894 481.181 li
316.894 481.516 316.817 481.772 316.669 481.945 cv
316.512 482.116 316.313 482.203 316.065 482.203 cv
315.818 482.203 315.617 482.116 315.461 481.945 cv
315.304 481.772 315.226 481.516 315.226 481.181 cv
315.226 476.543 li
315.226 476.238 315.295 476.006 315.436 475.849 cv
315.578 475.689 315.764 475.611 315.991 475.611 cv
316.214 475.611 316.399 475.688 316.549 475.833 cv
316.697 475.982 316.77 476.187 316.77 476.448 cv
316.77 476.601 li
317.053 476.266 317.355 476.018 317.673 475.863 cv
317.995 475.701 318.349 475.622 318.744 475.622 cv
319.15 475.622 319.501 475.703 319.792 475.866 cv
320.085 476.028 320.326 476.275 320.517 476.601 cv
320.792 476.271 321.085 476.025 321.399 475.863 cv
321.711 475.702 322.057 475.622 322.438 475.622 cv
322.878 475.622 323.263 475.711 323.584 475.884 cv
323.902 476.057 324.142 476.309 324.3 476.631 cv
324.438 476.927 324.507 477.387 324.507 478.017 cv
324.507 481.181 li
324.507 481.523 324.431 481.775 324.277 481.947 cv
324.123 482.118 323.918 482.203 323.666 482.203 cv
323.419 482.203 323.219 482.116 323.063 481.945 cv
322.906 481.772 322.827 481.516 322.827 481.181 cv
322.827 478.455 li
322.827 478.106 322.812 477.828 322.784 477.619 cv
322.755 477.408 322.673 477.23 322.545 477.089 cv
322.412 476.947 322.213 476.874 321.949 476.874 cv
321.736 476.874 321.533 476.941 321.34 477.067 cv
321.148 477.19 320.998 477.365 320.89 477.575 cv
320.774 477.848 320.713 478.333 320.713 479.026 cv
f
245.272 478.515 mo
245.271 478.504 li
245.272 478.515 li
cp
f
245.354 479.034 mo
245.356 479.034 li
245.325 478.886 245.3 478.739 245.281 478.594 cv
245.3 478.741 245.325 478.887 245.354 479.034 cv
cp
f
245.89 480.537 mo
245.88 480.517 li
245.89 480.537 li
cp
f
245.839 480.437 mo
245.798 480.353 li
245.839 480.437 li
cp
f
245.505 479.612 mo
245.584 479.862 245.679 480.105 245.79 480.336 cv
245.678 480.1 245.584 479.858 245.507 479.612 cv
245.505 479.612 li
cp
f
251.545 472.305 mo
251.859 472.305 252.09 472.329 252.355 472.375 cv
252.43 471.897 li
252.43 471.897 251.698 471.673 250.736 471.751 cv
250.66 471.492 li
250.959 471.428 251.184 471.162 251.184 470.845 cv
251.184 470.481 250.888 470.187 250.523 470.187 cv
250.159 470.187 249.863 470.481 249.863 470.845 cv
249.863 471.162 250.087 471.428 250.386 471.492 cv
250.47 471.781 li
249.448 471.922 248.635 472.32 248.635 472.32 cv
248.779 472.76 li
249.397 472.555 249.933 472.43 250.419 472.377 cv
250.895 472.327 251.254 472.305 251.545 472.305 cv
cp
f
245.878 474.716 mo
245.882 474.711 li
245.953 474.622 li
245.757 474.482 li
245.452 474.258 li
245.435 474.283 244.955 474.723 244.576 475.539 cv
244.52 475.464 li
244.407 475.34 244.248 475.276 244.046 475.28 cv
244.037 475.28 li
243.912 475.28 243.826 475.238 243.77 475.188 cv
243.826 475.118 243.86 475.028 243.86 474.93 cv
243.86 474.7 243.672 474.512 243.441 474.512 cv
243.211 474.512 243.023 474.7 243.023 474.93 cv
243.023 475.161 243.211 475.348 243.441 475.348 cv
243.546 475.335 li
243.648 475.45 243.811 475.548 244.05 475.544 cv
244.173 475.542 244.263 475.574 244.324 475.641 cv
244.424 475.909 li
244.422 475.911 li
244.15 476.654 244.227 477.58 244.227 477.58 cv
244.888 477.607 li
244.902 477.27 244.95 476.68 245.12 476.213 cv
245.449 475.307 245.861 474.74 245.878 474.716 cv
cp
f
257.295 472.857 mo
257.065 472.857 256.877 473.044 256.877 473.276 cv
256.892 473.378 li
256.777 473.482 256.677 473.645 256.681 473.885 cv
256.683 474.008 256.651 474.097 256.584 474.158 cv
256.4 474.246 li
255.908 473.556 255.303 473.136 255.303 473.136 cv
254.828 473.644 li
255.187 473.97 255.553 474.379 255.908 474.888 cv
256.155 475.241 256.407 475.695 256.618 476.148 cv
257.258 475.844 li
257.258 475.844 256.966 475.121 256.555 474.474 cv
256.761 474.353 li
256.887 474.241 256.948 474.081 256.944 473.88 cv
256.943 473.75 256.986 473.662 257.037 473.604 cv
257.109 473.659 257.198 473.693 257.295 473.693 cv
257.527 473.693 257.713 473.506 257.713 473.276 cv
257.713 473.044 257.527 472.857 257.295 472.857 cv
cp
f
255.635 478.609 mo
254.753 479.037 253.304 479.605 251.396 479.871 cv
250.647 479.975 249.921 480.013 249.253 480.013 cv
248.384 480.013 247.616 479.948 247.027 479.873 cv
246.354 479.789 245.828 479.685 245.507 479.612 cv
245.584 479.858 245.678 480.1 245.79 480.336 cv
245.798 480.353 li
245.839 480.437 li
245.88 480.517 li
245.89 480.537 li
246.08 480.894 246.307 481.221 246.566 481.505 cv
247.466 482.489 248.383 482.646 248.391 482.647 cv
248.406 482.648 li
248.419 482.653 li
248.427 482.657 249.24 482.919 250.476 482.919 cv
251.692 482.919 252.886 482.674 254.022 482.189 cv
254.864 481.758 255.661 481.104 256.056 480.52 cv
256.361 480.069 256.582 479.588 256.712 479.087 cv
256.782 478.821 256.837 478.395 256.804 477.946 cv
256.556 478.113 256.164 478.35 255.635 478.609 cv
cp
f
248.678 474.464 mo
249.651 474.464 250.439 475.253 250.439 476.226 cv
250.439 477.198 249.651 477.985 248.678 477.985 cv
247.707 477.985 246.918 477.198 246.918 476.226 cv
246.918 475.253 247.707 474.464 248.678 474.464 cv
cp
253.829 474.508 mo
254.43 474.508 254.919 474.997 254.919 475.597 cv
254.919 476.199 254.43 476.687 253.829 476.687 cv
253.229 476.687 252.74 476.199 252.74 475.597 cv
252.74 474.997 253.229 474.508 253.829 474.508 cv
cp
246.161 474.925 mo
246.135 474.963 245.753 475.503 245.452 476.333 cv
245.225 476.955 245.235 477.86 245.235 477.87 cv
245.235 477.873 li
245.235 478.085 245.247 478.295 245.271 478.504 cv
245.272 478.515 li
245.281 478.594 li
245.3 478.739 245.325 478.886 245.356 479.034 cv
245.793 479.145 248.405 479.754 251.323 479.347 cv
253.153 479.092 254.542 478.551 255.386 478.142 cv
256.086 477.803 256.537 477.495 256.71 477.368 cv
256.537 476.726 256.059 475.718 255.621 475.089 cv
254.367 473.299 253.016 472.84 252.323 472.725 cv
252.058 472.682 251.846 472.657 251.545 472.657 cv
251.266 472.657 250.919 472.68 250.456 472.729 cv
249.992 472.776 249.474 472.898 248.873 473.101 cv
248.031 473.383 247.269 473.825 246.669 474.38 cv
246.649 474.4 li
246.56 474.482 246.374 474.654 246.161 474.925 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Pattern [/559068928.0 /559063936.0 ]]
] del_res
/GEMALC+BebasNeueLight*1 uf/GEMALC+BebasNeueLight uf/BebasNeueLight uf/GEMALB+BebasNeue*1 uf/GEMALB+BebasNeue uf/BebasNeue ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 16.0%%AI8_CreatorVersion: 20.1.0%%For: (Ayib) ()%%Title: (Isometric Webinar Concept 2 up-02.eps)%%CreationDate: 23/02/18 10.24 PM%%Canvassize: 16383%AI9_DataStream%Gb",KpO;,7ddVG_g]JuNU]<:n;Q8mqdL.d;JeMW-)g7i:J%XD48THaB11:j;qOHH,`O=KZ7aj1=KgJ4WaL)oR[E/B7&#M-N0To0C%6'?o9a:o3lL%^p->')Duk$,_Ebmhr%^.!rhM._*"bQgdj-n]a2]n.n:n;_*`rcbTf;QY.KPq()h5g^e3Ur62X8:s]Rg=%eJg)Zhf%B765L;4JIPnQ_RG7(TLJ;d-11qgFd(gRiAgE0+g6)4%Gr6B<#fa`s&#0?JI63+U\8l*/d8Km]!+,iS&W"+beF!]U5%n2G`cBcQc\%Ri4F,!7ZSi5Wk<,mZ-p!!cOj%A1eNC_2i[b8*5uu#6E\4+$"pHVD?!W_^59(L]`2H0Kf*:,53SVr>m8tMq2qNMq$utT;;`KR^an?%6rUomP(<Sr+69^-?tk4VkYif9S'0p/mt=Y,Rq2@36iYF:pM$X%$PL/\_P"pH%j6BrJjuTOd[/-#9++f@"6Up=?f`PdSa^Kb"m+;2%<L,sr6N8F@^J]VD-+qY.5`IlfKP1>c.6W1f3Muf&OQ$mN#B4GDr&#C(17&1n8LB(#1n+u<fk`93&kVj+FV.1L'3V_A;X7M$)n#n(%;*)d/1120L_9AJWbU^Tm;a_6@/!lRaHr"/(g6?70_6!86[2I6SrlZbj8L"GT%gFj<irbBHksS$&7.d8Z\ufr='&S=_+G-L8+:8TT%'?e-_hpgQI$`H8U#9Er'>jPtA%qlQ^`R;S-3qb%"^M#m`fiXrmciWtd`X2eB*%SG\2T)h"X?s=L"$1Td!;'%,cBMdhfTfWmP)<)7%[2@G'"@+"KQMrO,Bk=+:'Pb:W1esg7JJ]t=V0,dP[43CYcU_Ua>o?*`_kH2p0jZ?Q94`BS=^E]'91'Rh7>FdgTiNu])ldK(eE\V:%`7eUL1`^?4I)j/+/[,cnO`!JUM`$8@9+PK[8q7cBG@R:8O5ekf(19^!lP6eXNj\Z]*s(qt(g+Oi)Qq_[1^:A".)ukPF=1+f`6Lc:%'"\2;<M(:h4banjKp7)ecs3Y21qsNZPZ.SCKm&4U9edUsJ+k@r2.YZu;Lei;jk`4VZj;5!o=qgQrEkJZHKZ`L/uD(BTRp@J"'.1p%N=Ot`E(ZGanH5*F%(%Ag'0m0aI0dC9Vcn2D+AG<k-8t[l8rSN^_R74A@WW.ZK*W?f(cA<U88Y(KmCi.tc2;#nJZ)+<EIOhbl3NV2%UQqOgUQM:9U5g0UU#lE]%Kc]saTM/Tl[sZ]2C&hjf@i7f_M2(rL`Sh/6'i[NJ4'IDJrW5L]&*[J1+MSI.M?J+V"Y+?E]m5,*Ctn0%UdA_*p(Y$_U_6a,M(=!1=44!)S1.<G@_1:A7.dFD!9kMCI8l/?T`lSkBk^!@@bi4%8dWBV9+;,6*V(3K*c"WG?D(UjN&5\0W/Eog%jFaAgUEiYIS#UEZ*\&!%?pg4,3naHCdpC)%!YVuFhb+CZhPW1D/@>4"?2rBO]m#CQ^KFL^%fj;"REA<G-oNQ3Xf;F,BCdQaf9@QF%XG0pqL=0`Wa>>>%5G7'_@Xs9uO!2JoLNJL63e3%qrodGt,TKb`8/@YG9*%3Za=IWX']>&TL18n2V\91%pQ-"$lO/)efE1u7!A+eS%,QQ)%F0W%mrCR4qA1eT!lk4?.+IUEkW'70LT0/!92HH\XTMieOUqFVHC\f-t^!a`AP(86hYim%65J8Di2Ib+L#09^Ul5O+\c2f4Y%3?'sF__9]_3BIA9p&ois5N"SM+H5G;GRYKSi-#'pgVL5Y)gGHkL67>u&-o!QpBmMB1/WqnY;eEF"MR,+V2q8rH;sldY?e"e5WRAp%95c?90:M#"\n7dZmd6RO'LrHqoNlD&QiUs=3<dd)2$aT<K3O9MJ\'?dZLX>;*)l/5"a$Bl4$!R4bhN2E#O(S70>+>+*jC0(Tb>TX%;*Z>NXk)@n6*"d==+:%GQHuNr(K`sgY_d)sd\DP.LjA6U48^B385l=90We_[(lI-WS`a.`D2[jt5Pf<^'<LHTAZZ-$<Pb[oj!V5Z%q=U!FEK2MfB:Le+UHQ^&bWPu:7B//?IAq@jq>h[NV%8E&1La.LHJP'3-s0Y(?2F_'D&aTE,8b)q@%l:.--%dKh\92la%Xs%=[F6^%N!-"tYVp"r['gVC?6?aVK!d5]V\'&(adUpk$Hcnm>`(pk\q3&YHn]reEE!Ii,5KJU@,t$9*[T8<)$bn716G4n_$$u#;n3nG(Pp1D%+OhNc"n_Q_2u%$AIZh",]`!I(&&HRNnFALlRY*!(LF4:uQE"2AJ!;#8(5"d>cI>MV=SGQ.ag&"OeN81b%f?RUdm9BfC-![=$0K&S%1)MMC+p,8;O9'5iPL_-[X`o:SjO%XG,!imP.VsY8A15Q-ToX^`K7BY!crVClD"1I[Pt=?<4@tXF3.(hXT3N02Lm+f[2@Y*\1@\<V%Pt;RuD"*_l9r)f,,*>Ma:m+4)X.TJM)cto;leX)j*p`)p^!kU#=JI&%nf0jOIShZF?4"WS3!O&BFDV"XpL'@tnp-$3$G$DV:YEhp%28FU2ODm*im=`O6-!oMC6)mS,U2F59RnQ<#@+p4;9,aae,8H<JG5I,6]RjcaNXR%=2a#U;-.%'qU'_K=@CbKE2O_bL&iNb`BkR]1%2d:h4HicS:c9Q97p7U^T4;mOZ]`XpiR`c`PUBHr%(IP2S:n.oD`eFf-Yf'D_Kiu._rgOM5@`17nnk>4GBJrGX*,5">Am!JoW!af#%Oj=,d8+f8q(l#'AK@*]TVmnWX$`?6V=LW0UP#p9upHSj4[L]LS2Y>tN5['I8!L?-K`:s9gp^Z<6Z<5ZMRgXsPK"!ZoRt`IKOinTo%.f,\mE(9YgSq/@KXkrkIFY'C>&ME<(<M-8e9Q_n`.d>QJjpC0(Rngts)@:kg;c'aCA^^&ORE1![6'X6gMPL-c,a$1qTb<fIs,rPj%WN\9IdPa[i0rEkBpm'-th8==iR0'4M(J)kIVLgD!3-lAGSKnm%TMdooc"=7A;WXCj1TV89!QGG#TtHQp0rqaV4R;lAhPl-))Bj^d%pfe5eq"EeDlC]+"p($k?:^0`0NKrE+PUn'\"V1<B5VaSgW;B/"+k&[i9Yr/4'9-X]KJjJ)KmpPS3s?n+\cT1c\/m6[*<B?jas=fN%!HFpD+[6qBOl'l*OW,HqgA&@S-(`:?UIDR[P(:i`8H[3cmo2W)K)m<ZmMQI*:H/\ne2@<h14UmSrQ*<2_GT0hKVDjUH.MY`H\]V8%[\8Z1"HPKPAasG)O"=kHaubl9j8nP;<?Te88mUOc)%gUJ3b0\(TU&Hr8*aN.f(YrQPK'?(To@M)O#LT\S<9(j[ME7UR4+KH`T%5,%@'UEe<)S-7&lBh\FGC94dtpajI>2mNl&5aur!q:PV,BUU%=MC3O7E_F8F>ZrNtVYa;;4p=p&-<-Pd)WR-t>-Pisf.*B4Ssp?tKhG%!cPB$Pklj>VD:f?eBo_kH3faZ$C#QE$50-uoOs*a?Be-H=pZsQb2q&T"7idl'D\1[&@i6mTE[s"+Xr+8;9BIB'W&H@5r""XJ=[G&%5Z&/CE[jNBEJjUTTCinpc%AD98fP?S[3,(4MB]S?*Er.*GXGLELSFF>P0$"8V*Lc6:4:\ZTR2He<1;/K9cDA8d[8INdX_%mFeZNI%l72i!asP.s;Sj;C2Wh)06ZM:D2#GddL$[L`*GT2gUrYf<+pB']RZYeX'IrA#TQEc/<4tu*Wp1s0Z[*?UC.s%EW)X-k]7eb9>_<<^%KCh'/Ul,5=NI7;pQ(_#\.:=[kJbl<Z&Fq>OKp1dP@TDh^-[B9jPZL7LV`a7u-.G\T$At'*%b_jg>dR[N!m\BU2IdBh?ZY`cDB<>)%A><:Za;T/!jdg.j5Wpfd:nO#aHJMQ#9<,S&\ZGA'f1jfhA\D#V6[dPYUDc>e=B*1/)64&b:R$r`d3)C%7#*=a,)tHYArJi;j]N+I%qG%5oVpHBIIQatN]i$F,l^_c0b-Sf(`>hdqU6nTr=AA:06^EWWJ\Q#+V!Koj)hjF?#XMnlngd-?.!-q%)G""[V,4d'?fs.7&kN03%a?37@18n1Z6bA$*W?PQ2kr'%*gMBYXb%La7PlE8?D)26I#K\$jOZcOJpSi3<VI]_`83o8')hqm][Y'mhQC/d62a`L_,PmI*l!q:\%BE1T(!mfQ[6Q%Q72jIB6`">>LhpiI[9E)C/@Y1h$(;b;k$S]Lr"#=TB2#N,DJq9TZ4Q]jO*Rd\_e9F'c$(O_<@+L;)lbf'&LE7A9%n\F<HnPMr@I@pel^.8J)jc1XX:]=Gp1?%&6dnY9QQQqW99.&-7Kh2oF*#V8OoB@5+=7B-XfmqDg1WbmJ%F$;]d#e?5!9N\G@.3q;%df8Te&"o5,hs7Nf_nWb,j$J^^^V`E,'?LYSU0X9_R`pp--]9K+%.GjYit9PO+<n>YPK@Ef`hfuFFACt,i.oOp5Qb`9$5H<JI$BQb%r64>:Y5F6C.*(Lbe&Bea\S*I^YhRHq(<-P*/X6J8GUb:$.-4%[;Q3VPQ\hbHQMFBZen7uHX7BEDCpGOpX:m:7HKnX54<7.ZJ:JnG%V*%>N.\;dtXj!9YO1MV\X7BDYc`1T@<Q4@&A;[l2)3;etEYJeQ5"T":9Lu6cAkV8V?!3dmq-;)*;R=KA^cFr>dF>M&,S<b7,Up&L%j[io]8MZaVA?lP\1-b'HqQ.hP<BdIP9i_F`247)aVjpc?CmJjXq#gB5h15Ce>NAqF*V(c:+A\m]l&,,r/G^Bkgane9TKV_2.r?at%kN]B)q3::n.;=/bPl:LTm6ik#5s+5%b8cq9Ij?g`;^t;!0`)pj87f,IoHT\KP1$4,(+oEZ&g<o19)Ih?-kV6?hY8Ab[d.])_V^RH%cU]OLY5gO4!6Jo/N8$oL?OQY<2W2J`1mK4>\MRtrBrP2cZs(B(,sOXbNZ#?;4>(nYAA4p'8t7G-9)]RcPK_*i21<4$M6?qJ\sg5p%A+LS-ce(FtfM[C`IutV<ngLcKA56#SN))2Ve(+(.RjZ2[0^!0jqi&d4Cd)A+"Ck(PV4]$#Ypk_H.n_68e\_),F#%#qT<WZNC]JOZ%&Ka2Ho,4%DfKR.(&nrct8S2e]UVt:f.4HC]p`so9>tprrq>4qk:\/kcPjl'Kc^TXC+NbH&]_k:7H_KL&)E0437p,W?<82&hrXO\/%@XeB9,miaETkB2%.N8s,G;F)0R("[.7tmGsC\uo3hoG6>S'TrgMS1In&INk@D,6NW09et\S`sqem*4G4nCa;WhPQ1D.@UqWHS]M:%R("d17tmMuC]!JChp_)JS'TrgMS1HC'+0(BD,lr^1?:rZS`sqem*4G@n2ZuafqsJ0rOmiurTpA107,-\OhHuXDXLIVVb*@qm^,"H%F.>?>V'G*khU)]ne]ZFK$TsVeh.<,`bBNfoIm:c+9]qT&as/Z:A5h^A]m,].@BW'U9BOYj<]_rKr()p+9Z"QUEsgG6s6<AZQFWtp%@V4Vc\`jC5n?;8M,,XX4h<?^qT;d9oW>_r-N"b^qR70V-a,.0F`cEJnQ-OX"jPj\WWhT!iHC1<)I\>FWs5?U4ab7ik)uo&sSRfV!%)D(p::-Gm:07NRIm0(Lf]3GU,?eVJLQHPh5rhZ.s8M9b#q3Q9iOl^U:R=Aou7$>`aCUhuAO`CELc7c]7P9aBcK)X@Sm3IMph*1%G%*VhNt8*Ad_Beb)iFPpNZWPd8>R(h=7cdTC9rj<+qh(I0rSnf,uH(*mL^TR/5n)gODh>G8Ac^bFP2dj/I^hFm>!JH:neZSYH$k(2_%@d6`S!0F!Pq)/\3)CWMs"!I@<H7T:b76pkSdi8j2KFL1O!bEk/l8!0[TM_4O>_ZP[#6,,28FF\UhgD2'K;.^f/b8q$\k2SfISoH.%Wn9V!J>*.n\I'_];o.Z+Fk4;GeA=MH_"PB>K>`HUH*CR^Jn;Y9'I&2<K$/Q,!;UQ5iV8$7a.I:#K-]q0q(;,Y9PAl*&n$S?lH24/%';VeRo%f'b/SpU1CBJ1qEg\iq,pFfJ,of*m1t;?l$'4+u`XR9-XTA+<"(_6X?dE5V6jaa=-7.)?Jc6M7>RR1aQth%0KS,uF`._$\%`?C/S<gD\%!n357#dr<o[>%ATM@#Wtce*jt*<pGa1[%dc\rI)f2I_FJpu7]M38>D1qm8Th,o_23ZjL/8D`)tL9SP]]l?AX3[XRFl%$GDnL9fZ]k3#;m/!%.])Ml4MfqRjlX4KP*g0b.a;i!po2VE;U'hZTGb'/8[?J/3\1-D58YqBk,bCB@s$`S!$JZ!Dgm"_[u)gFU.#%5QQIF:O*XTm+[')%HuPs^(';\J:G`r.al(F[aq;/r9k`36PbOY'EcGb,ZAS)-%DGAj8l!)^dO=g..XV?'_.#s'8_?bRJt1HVh8C3%Hhp?A%U>2<\k'"2QjqrK+m`&n;.M)XkR-?,.bNBaf>_J!mI0!/pjh9qiV%JO@4uD-g6il:l%nuII:^Xjl9@WIcJH.QN`6RF6AK='%[2*>=fk`$R%$g`:oEeX<52A7=\kq&G3Sdf9FFoWD>!0t9q;5IZ'3hX@rUE44;X(Adfs/?o1H]1sTu;$3!$.DV$e\(iDqMYk$>&>6%50qVd5cIbR,teCYe_kqe8GXDd<rVh6%YBoM:o<%"6$eq7O5>n8;FSlVL)V+ZZ2O]_YEH'1/,!*-n[#,6rQK*`O/g.*CIVeoJNWB_%9_TOOR^k8pG072]"DiMS4b5a<mtkaZ9],@VbPQLb'l<^Emc#57"-T0h5[<GH%g_t?J5?;'kk=3@riYrGaj2'>D=:UVR!&eY14sY*%EAK:s&W/LLdis4RH]gNF]Pj7b'3]XW+XUht-1\XsIdiU"]lEgu7t1#c2c'keN=sRD7=h?9L[A'5h>jTUk_JpQ4iHh`H$g@ka&i6'%po66i;Y^-/ZY.2SW5p]05\=SG(k6-K%Xt#sd7$O0&%`D"q=jZ*,8^AD'q#m7?(U.bYpIrmQn:Oh]DWS<p>_=[n5EhET'#XOEK#gJ%'$0A^M/:=[)"pGRbV1bikuqE'fJbDX=Uj9]0G@C!8q-bR#M>a$ZZk+([ONu#V]@Va<Lm:Oi7JT8],p70g+^4gaX$pZa3;5.Q$cXo%ac@%B*gZiUa*BMHWGH161H%YMcC>9pqcosM`Gm_=UKP1i`Q:#An]QKr`86e"(Wb!]h^4B+N7_dB(>Yar_$SYa4de\@Q2_(ZIZfGX%\C6=aiN)69nS)Scdk8A=SQmtgo"CS)3lNYb7tIPAK5,!i'/.01eIrA\VNL7k+L!;%r:p)pZZn_B[ZbB:3#abDJ&,2K/ZXqAIoCi%%<!:+g%Of0Bge-\ChPH&<;]Ga5*3&;sns,6Np[BCm;;j/57\Gm0NXHKMDDMCW(VV<K.X]-'!J_1eX#95Qh4m+)OQic=mhW`ia4HdT%DZBoIp?Ettl2DA+*d>>W[D!g/LncEcA<[kK[SD)FKE>G5YM[pIB'rB<mi_UIN`>ioFpbn#_06`^ob-H6I[an8ED4[\L\j_).^OR$%>pS`kbtOOrfD9Jq1\_OW@5Ch<'2uV;IX]oXrm>2](H:s708aTE\A/u0Lo0!*mg%-3YC+4<7V<rbk3%P)&'KIf"(te%/oV":U1n8c%Ic-/,3&>,$aX(-Q#7&P!?n9\Y^4'>F$pI).cLUqLRAj_D*XHT)(]TO+S8%r3^_qNUB#Rt:i@UeW$30NLQ!SaW2biBB+'.SK+O-O;%ffc9EG37fQNT5B+n7.K;/0$Lhkbt//2uh;:$Y'(Fa!L]*"246<]Do\:4?e84ibrP'^\ReE7edo\Xnqt?kAM(9]_Jtd2]AF+kAE)m%h0eV7kAD?OgHVgQq:ohQ\=9\6q:lFK]BQea)W%q"Ii+Be#(@aX\21NckV"+jM^\0M0-Y5jrC,d#,(4>m&PQVg2G.@aHAHIgebF0-%m,,Afm@=!5B$XWF:W$C#jq$L)%+h@<%-MqfW'57%:K)nOLQbtb284I8J*NF`,lY=_dspSAInkt+f8Q8!K.5YhrG3:T%o7DcL!`->%jnm>H+bSiFS-Y9,n<XE4s#.Z2nF$SV&H$8<-j&5bh0@jBEKJGPW)>kL1<H`-P.s$\fYdCPZ]Zs!"f?c+@Go<<XIm!Ejb_9[SB6c$%[l3o9rHtfpMnlP])nI`+$*^sY@LXUe`nBA[fNtJ"QQQjqI))K*Ro&m?^LH'7A&2QbFl-JJi:MOFV]$,5\^LXIIKL^W^^Re;H@X>-%B1[i<_k:X0Q?oohAkA0brSo;UJ1-tZm>nNLf$?Z&@iYLIZbQP,mlt%D5C5IbdbfQJpRhE_kK*ecmlsHaq>8L(0`$!Oq"rD4ar/uc%NY<A''K(Bdg#$lEpRM1FB7;$GUa_&?hfJdS)>QY+/H6Z5:0?Yd3rn._/U0T0pAC;Y:%-)#S*>$L,$j1g?nHBn.r(m:oR\JCrgKa3%!"="a?<>!Uo0]2RN&,CV)(SE?9:U$J/?aYt-FGsfon0Fop0DVnl@Sn)pFc=q3!l`*F2<.L*IU/Bmt^d4qe+qhTP89Gk[O/gOE&Jp%^[[6@=aI:qd-V9KTK'DdC#;5>46Sjg+_ba70[51S:VJAcNNZDIZIj\)s'pAmJ]llFH9SNss#0=AR6_&W0beN_*'7)bb`lU?cHb8J%!5/$G4/.+0`f0[J`'2uYWj;+/.1oo.OF^,Z1(l_H6UrY%o2:bW>PYH5m&r.:e11=?*&ETOcCDui[dVH1SN4D?a*6\@cC>K'#$j0N%1Iq0*+J4\_bi*t_Npk2[)/%6=8@+p(QS_.&WL@WNc)tjIB-,;PL6#iuh)7JQX8"2n;;]<oB)$T\r%f%ar-/^!5lBY&VC\[p5G#d-%Eb3*QH&[-?H7?ulK6)oiF78uMoG^2sJ&7I(6GFNP?\Em'#kc?1Vd4V/AQmE;"SGR!qGAVEH(J(:<3%ann\&H-0rJ4R>=Up.\l>1!%rGURToE,UV^cof^5Ib+4'SP.7p;alW[#KJQ/LpVY,_chcMg3SNo&#\8Q"alGI&A4;"1U)h]'Y>[cPdTZ6]h:G2T#6Qqh'l^BpkKp%fmfB[H1?kRhh[ac,OR3)hYY9r7*&=5(C5E-lT=_k09G,X_V_$oP=YfpP2Asf6Th5NqWf:si'Z"j]nA>E`I7L$[os,Qhu,:!L<j\J%5I*MmrIGK8n,A[T$[L=5JFEL,h&k+af7!CKn,Dh4+4KQT(f29*epcTgG3eTcepR:]#.4IfBXp)7oEH9d?"[7M8^rJU?giEY%N+;^%]sH:?qW.`7I?h!sKT0H5Lsr.f\gl&K6^hfLgHqc@?OgHOgVZ'&-T0jMj>eadX"Rin-p[Ro.F6qMPXq&oTi-3**N@th^GMGC0E%^,%QTW?BNkkDYPtk<RbJE^EPEOjmZ.#M)./$A1"!1ennD=5'#L1@T(X!E'D`eiZ5>CAqH?&0F:hU>AYWc[GebCrHJam,[9Y#Z4CQ<o?%-<K[RfkJ/>ep#"9,r_pFFrN&*oJ7&8L*%Qqh/R-'E(kNk)Y)j^coaSc%n*,iI)eHp:sJA&rJ;Wap`BL`p=!:H"&(60YIhu+)t9K(%!PPQXh[9"X5i2p=FXn#-.IaITWI_sr!iHhYh[98^<Zq+X'!l3S@Y<e^JL8aXbm9i6W%$U4oZ]YY%.qe0dl;_2E$iiF)kLu_$5>Z7%Rp$ab6N.ZLcjM*tD?m%fS/peoU49rgr/he%@,"3NW>*fi*I0\/?q,&$S*^kIqu]EZ!:`k;pnWfHod=R'$\Ua(VbQNjOKT.Pp2[Y<%XH8esTVaoRPQc63F9d6.a\o88NM,p$mo(fMn0d\@lR`VGYkX5W\b*A5W@A$lp6O4SFIIM[;a4=*:B(Je5@9$Sd93fP^WPVMa5]<7%D!uT"6^Bqehi]%s?n8h!0j"6u*uVN3,i("Ti]2*J4h^r.XuF$:9'a7CU-,@gL,rZO)Kms)3#"DQMtR@EZ''#/If^CHp[ZUei:;3M%nDo;SZj;RHp'F\T$Q_EUTli6,Sp;ZeGms@1VDn.O/Yn^4EhJNDrHkG!I?U[2Arq[/p9KhRQVIo:975]#eo#lkD^olo?[J.Pm9ts#%M.]80^fJ_q*-aA,7OrpT5e:#F/-#9fNZJ9pXeN!^q:a<Te"1sKl)uO320gXsY4hKD2[m]f_UGYiHqgj<oZu!f?03lZ??L'Us6apc%O`!?jdBCm@_?L-m_7Y9<HGKj)AQrIO891/9M0G;LH9fPi!/(uP6+9@2\:A"RjQMY`6h]dOT6_s/14sY*EO.oY&c)q\'VE]G\Hp.Z%`##,r#)Fp!^JTZ1A^8aW4i]=[I0oak,j=U)Wr5R:VcYbOl[3\qVW@3*A+n"'#N!K"o+-!?\TdoKpnN7W:C*E&E!?8XVs3=6A<;oQ%DtQbOK0*r6(Ht>dMU0(IRs*Jn#HE[LZ"C>_4aIfU$N#dV=lLAKGNf54]P1mr5>XN@dDqu/Be&%"/Z@>d;C$jri(j0;,*<sgW5t=8%XM,OKZ`d.6r[*(JX2f5XbYURN)X>XS8CP<a"8=5eAG*,cC\e;&`QZ-i9`&iSnS`*570Qp\A_:^]ZaQZA>6FnF&dm(BD2/n,N:?T?%6F4!=*=lUtP74B:94*&;C)ZAbq4+5:J"jQV3ojJ2Zc?%>R33+6a_`BHD/TX#NV&XnN)EmMRfcZP4TtALlN5%^*W4YEVMG"tVWVJ0%2/_,JdkMM>B#/C0JMnf8\*l=3:(W<&/$S@S9[0r;A3?=R_a)6Za7kU&S1C[-K`dKO<4KA_Pne\3Jo;R*4Eh:(5j'jjUt8'3Q/V?W%!iLJA,qFC(B8>F6)7kAK&2(?c-64WE6a7RmTfD>&(4p0c)iW2?>>Y/uU0*_,PpD/jZHi&X%/_-S\e^oJ/&A/@(bg9R:aQU6c,d]I%m=r%nKjr#b6'<A;J+3JX.K4(V_p1h\$GrG?:\GP+Yp5;/c(PBH#/^TSq,C,j+i(Kg@sWQh<k]3_ZN(R`P!hF(#_F/gG`L"A+/p4e%)iNjA.3b*I5B9.srV)TbBRsa(J&&rFq!ePpr<CUQ:P'*Q7'I,,hd3%/\*ZEh7AU)!<,Y\S*G@,uk2N^'g(]rL3fd;N_1Vdf$c@2h%D^cg&T"GO8oFOa[Z>h&jYa!EYPNa@jOiXDV'_me^jH9iEM+hI>.JSXVPGrX6rCA5U_:o#T/>N_+LjB*4CUEE=!7!$Z*Xl]bd<QD@%O@eRiE>$(fL]P>R+i$0!pB6mXA`P"h+"fj-E?LqQ!e;nVi;Wu)mfVaT;07M1cr#&OgZPe1_&*<Too@`e0<,"&E-YUOa'dPG$5gT,%.PM?.!>5H^Wr;0>Gnr=0s)`k1psQ$ZH)tSk2=(>WZqLq-5c>8nScN9:-bV8LC(S3`&[9en(j&1NgIfk;Nc2W&_a3cli.l_/bsICh%4;lJfZ4h<qUkD$tVhB4)SKeCWmAiKF'%YEG0%d(Ph%pcnhN1`]N^=3'[OKGgR^,a"2<)2V"))rR.050rK+ThTd../"O\t@oAOIRJ%N!9a>*5'Tp.W!+(+ruVJdM/Y9VqPudK0;hSQX2!"Z%,]oJ0]XjP2<VD9[m%(@Mr%^L\+4*o)n7-"rq?]0HBSu91f>5K,tY>/4Gl%%gNC5[9rZc!I_1923U+8TPcoEbhk\mt\j'^oF]-'e-Zkgqp4AVf5fuo0[q9I^Thcu8)Eer2K2mH=!R61P4pMEW4U@Y%C(PnHV%*gW%cj:.l\H39c#[M@0P\E##L4_[_7HZ^b8d(oA4/TO>+jb^jkBpV[B:X`13n^s!2CPT(g4-ko$++WG")D\l8dbiFYf)BX?^)[NXLP4I%TIbIDg6CVs.Zd.E)P1OT4$XCO0bD5(-;(o+Ko/?nPai:nNXJpP5n&jnJ.3%p=Bj2tGDAt$H:$*\8PD*HJY<8`r!`4nit/rjXNo6\%ci:jglEKJ2;`"W\2&$:Cms@(JhkS*%83tu4C3s?FiKE5.?PbR62**<Vq$F*$m/3GaC&H6!5\-;6XRkFBL*WKr,,_I)[Sr,B^#.(]%,M?lW$EQ3GB`?pToB3`ZM'n*i1mpqFJtq*umL#,'4o';RPp92S6oOI*Ep>gLY$bsFP^b&cW\nVu:m2t$V;Ra/%*f"<(%&rLJi6eF%$5<KYq4t^%,!Y/BhlZt[3VD2qkg9L4%2>P_N[+;?E@`M%-62=!'cqMX5bc_QECcWJ.heunqgF#2`?=`>#1%bG6=4,bL/Q]0<^Gq0%/\j0G#0\`H:LMlcfPFE%2%e011H$Q<*MUEI@\^q#Q]AW74teVij10RY)^&(&KhF8GQ2oGb6a^bGFak`De1-_XlC<=/o*OFN@S!bs%9^nGK7C/c1,(^ic;8j%N/Aok$E?Oc>lB4$*",8+,UY1'1;!(uTCK`\GMs.4l@TQ2Do.>iRQES$(^-E_(W3B?kBZO_KL_;b+GqU.:%LFfM$[&sFE^];2PPu(HLdQ6kGDSQAU1+6">W]A<jc-f7"KrtIThnZ`q6,@f@f&m993]>lmh51kU:r@,'OpH)9<iHj?i*KOp6:L#1%1fq'_+AbYI-sRR=[T6:/8)Pls%J21(I\^/*ku9-pE[n)k5+>GmSbOG+d@KlZ%mXGY;HUUTa38:U8BU1&`qH("ETpn+g6]Kbkhgo^%V&KqKEnf7M5mF[;V#,*9aR+lm32?/(@g3i@*>kE'cZG[N3Y^(@P<GJRJgN6IVQq)OFqHb%)0S]D31l^qM<6^ea<oE%Vf7>&`VlN!%D&&7h]aj+e(OjcJ3`s&28t-\p9nl[4?7fCppjPN%W<7%1'&"X<BT&Y(BsAUEl8O2tb;LqdhQj)Qb`V47OBU(m0&Ql'ZP5o:1En&0%%uH0eY(b5@?S.`JZ8G;;>j5>HLZ')T$PiaI).*kV>*/C#"0PAu=(MMSi,R/;:=8!r7BPl69;Fim#r:o!L5Il;-1jhNHPC3&,D3dc%]gfJUY-%"JPOej'SaYl*c",jZ;^Ua6UGIWf!Yo\7!:9??^9U:T7=gX=?T+1fRk"qYo42F><G(Gn5^R7.?_A"8MOG6[Z"CUV[TKC;%<ZQ9CrWcK[/)\RE17aPlZ?,1_8/c@Js$F3C$_CCP$D$9V['246X`3bU#-Xs<;"T*#"O'h-UAl)-;j^nmFZJad1:==Fk5]1=&i5^2%!jmB9/<R4b'chuI#6DbQT;DOW:kH?R***sgk!jQ(FdoJ4r$YgmDo`?SOE=)Z+TV7Zr_i#_RN*/sWlW`#b`lO!dR-1GA5"Esegnda%a?,B[[3;7*JpWU#i-,#5:p5La>S+7X/:hN_[X'mjaBChgdI#?$K<\@(@/-h$I54nbYK8lJZ"o3]MgDB^`X'As,tRJNRGKUioWE*l%*\8;h[[TbR(8-+_JGQepEtEd[k'rloh@5tBYb'<=],AsO'.;22Bf+g*=fJUhD'770Q;];S5??$fU/EF@=%rt;DEr?XQ!l4Q59WKA%_q9fC*0^6G'TUe4D33]f>EbhfV>7>(LX8a%)A$fQK2d.mT\9g59q]#)*":d?rZG3%L,a`7!EMNZS@K9#9^4*!pic*UT$<;FEpq1m%XG-6I%6ki:ljs>RJRtSaY;:11R-%b6!O[ub;59oIY:g-9G[@O2'Fe0r'3'TM]-XI1.DlR2?Iu'/n-,^im5Q)?'ZpKj#Me6Bi&_??%_ssAj/CXHjRseL#:3_e;FToKLQhfO/[.cLG$4[.<!g@C%hJBJYXL_:M:QDP(@8T8lW3h[LXST+.<57m"&G;'2#t7Gth<3AMn8^!.%_8L<]mK9D>)8;f6ctnuX6+mY>#Zr-iE6tG6D2D#?@)52c&qds21`$k*?]\;;/uY[^36sl_KWh6AB$c)IJ//T#M5X#8f@\^tIM`4A%!#O_,+>$G@l<7rjPl_q`0m'cD"J)Ml3<3i6^r%L&FHAd.NX>jT!_2m7B`Kt;`DVOHU)FI/J1K(mo?(dl8A0"n7##)kHq3Lo&VEI=%*Ce%<SQDgHo:Y?6_"8(@`.dt=FZr2`;X#A)-fA.qdg?3^<3AXE0h=bADJ>d.]+<j?Yf?jK_n28:$VX>Tg4ThH^hfI`HJ@HKTE^C.%*&3=r765I]g9:l3[)rK1&5nPJ$r4EV"OD*H3#HMc"'>jXW"mfY-+;hXPo+OI(\NUc]<#Jm]>Is=UDR$OEk$Xncl&Ka%:M/iF7R71%dKYAr(>u"Sh0J]26[Z2XF2'!0Y[3KgS]FfO.91pE!R'Ua0>)(j5)ctDjXBO]RK1@/#WMimAJCI"2HS8CLY84DErh0PN/m^%[7sGp%Q$9"Xa%3)_,dXqR%XMNF(Rk7T%,D%\U#f`Wfl.q4-sF8k?ADMac#TW,C:!!.6tAos=<jUdif'rE;jkJn8;p%^#AkTKR1;Rlj/aJA%Tk20.]Q#7(e@:JFC4S&pV'WCR8*bH;:nS1JJT"G=A*ORVLu[D`'p6d,RMLSp8l%6)U2RZM*4bP>f)j*[M=4i6UugI-bp%,`A94'>%#YRYWl>8HOlA_:I?q7=[He$?;YX8)TqR*VQE#FRjKZr7i"N-ms`8O=g3U,m_P^J,)#q;@P77K"I$anF!5rM`?+]6+;adoc7LUGBr%XlU#WG5X,"F;?=n$@BI(rfrs7XNmr'QV.`%'c5>#qj$e?IeRSqq]r_95CQj$fbK7D9XPKtabG=W^H`?>q5sS+:+YgN4@`Is2qRrd%Y':YA"[]g?a)ci1k\s@Gh7kr+h+Z8)'!o"%.S$8WY9R<n\*lS3R;t0LceRsub&:(pjF(RPd,U2+_Ei%c?/&+-%'/LNi_As&?+pVu%arTKGC"_-J-J-@E?T^FdlD<^PIAcp^q5<&npZg4F?B"U/b3Pa028%Q/"@<AseJGH+bFPQ#9Te.BDtBN/G>RR:mR[LA?C&_co(Z^=%F(b;<C'P/M/3Ua3oAJ6K8,8g+0NX3Dh\HU-a9!`KiKe3h"/4LSGcat[V(TW]DR-OP=U6=>er$Bk05J1rjf<-Q*j0Bf+"hXo=tT"[%raOG.S`?m&1J,N`N5.!YjI,2KG**7$/4YB$a'mr:[e'U@^TtIkfM)K8l&G#,h#c23m]C>sCrA*Ba"8X%M2@ck6"h:#C[ZOHD6[))%'X%Pk1<Xe%-:,$19IWG^q'AhF_NAuPaC`_E&d3F!U#"/5k/'i(4dQet]Gs&0(Uc+GrcrAP])@_O2]&&^ZeJ^j!48;'?%>lEOM4:n%E"Gh"`V5X>6mg1Ep+\is/Y&&8eE0YODXCb\]qjVBB@I8<&dT)oq1Bsh]s_5&P^dQ,<0!d6V=huhe6)W$IK2q5Q<;nuY,o[e40Mk/%4#^B5)st,`B/Gh;J3eNp`K]-c-r`<.#OnMuJ.-@%_Er>W]h?Tbb70,>TG[)Be+`+9<hWiK>:Xo,7irJ'>$`bWRo^E:o?cl)iN-!@%06_0Ta6puHr\Y6:-L^4/$(:PPp3ic'Y$Dj-[tV/'q<b%V@c#P<ND;/!=tOkt8V"VDQV?PIc"m8hCEL6b_V+JE;74'b5*Bl[+BkLf%0`-KOoO;\#Rei*Gg.l:[h2V8=^/.$6$qET>@9/-gAKl#G3Mi\n=?1#j5p0.;DhhZZ0:P%7UADBh5U<T0Z<8a]l<%>!/+U5`o3<.f%X.NL*+sb=al&%i],liiE:PZu;KuP9m-t[P&^[Y22GE/C$@^CM*?Whd5PQkSb7s]EJUT<@Mr^s/Z^3m,c*Cm.KV1Jkia$U>8X0a%(%mXdmX>6:HLXH[&''f!&B]"0G'mc-7g3B5o/Y75?pmo:Rtc(*=KjPK-r;BSr;T=!2MLY9t<MoU&1<hi)0Fli>b1**T4.WHZHQTQ.^%SABJnjdb/*Q;dPJ[I(Yo80F_E"e]UQWg.TS;bT^,XqAR.P5EksW7,eRV8$2])mjr\QFl8ep$V2kB]<]"D4k6=k>1-gV+BaBE7sJ.%K5+1T`Uql(=5oMrjj*FG)N:!N8mJT@ICl\eE6uGK;a""6IGMJg%0!*Y9Qk=]=.tpn/@STgX?WrB2`@su31;0"5VLi8rfGb`^5)SZ%F`WTPlZi=*jXR+I$'6GoAk`o_@3rSZEMH)DdoSfViBcT@%$.QNI*]O.D&e?P^p.)OW?O?5*t#EB_ijpT=*WESgb2)^OdBk!"ceq,%jSc;[W"&&am40Xpp_\8'gD*of-#'g[lSE^n\T:g217+Q`0\Lif.O:>B(+YKD9B9FDGSgA5-4]dk/V7m&GKBGrBh*T\Xjm]1[$'W)%Hn7Tb=@*bMA%Hh'^OT\#UtSEG-2=Vk2-/@g<&:LEq(gg:moNnZ9iMrnQ3/:QGXY`u<,5"h"nlSF@TOTJ[T[/C'nN,?7mg1j/YIXt%63p6k?oY+/q>Nr+^=to4Bt^/dbU?ADD!i!#WpS?t?I[]-c3F3,^t@%2M2J(e8Qb%[2_J&De.=go?8bMV#A2jQ;&3(l`^H2k61.1A%"-KFfNPIf(1887d6)?`=`mgUS/B4o0$-TdSPXn/2^XO$q:5t;I=TH`c7i8[F!=L!M:hc_7M(J9";"?$?[Nnu&b#-NjV83QJT33>f%Zr0m,DFk[$JVe?/2`@pN*)0#l=e]V/Vl6i.l2W,GZXoNSD2i:-EJTI'`DYAc7sM0l%uEj)#C5^3B"atnR9gHI&Je6e16#Ek5QmOe%1qf$F1aVE*P.2eVj(18EY+21m')EagB^kN;]i"H,/_$tb\E`K;>mHgI-a"7&\H3"Hjm-pZjlA%$SQh'T.0ebR.agMd#W.n=qsM_G%eSC"eDT$ZU'U]&h`DJA'$rj0j$_=S#59-iZQ+I)iB;u8[(b<KoYFo^fQOef#(R*e[!EqkE5I:LDJZX(0Bb8Y0_X@);\6*XTa%q6t%P$Oqk1)ou.eO""0G#dB0Esm\s],G>W8j0&*MuDAtAgB0>5$V;_)2p^d=$jf(PMo>62Taoeo<h8q<fRcn$Da$=C1ChX.m\.D;#_r6%+07S.$h@b*Z@(94(H-/Ah%H,R.?V4n8t+bs:n%P1PN)LAeE0$;Uc9UGA7L2GIk4ORh@2.g%c=<%&f?2-F=p=Mr">.V0$jSGl1Cuj%'Q4fQEG@q[PL^Gp@*ak^`Th's0reDX;.n&Zf<0^"AMR=_oF]Tm0>q%Q3I`FiLR!p`"EbnPs57]C@Mt%^D[BDc]*c6p=s:=cTuU+-%26sM4&]dE#K.e5#gb+3?ZhC)d/J+*.i44(6d@V`+ULq,ACA7--c-+&))[LjmXqo0e]"0QVfg,>FfnsGN5Vj.jWZ3`CF9C>LZK]sG%btcUor;9tc&iMTTFBQ=V@RMPKmR/)ro3=9-LIGZ-LWR4GLkeSagNk1Vhl6SLbJrg-r(c>-4dLVGoaii1Vfc"clu!g!c0t>g]6!9(%kFqU!#&(*Hf7!fY[O&k9YNBlR!a/lh4`#h-EOrYe?g:0(<+=1Z;.1Q(TUaD5XR6E^pF;Rq\_09NC_/ZI0@8>P[M[E6Pn%?>_=.pG%G/(Oo9Fcs`\UGj)`pQb>nBHaO6>kg3U40$g5GCh;[a+3>1i^#i^B(PZ?/'&T],@a65ffto8bX21Bd@EdYJfne(J<N(\NDS4)@]'g%dA,^uaVqDYc9"VX*'>%pj'-TY#:0$hM_AD6k:TMf/6sMobhU)k@&_,'19oI`<*J`495$5(DaLU1II:(#X+cH6^u4r>_@iE[dtK*9%45V(pOgQ/j\U5sDQ4q?]-e$]r`=tk>UqD/9NFB!Hr<SR:!+YH_2oetp%aO@i%g8uj^%W'I(;Rm9OCIQ/RfM`n&Sl7r3Y1ij/QQCS%h1lVFkNS1sd:SA=rnZ&'>\*`,LV*ttF1WMU/R"R^j^B=em(Z/i5+mNh=;J)aj\BnM-/iq2:_8J9LV6F4ZW"sf;U)0"]/V*%=7s!"%XiI65Sg[p!q#9;oTjBd\Q(s]5aDV"LS^A^K7X("GF_UmH[ZGcL5?-50P@5UN@okN.7eZj*lhl^B,7agBI>VfHJ[ScDSOtM;jIqne%nPVP3i\sI_n&6PK-dlYhK@\`[GZQ8(>sRh,^%C$\7Xud+T$PtGqY-7eN-GMUm[6<gJ,6am<1<KV&#1>$"Nj*?^9h"C2AVT2X,Z_f%!4o/!eq8G]]n?.(bsQ^'5%q-_.^GJ#25K$C6a<;1,Di2fAp@C5jG&AHeT.Q)ajYZ:Vg1$ZG?S:_4!+IiM/947Nn:_":>=lR0=S+W%%,_MKJXBQN!AsM!ZC*Os>40DAo^e!h"KhP.k&5/JXNL8.mRNDp!:2,=:l3Cbdq6r8ja`qmmhCeB*"*d_5@PT%OWnTn<,K:#[<V[i%pfM7t/>^KZ#BR<.H0DBA.iobHTlMW<)5X&?1V]<CQXRT0`_c$*RqY7HT87W6Y<,fS36?T^Fso;W[eH"h!E-"\g4).;lDX9lB:0rD%H*5/j$5XX?+e95s:LYq]4qu=OS5MDZ(YX4P'Y(h,b34nLRY#Q%&RDcWS*N6R=KmV)-\]b?mY>-?Q:D\mb3SS4+nN3@g<JN&0U\Cu%JhGO\r!:E`;stgIe4TSO_!S=S!4fjID2C;_g"o=KjCVh?7DVBQNs7)e3NsiloYN^-"9#g#jqhro(Eks_#Xu8r\uJL+,H?4+o=hiI%h*3Jr`Jui,c/hpYY/iI3"=k[\L'<h_5ud8*<(hqC=7@TcW0Yb*i`<aKlaqP?^(2"(7b>:(C`ugQ"8&]XPTPHGOZGpX(>E,3U&[tQ%WgC;r_7AP8m4nIGDmkfo6<oD5[FK@hYFL50Oaa)#]R.=O(`8S)$f'i(5J2Ko!=YB8,1PnS2,m3U]8VbKU/2dk0]gU.5+>7Q)`MFX%AqPOrmon(2)N(_N5R=TaeYR#[Qs59Eg*tD7$:9GmGmN^`['_tH^FhY*!TPE[WjL2)Rg!9uY\,04%JhR2.Nb6eh#^oo*s"4sY_SO*%]IK%a!*7[gU828+DGN?%gj9-r>Md)Y&%<2Ab4Ad-WSFIo;6ANrrGlBQ)4*T"j:C@#0469n$p]+<ANTjR/"H.3IdT&C3!<0s>ln$4%;D2R$Q`nE:pa2t+i)`u[YTO\th@#1VC:S<*SWkYL:1MJI(JlLtcCFu=6<mJn2nN5a)C*2nHfS-1MTkXnQ%V]S=&5.?*0eU$Eui,p%Qdl!'beAr$X(8&gg?BSY_af&6S`Sq:;Y=QRc\ih&Y5h#RKrDAWHb..3m:=%pNhZBpWlWu->'Ld\&7VG_DufR'=HP2aS'U\[o8@t"%?@Z'U4OFPM>bMCeK:><_P`YV_mgHO8^Jc_jA<D[dd7#(O3Yt2!lTW"Q5>.CQGTDe.`&;:UrO#J*LMh3tN+AdWiT^kUSZ>+k/HSi'%I64Si"q)GG;pn.;QS59R5c0SqT_<gVOS_Of7+nNjh>s42Mh(I_^/ps&dp/^e.G/D9l0Wrs(-m!Blq0d=U:.gU\X`o8?@0f!>TGFa%&ipH2]hk,WRX0_>X3u4[lm?][.ClJDi24L8CtB\2_JlKY8>#r(H#TdM@M8Vl%Jquf:l%JHKE;gJ@!!Bq(XDS?2HjOIDf=gNjb*9G%TR7Rd=5hjtfY+F0:t5V?+ei,A%$hCcPb&D@8;i/Tq!$PFE=(.2)WOH\^:)%#Kn]6gk"]q;bY+^2/[]o#T(O-7#I7BgC8dVf&hNj%%]2d1L4u\8IQfiT(..fS-%/ND!,7+l(ir&m]$":WIq[;Z)d9s$/@&#GD0+r8j`RRZ]H*)f868Nm5<k&9?+%`Jo>[HQ6jNUQ'OPLQT%;T-@^S`2R%=:V#%^"p,s#'H:pT#tYg9)F^7joI4fo=LJ.M.](3S+GntZc7[-J`50eLDs1DJ.;j#L+7O@[aOCN104p<:s&A'a6I*D%<MJ?nX%]U[5?UWAJ5s.U)X[r^;H]4+P9(1L!9a*EqTFHjNARl$Sr&g+#9a.c]_&WOeM1JVI_N1t<N*:R5eIhLb-/pbG<ioq?(EoM%.WVuq</ID,5\^q4o9*stFa/BaR5;FrIN!C'gi"8c6\F_;8><_Mid5tHX`E<6hHRA.9/<_j3@Dm&'S^4NiHA2(Y-.+3,->/J.b!#S%SR:*tiN@H!?\5\j]t[WeX<+>n98)D2+KtZXKhI`XB<D6J-pCL]X;eId7`bG_IC=T)\E&]X@!eO_H*+*HT,m(EaUr),0>`?Vpjh'l%?_+Z9@.@O))ni1a?rBu@TW`MDHJt06Q6:P@!a1qgG.H&?8bqU&=u6u?T'a3+<"<tVY%G03XkQSmFc.&i`H3g`Ep68phJZ&Q\B,[!%-D&jpY-`rT5b0;5L7h(jf?aH8irY=2`GFN"B_;Q6e1cE#Q3X;de5dL7IOPWI"hr=ilNp:$kP;&S/N8f%gTl[um`*Z-!"dl\X]a_'%V_<RdGu@oXK_@a_rOqRN5p`ACYP42qS3aGFfD0bkj,D!LF$Qd!,\2Zfnn#[^d&-s+bO.+<Y#_ipqjPiBF+%/.<l=U@E9;nShkA!h%fRMsW)]fP8WsifW,CL6]+U\UM/]"0]Ll5/0J6Nuph6N;\-&_$D<`BTFL/)B-c\jqX6TDY+'fW-l8B@CYc`IbL7cYh<o(\?!MXOtO%9_,[CdaRJB(sPJP!<+_V`;[=`,#a='n0\GeEogg`#B]:k)d&C(iU4b3b4YdOWu7>qi$$tdStWe+0j$oCl59*U7S[^V-oo(!PK>5X%M^&[FnVUa,,=[R0Mn\^U?7KP^[aV]nQ1gS$B;>,K:,rNu,mhgGOHAGX=`G!iBd_DHa@U:Tgj9U(`uWY>DBWg.dcGuI1[WRXcl2S8%4rLX.VU*[_cE'G]@nHjgSGA4X62M[+l.$fSdD3tld#R\6CUC-8q62K*Y4>Q7=^e8J$334Cq-X3KX`atlQ(%$FC(RLOYJ6U^lEEss%b7">kaNRN>FD;,@?d/RfU1<1'HfYEu:T;N+[L-Gt"oE=l[!d#ofA:k]WFa>b6o:[u?tBb6!UGh<K8PNT.!k&=#?7j#G@7e_mNai`%5tL1<_WYZG>RaqYGYhm,#;br*%\_(E=:Z`EnXWEsTL=iNP\&C((/+5F-3+es['4u5_$[c#$a<-0CtNSA"/c8W$2lQX\Z$oFg6V&'%Y;G:,AL98^k^%=iSH5LOMlEVGraZboh;JRc2X=VFh\W#-DP^<'P6(Mh6<b"4;RCACe^FsUDI!8)>H,0.iN$WD)SDc5_%KNQ!#'bh%f5AmZ+'4'//FH4g[FCO`"rrDn*:hMBrHZFeEX5Etj*3/RA9=,6+XN%3'^ai_$m[=m3r,jB]=ClK;IYh-oG!GU10@XO44MQ\?/D!#%r7@##rV"SZ&l:iXcb92bO1eJjfR)0_BZYPD#eL:1ANOAK%AXbX:EJMG<@GU8V#`%g9f=A*hbW,1,.J9Y/'MSq@C&jO[8etta\tI:%%*[n^nWRcEDHBeeU1c#h/^6O8SJ96[QE*F>\#IPs8S'[&KlmgZ%3Cd]A"X/O$1]F/_bHakPpEq[VUrO!"_ol)#9#D&7Ynu>Zr32;%*rrl0S8Vf!mK7h';JfTV8p:>j=L*WYPo\L&dK*RBkTi'K2?kusQKmcM4Qg`jVfITJGhkZ$G3l8hEo\[97!@'df<%28$JekF:e$We%r1L)E"Y7NBR=_u2c37`q*@7RCAPn#aYCb$8+4b9=oZ+OFQ%Oq?Pi4G7lbb>?;$!S15YWg^-dAn98&%sUYtgU2LDXm&>V;BBJEYu4%(8%D^oS!e$3LN7=QoJn3,T[.0*baR#@.R0u/:__D>V]u)3<gg<8'i/QFJ)Oc=ne2gM]p]8kKIODCF?:=XW0orYaAQP]sHsdV._DC%'PZYo&uQ.<URJ@S6F$)Y14HI#<7)T\/nVTC(c@;1AZ68Whm0cecLcZbWgm+!XU(\FiT6(6pZeJt#rFajJEG6*OB;U-D@\3:lM534%WhBL&DQ$$(+7`-N0SU(bWga=+Q#=/uB.OG?n'TUSeB]L)4Fj7Od]_#-@Qq%h/I%8#F`.G>WU?]T-;HOGAAVlq_Gmc0p0;@"+I0Js%VSn$`i1OnVJ\j^79M-[?_5!G']Qt,9Sp.0LZ8EOMM2EXl0hT+4/V1pBjPW-l=3SKJTp0HrP]!OOA!m_:[[h`dXR07O@mk/#,dOl-%*@0RHG]NC"T27aWW5$]7NPnS?:b6g2Hggh>QWmG"6elOZ?fPp+Qg*qn8n*9c/eVC&%#!co[bj%,<_i+)F6d*9I!Y$FkLPC`g>)PH%D0[a#SA^9:em0,8T:.:4>U7:uGQJ(NIS]C%]kf'RfgI`HTC1NR7UE)W$3AMf')N-L'F5#^p26q8T-h!j@tU>Ir"@&O<pSLmMd.R_%=td%_okJWMYgjq!$Q2_--*cYC1k7:`>^5dFS6ObFaNm;\OmLk,.s`qZeujcl%0cfaiW>f:pA1moHo\_c'\<*F>32V<IiI,qg`HRl%G"U<]:@]/#\LE-aLHT,Hjh.C4H7$l;Jr3Z5beeHZU"%bBS1C*mf<;3DQ/in\)??O<3u.uC/lHb+pYeIFd.U_S9gn.g[@M(=)?D2O%XZdOMhBaJp[SuAeG&HdE.^:h>HpFhfGGF5JFS-onP(&=,pK'9Ml9P3=n/`MSD<LU/h[l1'5YI6i97WDiZlOE`";FQMk8$RG^]AA0%FlDk>rIB\MCD+'Q<k"#S0j>Z'a.N2%-)/(@E]T`+Aq_U!g]VJ,LMPXkF%b3q7:TeM0:DdkGXLKqFmmJm:*0Lr4e4]AB\hr8h9.pY%nd!K<b>+ZG:QK?S9f#:d+g"[.A%HP:kJDgAL'6g;ccO5gHp#/YeZ$'kIM/pM1t<%g_US-^`>[=gb2_2fr7)_6q<E$AiMt3F>BNP;%MatB_VdNj'h51u(3FQLBVUN.iU=qW0=a.G9\%+mJ2X4>6!_V>(O4S4\*5CC6^S"?<g2C#NZ[*iY%_%L-V^nN`)SSj,YiH/T1s#th%,G]ET']i*9Q^:F;VGb)shlbF_nC6Rb<h0F]T^FFtc;YTOeEmMjmCZ]XFh5>T#]Dh/GIfg/,VF3'9@PDd0b^W)V3UG/`SRk"Ve[5f%IbUaK<-NKJIeV'd;ok/dGBZG48"<a,GeX$C=hO+?c`B/RW_ZDjRnhE?Tm,q#,]f=b=HdqCZ+'^QD;FFt;-9^5R6+(6%MmW>jA,.f%@BJ!D#U+HU1q=nW\FTE$20=/Z8K;@e,j]VqUsja\:L@"^39W3J2a_ohE)30&TgUe\MdXfB\#[huSX,+reYep[V["=>h)F<bdaY6I%`JE6fEl&/aeEIQN9+X"P5"(31@qFN.e"_?fo\k6F$s'2>XOkYNX)4cBm_qiJY1#PnqP_/Cl4ik7FaKVa>uc)-\#_[Y+3rVaHJR5C%+4t^^7bm>MQ(b:dK(WZddWiKNHEuo0l0SAa[aV^t<4co1<0bPHa"6a+Z4ZCt:Z)#^ZWoCsfkKIh_V')^KPG:DJWL>BG?71dkoErN%RQZYScg<nb.\P8gLO%8U)juH9Bf!#G3^pa'>\W=!Qs)qL`g=0Pqh@ifO,94RHi\E%DX%omqt?^;r@Pk@WQ6`0JQ4.A44m[l_)h<]%4fh2F(@T<H,:d"8`2i8cfP,Gl-QPSh84s'7.?J""<k(AdQ9*hFO!5oO\DC#Q8s1O+QnKHt4'`O'Wl`(P#rAADJHk[6U#3aJZRAV_%j^h#iPJ;pBR/T3D^XOQt8lL_VECft.9@%ulqeD;8WVsF:Z?L.e]*hTHd*VJ:@(bSIX07=`JiQq:/'44hrC1En1R-1J%;">SHe/+[%ld"DAIa+B)j<"IIg[EhjlK*s&f.Qa/D#:UO?b1/i?Uo4*j#(^%DHm"JH.LZQrH^BZC@5;SQ0$3;roTIoIIA_:j@ltbeegh=m?$pb%o@N,5NO/S0?!_jo'T?1B^Blc-F7rr_bP<aEY:lU4bbFfR"ClA&oDZI@mJ#pkn\Y!8n%H=2D"Uf&0`]S>7`qlWkV/U`^:!pnigR8b%]<=kK9*^NYp)%#6'Mb+(mFT8Nc9,h8[4iD(>fk`0/@A8Q[T4-AoAL/-f<tI/\0HJT75mqJlS!Uc"o['6qB[me@5$!e"Vt3sBJ2T7%A.J5E@O6Y$1B4D7Pf.m*]QgH_-=pt4YR'XldTkieG:/f6i(k'$X3Ri607a<8s1'l<D\ACuqkGd%$L\Yjj3(Zi&XfBr4%I?e[MKS"%aM:4p"55aqrTqR"ZJ74>8oKK8\]ujZr]6N`Ig[uCX18<,dsOS$^-j1ML9'bWff:s]VAB:WB^%Wmh<I'rhVHq0$H1")C"k)BEt%o4%Z!/XK>'?IFopmFFMn2ZiVo>+-e+V5<K%;BT/>3!GG+10/(i'(#UjK2:e!3#L:'#[MiWahTfIbPND)qjo+OL+[D*#@WZL&@A11(c[%[]gtChmQI^rHGA*h40C<SP!)CU1%)`QYefQ3e_FK:oC62k*405p5AKGSqrZ[ICj,ldTl3cf]-5[V&)=e/%9/;%V&EmeWoAojqgGd%o4)3'kFg6=mRt%pEHA+#ctld=:qfKEAZ<+R>4F=Z+ht2Yg$XXMFkKke?9!I7fmb9V(e+sJhP9JnhEr0b/ZL#>9>\K5huL29+o0I\%#qpLQP[L<iD);7"XhIcQjEgr%Y8HTRjUddqp^d:DWRmMsIPt$8%"$[VKDT]!UC?t`*'>i>,A"Bbi'u/K-241sm=>h=0*qgcl7l'S%VEuHu#86*WgQ:95#MP94Q"1e4A%2q<pLHG$]L1mFBdUS@6@/QD=?LUk3V]Ao^1:<7*39^cjZ*bEcl_$<K<Rm&=IXN+625(YKl>KW%5,c,#RH@;R?SH*=3.F&b:^gm.VK=`%ARje9nZDY%@RhK&NQ@nDC[^f2$L[t)hD#P*RsRp]8+ON"+tI!4cQ/%&/0jI`OgR@To6IJU%V`$7^l_uuf#cNQjp=1<*&@a!j*c'Oo=&ehGN+Tc/NrE^mP-is:\:=[PZXqnBWtP6g/6?EEn]n?g`r[itF'V#8!\L'P5hgWU9CctP%-'l_i3)J#cd3[hmKkg(/+]go^fDMNIK#ZTJD@CJT(*)IJAI/e6[VR`ol[=q">i'\"5Qb2KSmE9hKY<W<nnVG:mAQ8.S3#4\-8dtF%:1M:d[lV+cW2d;kUj3i)h,3dQ6cYU"+P3g<Fa3?1(&>)2gS>\FJq,Y3.n?HC*M#t##>D&XL=U$*Rsb:1M$rSf41db1;ZB;J!jE+,%/B>03f+^(b%@Rq)^.Zh*X4W4DjtJ)sUJoUt1W_VO%V&m1DQN"a/)#k,PK"FF=m:lKEM1Q=$lg"6"VVZRAlk.)HOqS%%Y>!kHYW!e%q/fm5oP2H.iAJGe7rit'aa%PUUpE^>1km0qCYs//p*uUoF]e7%>;YUB,Dq2]c>T(7/n@%nOuA=VK/0b+c?nE)6&.1)@l<]'Pbg3Z%bm3UOo\.rg]b09FA(Gt^Ql'TE'*GNhIL9S54e]Q"KFu+EYUu<>fXTZ*5)(L'cr=1Abp?]/mEXZ/2V+pLYVSMK<E[!5=EL7A&OT^T%O0udK%XE/TWUB(kUIKI#n_DABI1eWrU+2IGH*X;G(fWm$9Y3"_bCLLA,o@!'M.]&7&MBa*@'O]\e1GYE@Yfi%LZ5W+9pXb,NIZ?2%LT]qJfft4()bSkJ(TNDj;JS#d,W;DYG;f5=!%GYAkTM[)@,o`:RNRVh"#1<tn'u$$*4VsgGXI'>(9T2^L]KUI6C-EYD!tjfJ-.G5%TVRLWYsS;m2h-QFb(6GJ,%"#CCY%S^#i6'LVV[:aI"@@aU+-\pb*0>jn'=gHne$cj:k(DY0k<.8^5Gc093pO:Z>p(N`[.3Ybe;&U%9Dm/D`3#"Ud(C\UD-V(2C?NY0-"s')CZ"'7*>oBr;:.H^lL2/&'#i2\5\T6+Z?O[>SGs/?-(ML!_bTWZ*V+/_'[$dj]@,6u"6eYf%mKk"/%JFa/WfH'4koIXch)g6')\4Z@^-75cW&Cr@`s-!#NI`)j.kl2dqF5o"ATqfgV?%^q3"t+Jkp%VmDXVX7Q+sQ\O[9-V?jjii%c;eK0SK]W(TR"3jR0DPOTWOSHe*G,C>j5q?:j/[V<?g`W]mjRYHt*16VhmN+?_8PFfXV?cE#AX\0D:2VlE\usES"e!8+92`UStM_%6l<KdgoO]17rLYk^q1>:]iQlQXoq3-[J+q3/3ZS\G?as'[+"JE99"ANhl:Te=aK-"A@Q;h2^qFb.a<ktXeL(s#sI_k0@.A[O;t_M%UXEjo-%Om5kFIKm]d2);Y2jYiHW!dsrBXZT!c+\8XMC\*YYj:/TeKKqat[,[\:1Uo$9uKE2_K8"Cb-Y#\ApOc8p+IskZ&9OS[Z/c%31BWVU2`#t(\&MY!tU$Z!OV3B\BG<b8%\?;d;1u8TWs>nZn'ePB@R=PQZhM)Qtmefg1NC6IeG/)d9nI?*6l@PkMFMIpKg]Y<r52*%ek7a!mc25:=,q:;OBNg2I>^fCh:A:-Q6HQ[.A;g<iYh9G_fquFX)U(+i?l&B'+/-GX<k*rc^["j$^9,CIG!3FgmD:Dkd^8i&*CQ,%>W-Zjad0AnLOo&/$>UQ8.DSu7@W.pE1#&r=J["Y;@'l\re74LC_LgM3(4'N'$t3)0N\'Ag0dgZ@i*/#'pY]>qC?6l!dZZM`jtF\L%>C<n='D#geVP#KYTJ7F#GiL=_<?J:MTfmk_lM"%O%*mVjom>>KPq;PW`DAXVqE:Da6g]7f^XlZ:A>-l(a-MI@+&;fG=VaW74da[%%0tL9lhmism#4SEs5)^A7V1i@ATf:[Y?t9aGU.;$ho_LFeX0$5#)]=-JhdU91!Sl4RMl#[lE7tn_@4cJCitBRH<*SJP;//"8%D_.L%%$)Uf4hYN*QkWuB\DY6SqdJFRMMqh<;Ug0:\7/%`8M%i=[r'k"4e0SNj1*=F!.+)^`ptmH8lM6bZn6+<DYF?ZmmcF:TWuGp`mO;Z%Lq"/D@/6#Rp'1/R>eFq3\/UYqELXprk88S^TEs-m"[[0)p,bXoZ)X6TgJ4;Y2O9%Z#L_idYB(<DU+s-+rEPbK'GA_GF0=Mm6g't*%-YjOhi5a0;F3^EdKI2mMkF=hn1:S]n6g't*B?V,25DRNEK+@D3M<*#DB@)WK$]^WBkF=gCcW$<#%\7YFh+5!4QoT96)0B&:h</hB%SBIURj9ano3G6^Lm8r<0coK%0+RK4\'BjhSl=N?J[5r@MOCf_%Phgps$o-0?6Q1rV10W[628i)tXGW#]6"UoHU1?nmIbCh&]&Lh,%qgBjt6:PZR2P*SpVU7@LCclR9)@4n<c>9O![Rp]ZmIA"L]Jo]`1\@J]9%f34M]TflcR!K>_$@=TS7FRRkK<CX[*6RMfU,2O)3UKP%b%X\LUq'?/j,c#4#^ITGb*\kF7Z6_QIGh2kieE&PSAt8o?4=;_"aBD^&9>o&M_&9"gQ$aUMFAfOGfajkTcicp?C:*Afi;UPVEbE!%W8ZC,Y)'=n"ka'`GVDN8V@5%]Rmq$:)=n`ed63t2r54N>nTZfh`AN"uN8A/5(I2]iZ1<ueWoW]@O;N.G+G==\"(XFYA\1"K+N@*8%_tS!)j<ao8Y<J3]UYE'-F&KWOo>#0CC4":&FF>X"Dho?MNfhB6FO#A=0K?29LEo=CcJ&g9j#@C`OLbhn1%;eU.@Tr:9eJ0i*hiqo%HU\OCKfY#QImQD!X?PO/Xc9$rIJh+?;Ii7dZJ-+JNO]oF?81N-1ZP/`gTZ3J0]mNmJd]Rlfe^V%]8/2kC#9n6O/^<_jsHID^(-&A%4'QSJk/t)gGNY/X(?.";B+k2hdFPa;h"^leN4mhkAEl1HFee6I[S=9:#Isk>%eI8MFZ>9O9Y2Xog#n=(cVT80[<V&h5"ot6FY_Sn%@jIXq*-A]e`bOKBGno[&(BBQ_3]@mW(8:Z+?29X"7md$hjae4(dlu4ci>muB5F!9;jmlO77%*<(8K:jTo.fmBK8H`*[f_h8a%@Gk%_ipjBa2FMl`pE6Fp#Khk#7Xj.::Y?h,/[h[ESDW?6CnDCd3I\=@@*JmT%rpDSa^1^a@&N]1;-&=8&gh6CcjJ.SiecO=e+R#iab/,%M8d,lbqXc7^;EN1&:l1FT5ctaQGoQloUJdQ!cr8BOb'ttGXt1@dj(XF7tqmpaj59D%]qiK%QWuQ_(IE5cU2`uW'iQ*U$gD8KMbl9%Em$fj<L/o6>"qE!F1&IG8Rgm*R:ED>G3T&NK9J>7^iAW>d.6/AJ;,J_J+T/%4Z.Z3hRaI-@8c=:B?gt84Ri:oN3HHT]K1s9+HOp&%&2@[jN`oUX7ug>@f@=XHe:V)nd87OJSm/-7QCu^g_gU[[55]dfh-Q7]9\nn'iA;J%B>fcOi,,"qk;gjtXF*!c4:@O-2W9%nYqo9@%jhnW?$Vi#j%Vk%!)0)5d_oRU#Z>q38cBFru>D@=sE+>D*1.FGI>VEP-KbMXbP?4S0,7ZXS%WBr8jbnOJZQ=u_B3G`%CD*SNnR<\B%:!(a!<_T;n`g?,;'W2s%k?OjG!/[tdd8<!kT2h@X.hSjFEVFW'P0#Qoal"m!dh&41P3_HT@X&L2qKV2bO&`Om%D@;$/e`fH%'NB`%:k/>3Vp$VdHaK^fgLUX/qeTrO50)s[b7J(9hHIkK`_-t+%2cK_R>BsAq1)Mib@cd?4%eA))_ADeP4OgOSg(qsOhbjI%q6M5UU\$=%ejk-j0_Ghke;j?6Gi;rTs6"u!4?eLFZnPfU.Q-,!3'nQ7,F+^9l5U#gAu+9W-6r3R@hKZYYa%djUr%Ma8S"X6Fs`?6$JWBY#224i%lXn)L2XZH3Ue[;C@DlUmhHK`_`eh.sSdOYj0/g(7394#d-c7q`mUN-2=e,XZq,B=4N(kW6%\@cQ8;;2$CogSqGQs:cA*V*.Kl`'+%(c)oP8hm]sXhJk^cb,eS?U=c+p,aMUoBHs+qAAXl%;ZI=Ub8G>f\/7o)uIk$Fp<o]c"$,e\Sj*n'K1^U*8P=4:8d[bB'p@4lR!Uq%VeOtHSFu8(YHG)'!-P,"j4:>B8E;dmXu8N1m]kACUV+qp<iW^Lh</O$qn03R)_AlgbqjS*qs%J#Hs[J/$iB2b@At)\PtK$J&\Ndi%f%4@G6EG1JZHpX[NTH7G[Q4(iT66I5aIesi7lDX)D7%S`o^6?tVlB*!BQK3C96RpiaKQ?@X6l9kVaRq![*PraSM;LV?)K?9)0U@h%S?>e3/lmEq<')rb]-VC-a6L?knh"IbCr3DTZ5X[hm<!2dUM#p%L[O4"8.Qg0P2.1Lo$2PV)0UD@Y&udO+5\g/D;02*467)]gtHoY%.(OBpY\/mP74tjmYj:pjA59s]Q+KQ$A3/%@beA5A%BOTla()/jl:lQ8Ot5]n8Qg-VV_)@pP_E<^Z=\+AI$P[?aK8<l?/nCtLsD?3%.m$a\V@%2^%Fu]j3j4Ch4]WZM`\[=MTYf_4jpL],3NI+1\77DLS)gZ`9;\3Lghr:m`KM`=Enko,1<,:uVRX?3>p<q9'T26t^I/PN%53pB]FSd`2^jN&,mG-]u7ttR=\LMq5VK<jlnf1G9^$O-!f+:O>`>n=BR;=pb&YeWiM.Y6$qbqP"XDe+79K&H,[QSpQk@_-cX?]^.%X!a3-LU1@`q.r*^bfA%Bdogsca7*9EACF[!+#)#MZIs?.;:$!$VR+FAF$)s4XDBpFYP$t^l)\pi/G<C7R8%=Z9*[K$A@(OM_R`u5%X(^86A^af,Xsk`<!nhZrXOV8sdR:D*XE*P6k:'+NS'FX2Qi6gqbbh`>oM.64c751+FR.feZKXL?n;`c.B;\s/2Ohua-QF(8%YsCs%a-cU;3eu@Z$"hYSf+lN+F1WmIHT%Ep!tJ1C@qO1mXR1H#*ihkEdlHSm:+DaYQGZBQS'DASJIpZ`j(HioXo6@Rdodj3GRD\@ZK\H6%^f1g8\SO=eO@BXDXGg,R!GJauqKCdJ#Qc%[l("rVFNQ<nBGXJ(LYH:iUYl%X4nEN5,F/MAG%#T%SQ5H<l[=/`g'(6s)R/t.#&DDG%^f,MdS"stDU5m,kDT2e_]HN:"r&@d.@1PrdQGU`XG/9BC#%0LRb[F<mTbO)QUi7/--l;o](!AF;6p'J'BX3C+Mn/i6A\Sl$%H`,a%*DSH@iMY]^["o!CMs`^H,?eAo2hpd1N,.i4f$!8GGM\lFVJGV>NDK7kc(45N!W%`B`_KH1Y.=.Ee&;%5g]b>Y+c^Wg*U^IWrM'[h%F-YCg,$c#cVG$!k2RCJh.uL$BpQ)rl!0?43!78/T5+V=Zd_!PW[76!p?BU1^ZT(=Ec@A'`OHniL`ZaQmqMnOE+>SbD:ZiDUjSgpu%HXYTl;1oERrNr4bnWr@O:TliN<;+_t?DF2Z@p$S&=OBs<0q=&;kHJR:q'M:#LmQ%$#e@B"G##0jMO^1*l#n&!W'&n"3;u@1U\?$/%1pOJ9"\kBP9rN&q3Y`2aV<W8bq3C@d*ZD.B1GdoF@2laYa$cbQ;c6U=V!&:e%/&na71\jOo6N<FIJ2+m1/lE[*a>/8J=WqO)EW,f%MXYS;+o$#:EDMqE%=XD%5C66b\p2ISOTG3:+kY*8\)qFL5er<95'onPeB4^&D\\i2hN%Qb>1TsY:A6"pg#$<+n?/iq/Apf"/43pY%>'(DQQ0pTdaYt*r/Ak9=E+cnog3grsGg"H]_qit5O.Pp!*,j!sm,cd_%<iJr.F6P1`k3bhP;h92*6.i847'u2fb9)Zmdt_"9dI";%`[\XC4!/hIn?1n5jM"@0OTh40hZ>Lom;">b(V#lo-_JOSQg]BTm9gsUi&VcL)f"H*7/(lE0V:hFj[a?Mi<Wn28PJWb4Js#bn+lAH%nG5Zg;a)1DO6a\eL:8!k9I!HZ4t1,ilZq:/_(9IXb_PShK(>;IPRf.t0SUO*"WP?`PrNJOb?Nc38PEa.neT]-G>)I\#UVQIP5F*V%>]4VGQiadsjqbu`U/WQm`DA_Jgf?9`7E:CoZ]`C(EH9YohO/P'/G([p*7m:-UT"=_%V45Ept%Zh?u/`m4dMfsdfth$epr+-lUVkI%gYjMTB+VmFIJUNFj8m[a;NEWbr@+`gb]qn"WgDVb;DE?>;dQ+-CZV+p>()<Y=\FBSHfn:EhsFp]*FIZp02$m%3d(rL;goV4n4n0[%opm#liP^H9]5tZdb)eWkSM*.]l$!c"pTU(7n-l:1H.'-"U.VLjB)\Kn^X<LJRELjC]/7/jVeb_s$2[Kl(@JA&VhuS9F:[+l1\tj1%&)2t/C>*sU1*7!6$mBjUZ_ZD%QnW)3Y(V!?=M&A:*,h@BU'Ar/3=YFjoA$4loKjsO>(3a"LML"7$FC1$bAf7R"fmU?MhQMI::'hP%e4Oe[Q`*iRDqp`WGB@]ZBr,iM23QB3r49'1P#F&iX'7=Mm+[auPR*3`M3lb?_6t?+9MmQ"oDG8UM+I^??.,frWgbj]U9eBG4rI*"%Et=d//HV`F<fFXVA`p9h:Uc^.=f++1HUuZ1)RI^rp)$tE5GXH[;a?LTA#;/@\?Y+42m\H&FPZItiQd]>^9Yf+.XO;./-F8=a\&lK%Xn&'Kjq+<P9M_EX?1Z]']l$tsN_ruTd=Vp]12>YeL1JHd>iIKt[.&gGpC_sj^$lM/>4Q>XDON8aX30JrWf^Re`q2!H=KeCb",m[V%Qb5'eGQ,P::NmD;:`0.6cn=!B'6#Th=("/7-]`hu3%ti_5?@UPQ8OQ2H*0hKK*UN=g)10IO;Gi[ZW\@H0^,mR0cRG)R?fa5+i\VM%#Z[G:1!nGWg;m5.f,5QIFU,g;4*rnDSg-MlN<<]O*/9MqnrV7sP5NZ.k>Y+P4Y,H*,d)u7[n`ikH+TBe<H$@2Y2k4X8-PO)]jT8/%G+Qu>YTK$FEW_mkY(PXqB+EMEX]`8(5jLBUJC4,1$)M[Z4[ij#lr^6;#[,Ge3g+(5TeY_WNGY,i3Z/>ak&uXmrjYGk.mMROHS1A7%`gh6*]j],rkL.hhNg#O4(`Q$_[abjBEWFJsn(:cn\2f'tWtI2r&2sj@7N9Cl!lW=a`:,-9A-(]PXI44SERN_!ErZ<f^13K\5hm>E%[rZkdZN+ud!1!L!>BF7[_W@!akfH:8qaS7r)qdk"TVe,JUD\bXfgf'snM`,_KBL-G->Ufh;EbIAgg@RUcg6A_4.#Le]&f<(_Ru,Z%bsn;KV0p@eHoq,HQh&h%V)HFgq.ukZKJ2G.d?JV?P]kEEjbt@le6nenrLA_orbO!$p\J$u;>!u)$(MHYme*'rfha<qqValtIeI)4%-0oFMB1"]7lfS\<EUS&JHi<Tc1jZ4[=S\5RF!2NE&j>%9k8YuU[D#5flXuCl-K"+_\P+X2BLPY]qqSl6cLFR`kPt1fIbTmlqVh<'%SaZ6h^&d:np\JS(=h/Ue7]>%slfUFGEh%LT/68tB<^.Bm`kL'NXSj&Uos;?Hdc8#ic84^VPr=Kb!Mm=35(Bc.DHmt*c?g84ot>eq%Bl)"?rN'2M&o^'\+!7B$F1[LZq[0]F7@,D$\_&aZ>Q'N9Er::_#fg0Jj>2TUIBT8a:kA:67YKrOrL@g!"7n:1Hi;<kZb=o8/Ro(\%?9`)Q*Bu(A1[1I->g]hFos5R'fb4>_]me7AJBN@gf_>5&hs*.oqtOE:B<^jbqc">cP0G_%YM],#&+o(fIRY4ps'@p<q!@4HIMO;-%NHMG^fNDo%bHekZs5^lXH5+E*/pmi6#@TCoKNaX^-8UHD(tm+kK)pUd0ns;[kH$o2g:qmiaQfb)"^"l_kM'e@[9Gps<Xo_(0uk54%T__8k\4p&>c^2Y\n*B^ZrV6A/?bbi&B$'5np>c$*nsSBrn&tS(bo<LIZ,:rl/&']NIbPgj^8RdO2LYP4=/ZoFI"k8l)1DHI2_/`X%IJkKNYc"PZChEX\mH_6p&ir7dqTJa3c/Ao8X5DOma7j:`en=^:gL725W#snlCKgCRoc%%oWUYCj^4'Rqdc]+Ts0mFT[^U%slcJgr%IJpVEc-aT+ol?YdGP)p*\_:J!^[9SFq,I0$IJl@;@p^bLBtLNs4aQ5)lKe1ud=_J)YMV6iiS%\9;f2M@p@[`3fSQb[j8>5sMlrQ:%laM<=j$MABnuqodD==ao3L>6Gf5KNYib)iSIVrN-cg`=K]W^5d$*f[SM*'tf[s_>mfl"Q3hXkrukAn)aNDl:7o'OaP@X@=f?_*(3%K['*s:;gF[!`DLEMs[)YD/foTFAKn7XA^M(9]S-6O_o1m92h<6GWjoNB(bFi*:;oB;o&GQn)(gbn,M)hf?-ndQLFjZ^KJ8A,3^>n%VV8NZk>R]Pc-iY@Jn(;Ehg"n`YFdG=HMO4=^O9X,AU+!s\[Uajok2%0rUK9qF)g++O.SK/ouEI&+Wk&Uq"*%F2o=;cGOMF`n=07:%Mg#A,#4M8>ND'83F#RF\55k-9cgeKZDJf=bhYt*np#l=."2CBim*G_1_lXkZ?6"<;im-kldn?n$5"]`(]K>^7rj)"%?VV]sn!5TF%"+T1BI/39P^OEia?iRi_N(;(8c;V2jh>DEQ@/8cLIJ2@K?^FQu6YDjGkH:=j0)iEW;faB/'\W'5]0FHd]D)-1bO9q.(n\GO:[VR/%V#oLW5.S8qgV@Zj+54*2^K9=+s8=gDc'9CJ]tRFuV8r%A4=U^Dc>Hs<!s,_dJ^f.3+9+#"Ngr8=nPe=WEB@^A*tH#3kP"B!G,9[?%4[-5qD;i9k^YZSFCB(>YWtu:Ms6Sd,0;%ZZMHnT%g>pV/+-4/+^E?kMk?#l!girJOX]l%!rEE&$G4"t0_#@r#Ht6sCeg;me:=rbu%Q6pFMD^S<!")B")hn-C@L[?nL*aH9r-iUFFoS56'+&;`UB(c,Oiton"0<SUUm>QD%E'Q>LeYu1pJ%bINg%DlDM2_&lgG)H%RPDu=%&s=.$5!3n6A)BANlKn$5`r!)DIf&N[nqCH>XQ,WupY*dkP'2nd;L^1OI95fGc0C'16mFhjTU^6a$kB\[bS"d5Z7"n%r0`R!moL@O%jYubnaeSc4DR'*-jNk5"qqB$>M\ka+=U&/MQHpX9n8[F&`MN7NQd*oFIgn&I^3EkNePk`%BVH$]OYq3-mJ5dB,QD_'H/]nempA00%rkmI4p`Jk5Hace[s);,U8,_P,ISmkhZN'K&mDf'E=I@+o(Zs/c&!'5bjb\aG4WJ9uraBC/+5RuQ!*^J_O+gpZA/Pj$HJGb"e*>R]%*Zc/XI=56?H1Js?6GL5i6CRlHd&A=E>?r?7,F`Z^UKh^K)YVHmY$\U7b4Rg^k.UYHVq%m*]st`Oo?A(Hrq4i>ri81%O$.>EH>B0\%Bb'UXNI?*D^kJQFYi&"Bli'J(s,SIKb:Q[4:Y1%p9g1>ll5,H42r;EqLs<koB(a4=-^JZmIhto:p:m+l&"YD)m`sM'pMTE"W,hXH%*?G&"DZ>P,Ip@ACq#2"TpuBg>mD=@*%<ci(pAFbYi:Lpih4jN8/fS'WqsF4(X.fN=H/$nW+7DFiJ7:/OIf-/DZHiRV#WfbrHY5%h%]`Ia!m;)U_j[Q"`5PfW"Nr@#W4!SRRB.%<_a76'WO8ctVW:J'K>5n;6h\pC$is8PEF#iu8nEe6LCR]fkSA0)ihp!l#)*)ch7co8S%'/kW3ELh.U5$m)\5PecQbA[^RD9oc(K?*EcQ'CA(q8^fO:V-D`YJ[^,q<2XtY2+DCnbgQP2UC6ip%tEj:KGd=L9(.RUY.-aIs;Wl%p.']:oLc[IVe(R7;g`Z)f"QZQ*d_l!p!SQOcMd[i\\g)X$0N*G)V<;@BEkrWHum5nCYRf8>e%#GbS%==/$96VYKOHI@Th%Lgms5h%S(/<>$s'##E:"dJ2O36VVHFhMYK/0JP+gg@\&t?B0[lQ:L#:57cXY-fmZ(4RKh"W<s1>r6.p0sjJ5RCSD[*R9J-k$VmB<_=Yple6%4f=?j\?^eOf=0mUoBMD133O<!%WZ[Y^lo@(q1dJf!ENP>lq"moYPn"Nm*dDt]$W@naV>f6'f3rBcb5#<p$=.fT7#SbCL/Spq!Vjr%P]^]"Qc!7c/oY$"\uZENZi3/_nqU9_c2,ROK-;S^?9`i?]^>QXc]\=.`/*^3qi@;\<$g2jZCV>`39]-nX3^5ugTV2P//;U'_b22<%5Q6MXY4G,r!(b/^-WPS`L*"$\IZhu0)uti!RO9%u#(85@S4^i1g1%AS_klIO'rXNGiF*:N]^Z#ckOn(C"B?LK&SV0BO!!0$=!hHs%_Y/C[H9W>-g/Nn9%,d1O)Yj!3_rg37=6JJS48HJT=[+'`]fWLio2oV39BE;qbLS-g*B:P.Hoo:/_+@dj".WSd(r0ChF3.,*+i0`Y%L6,<!.%mY*5BZi)WGV>(d:9(FT.TE][k6t7]@H(G?S.=aUc\P@03>%7(i/i#IqO8lZ>\NF)SOAh[:MZm7b+*f05pkGWP>ZE0c'EO%O-=a4h#7,oDatiVoe'V$-J+V3s'am%<6:*-S,psOV5l8L`,%Z,Z*;GAj%qab^hiF6f+0l(hQ]0>?E[\.KF2Gkgthk0GUdb$PPmFh%(YnPIAt*\i:5?Ce%k"j%5.a#4JpW\cd'c(Z<MF`#hmAkl`[suo5l[V8"M["S"O-#IC_Ft)/Z<e_Q;8TLnZ(Du,;[$7=2klcI^G!s%4He%CJs.:T,89r=mMg)]56(W]_9]rMe&SV>W/,lin<MB:X?RR"nFu<n$XcmODo)o(e<g6l`FEKi.LfG@&"qcQ)*gss1U42@"R@dk%hAfY`VIp1cP2")6ecmX7P2_LMnM4u(>Q'N0fT%GBQ4HK/K%%4[QY-N$48-3HJW"[4;p0E5ig908mf#kC-S)WnUMn_PhIV)s<^QO8%*8pc+Qe'J7O)"/8*&r!=SU3HgUtk-gl]W.b2Tu'LH@Y1>+!'&YNc"a.[Bq_0g[Kjc!-<-rgE@W0Bm,ADL]1K2)3-SX%aVtrcQ6P*%q<01<A9%Z&@N*9.VSQ#&_]4)JEj]fc_6M<,6IbO$PAC0u2%n>B]"Rah]WZep%gW&;M)d99ifg9[l'_Ps`G[[?q9#Nma*)VElhf#0%DSMIL?aa0nLu_o4)kB"-%0LtJ%VS4/!;hU5]K<N9->qmes']mD`5E3_*Zite*Ur.CnoB(%D``kok4$C78#ht;<8*t8`TI0,Z6P=\%>WFe]Drh,2r5;;d3CI-<-1SNek]4kke!Ej+rjdLNbiGDJDkETuoA9Fe'*@=TrI\UDJ$/S,PI(k\f87V!5CM\TjIb`S:JLh6IH0t\%TD*5nRJ_-tcIp<(?TpS2Z<[U>6s4_=!Kk!]=8$M-o;@osh)YN*nYM5Q#="'0W=!T(1U^?`DBHN@qS&srA'a3qML^>MGdk6Fc<NAQ%jID0Rpu7"b:1([IIlY:DYl)&CIWdm2gUNV852!EXXeC$AQ+c)Li6_:C_XLW-gP2Y8CAta4qq3:Zj@<DFa3?R9O]*Wo>79jPLFK9F%nmL&*5.Z,T^%ppHeRkoE1GYhBi\Un$r&=_Kn<NOPp6^'\:+YVn_:=/TEN,MWc`cVuY&57WMp.lY2ifYIjMrQfiSi8_e.$&-&uUe_%%IW/.'Be3No"n@9bb^4JUAc83Bc1Y4/c#(@r6<bUHW87>q:#V@]^`F5IJc!)Q0R'hdBsMIQ.>&a/tRgG5FAYX*]j+D,HC1O)F[&)%E$*W<XL8MNZ8>u!Oo+gt?IS>`CjPI$X$a?LT"*]cX4hXYc0^/\NrJ_GXaU)mkC*4;qTE=)_<XTE:Z_&GmOO*l7cin7)I#+ge[p$!%M[.!SbGQsu5<.N.<jTR9E@U*c-Dgs1K(?<VmAT49/mh^%Rk[^ph)o/m?f%^3J?b5<ro&pUp@&N8$+119la*NB$EW?R?^bp<4S\^@%9Jp#0]fP'X\T?HcGl-R,[Bm=Q*e2]YXDbfrXbE*;SfU"Dn)E/-bJiXmbo_.u?lm(tp>[Duc82lR,R-urWh8'\R]Rr$:3h(S<7'@"%+A2NSa'_\$8(R+c"")o@XlPZuo!-SPm$!mU!8?p"r,V[qX^.?shVbESXue(RjP85Uj1RPJo\SiE,OGDH')=.%3fXq+:"$php9<;s%cA"$4NC!]OkO,nRnY_D>]CG2?,L[K(cI[>B0X2%`s$:S.p#Y:65FrW/]6<jhF(Hr*Z5gB%q9C:1nD05&fZg(@T-'lhp<iBN=a0`9%&$S?S,OXKH/(\S1aRmpIo8i2SWf6Mebtmf/qs2OclJ#1i&.DNng=5aI/uuldUQ=7P'Q1J]JmcN6j3F5U,]c,_Isq.BMbS!<#A'[M%NS?guO'KPE<+Nr6QVS\eq?&h]-\Xj6aK;rNp\.48r*=F*V\e1*5;l<[1<Pm4k<CS3W("g5>'kQbp@I<EAF(>']COo@HXu$9S+S;=%T?Wl;#!4'Rr7IG!drs92jVLuO\[1c(3%e]J=I8Ego99.5r84`PY:kn&f<QX%9B2kr2(4uEl.Or1llX!t.dcX0X-dqp?QC457Q`M%%kCP*HS38Vbm)c$iTRWQ)XUR_Rplb-JP@m;9H=L1Ih7rnVL@G[\:VJo=F>U-BSY2;MV&^QHfM-Sq8/u>glB&uEPnS6.mauNi%;q]$%p"^XIO`,f2L0khi@?)sG?>faieAtd]B23Dbk_4%p&'WF2O%mUD%nh-.R#Y?oi+_d=cK1k4o[a[XOB]Ih<,$fmRnf@D1Fnf3SB&i"%F8:K&(7TqD*Xht<$+_8#1[a2mkI9tXFD$ZQTBtOqQ".TW_2VAP0#3;&b^+$TjN;u)<e1u/B]Rc.4@=V(Q9PldVbd^_Ic!C\5!3hc%:>s$YH2hisb$1W%[AWF6I>*V&FiU-nnCUZen^4-*EkM+WSXD0kUX,O&dQ:c`VXWHhdFJ)2<r"+G=T.peerdNnH:G-)jiV0<!0.$c%GC?=e\`)icJ)3B_TlgKDDT4V5Zi9%V*L0<1gbGSI*WDC>YKXquJ(ooe\lT*b!^Z^s;]?D-'A@nVY&;FZ@tuLt2,BR)N\)5aTkDA_%onO_N*BV[J_o8mRqG>9&p,dhB[/R^2<uWjPA_juK9=HK!7cF(`8f^0QS5l#qdE3l@?!_6!UlS"q\%K.(i$5>t-@alc6md@l-lC."%GB?q1_cM.b&H!'J54?[Z17+n7J*Nam^@h!bT5/qqMc\6<bWk7cZHd:Ig4ZPKA$npW?Z!a99og^na4anbb+"(eB5a>h7K7),kO'F;%=C'XMG=Jaf>AbFq0mUK/2NEe-lu@0M4Lq05*Jj5MXM5hVnEYtSQ:EA[lRuMUjF&4.S[cmNok9s[$[?3Y3`fVnlOi++N1?[o,CO!3%1+M>'A)YP)q)k);+23!^>H5=P-G835DdPp)_]SF[n_VFae]0$INl9Sb-UMSu/#Po*nA.uWGT28sP-.PR@cN7@X-b-9mHbG`FlE(e%QM&kJ]KZ[c"frG1lYI=HE'EgKE;eno57bEAFlpX,49"T343`iWd";<AGcA:!T-$$`>#abN_XC^lQ>;H+O,$nY?LA=M,WT5^\fUn@%dpYD+jn9kV<$H&e+Qb<HU0!=^FPY*3koKT'qNb"EH7BotVQ]@Mf[AN?*M$?\W_J8bY3mm63r80S<le&a1pg2kfDXR]Tg'Wjq7R-k%U]7'd<1#]t(0:uAo<Iieh"&Tu1sOF-A['B//(F\!m,[I-T2*$7V=E'S_$&d2rTpAlK4fdYVR4X"8/LGjmOscbJZ+$0OPj6G;r=lQ%X5I=7DiH^sI""4rN5ltEl`=&?rTsPG[?+WOM^]CI\9d2qbH5tih`ZJ_r70fSL#WQAB.k3Fqpj0I(Z0(Hh:h_?+3qXXr&EJXojRCC%ip,3dCR6^;E.2Top!^%^UD-N(8.uIcAHjCLHQr?:;H9FsEpijtjjK([+)dZsI/_ISm\q'm9!l37DkZ!h0-&WR]K%sUn*$OEp\,]9%(N8_G>(;#9J)40I(g$KWs1XDQ$I=Q:Z#<@Tc?E-=K+gJobBB8DaMNN(;`X3q:[VFi4`gebOsfrDfJ6M^Z^^a]@QT?(#:;V/F+WI"%bN+(sR+ujNEZ1.;6#m><FqQ.r\Nt92b.eIN)[4?CjI/Y,".?+mU4I2<e2E1i].t89G4]2]70-[sSc"7%CX5KM0GE8^KLV3JJ1B4(%8#"-ZPG63rB7;,+r%d3l#Xbs'8&:c*e)rB]P2Rh#A!27&H+&[F]md=X]BrD7l:lWtkL[iX2HNYjp3;"n#0`XPN,?15LY]UlS&:ul%_hfJW=rF_F-&EA?mb:qZ)Zraln_!o?:PN'oQjq*(YQ:h44JBp><u^]+`lTr$L(Do0Dd@[.00bZdp?'EocS+(#H4;Ss\',\=V[O^Z%?&N$ur+'Krkqk_lhc=K>h"<P/p"reS[/[8%@H%;s'Rhk*4nTceY1NI17_cSGET-[HihEV$52,)6h](7VmPUbHB(GRk4`Vh=giJZV%F6?osYF!q#^V`U*LgM3a3!s^H`?n@",<hJ+Yhd.5=0\_8jM1-^L<K@C)?$k)ci*dc"6RY1&__0dF8b)?^YW6X^RPgA]QiDu?ZWm_%4q*)-U;nG]O&9<.^!D[YU8Tgss"P2K`%[_1l-Q\fYH>S/gUXf.$F`-<I^oT2U?.k_:,?;Gr5Zk0Y0&u!4FOL$^[ZF5_,!:uT6e,!%\1tF0X+9aI.;$UUbRCuIQXY+h_b?X#4=Om_1(6K-5:OS<=GBs<Y`0>Q<hJQ/>.3S]R:;;\@KYF%MTp6^fZD[YQUd01c.3D6FXf@%%X<UKuH5djtDRgE#G2i/=M#f7/IWR:._P,HBeEoar/rZOWDKhi-m/%kP_r0t9T4YsuRL:LG?C6SF)k1k-`5ei#ednoZAqg#LLITi9%@<tFnZ"X.[#CgiD)8?A#f]i_hkAp4W>DNK(,:gVh97qR)428,S-F,<7ms76UWXYnqMK-8?9oL$>&RXhJSI,s:%ubu[j*"sB$gtcN%:W=ut((Q9^iUGR7V[qNV(p$DJ!mApiRi&VsH2YX[[pL271Z8UenG^O;ntQj]ZK`4H=16k:_/`>Eh\UtASb^>YJ1LKR`ON1HpF'9e%qd@M]a#ZTCI5?M8?\jW]UY]G#-JD7Ejt]Eh1-<F<pH)X"?QWq?%I9%&rb5X7rEmK[:6ij_Fm[QrZM<4W]XILI05OPYb/n37ffq40%l*\"(VhTH0n'c@Ah9&Uil*Y_"ZpWUhNe_<!J%iNTq5M!@O7;o3`5+AK+0>4$S(eg@h0cV?*8C>Z772/%Ge%b53;2[=*TPf.f/mES%1;K)tI07PoVKUtUG0B[HheqNma'O/KfkK5i1nS"h%Xd+E:YtMM%_0LGDY7o0kF]cM^Nq>XN)I/m5-^%_4%/GIY<Iu`[K#VLhTaJ<%+(Zkfc^Vno+*KPtHU%N)ko8<is*[#J^-f[7F`VSZ-Vlr'%N+$C1UD>3p%D<GnVK:(21\ZSh"#N1ilR,Q46;c(?@DV0JSofF4aB+^%i4X1%G'NiDj1`W"2h1a6lHb)I[W*,LRU\2i,/DkQ.B<d;f*inf`kI^ZGJ-Ilr4+^&fuMYKD;P+YSFLYW>9D.$$E%BHgf3S*j8HmQ%eOO`FjPA00V`gbkEMYPIZs%\(ak'#i4Q[*^e^jU6FEAS'N_K&^;0opl@0fsS%-g7HM\@T<U_@Jmre@#ap)f;8R7Q5+n2$XsF*,8r%oY;M/]lC(NVb(`OdY@F?50b#VVgRU@n8Z`u36+)N=7pRYGW>"j^:')DAj"]urW=8*N/(=cq7lE=c?M<OmdocA3+k@D,IdO$ol89%%3%*F)In_$JN/)K5^jkA(S?WQ=38I[1ER%Yk(Cp?j50b&3i2E0^fCa./=9iPqq78c8j2)`g)tW:1X/D/!b_6-("EJSL_ahWk>Rlh?%D*<7FC?+ja[b`U'7K$",s1s2_Z=n&\Zm!L4!RQfR$VT[.Y$JS[j6H#=c6$BJGdVMKdH]D/+3m+.r:'XWX2j].[s/=S4$RZ=^3kD"%f](E@`tt(Q:<b#/62pO24K+<OSrXYU`O#,bGQ,q*8,7X9(RdXK0uV%Ci+"2_aU]1]E;7g+haBeOj,2qS2L1_M+?9;Fign*t9jNI3%q*4]8-i*;AJH!lhBbl2)]`4X-I#@CK=>2'ZM^q742lsd-1BVP22\r]9"su"+=Bc!d[fE0'RG>eK`:M9mJ[OlP(hmJhe;]/H(RAsR%HM)NmolT`Xit!6?hS!+:L[,_bPJht=O8$>5YkVhH9J0a4VC<IPP:>-eS!*,J1U&mMS?_=<D_h;@ps9^?+uUOT++7ljl"p4G/DEb>%)%JurY8*B.Ei^dRhp04Or9,e/0Z5e=^,,T1g,c:,fpt?ON_<;LDc`Z3SR0=[)S67S=iW]EI^EfA$lX%)^6b9S0!^kD0?2B?mVo"d%k:kDVmlQ]sj8*uC9NfAKI%L5?/;l+aB0Q8B5'VFJ/1qrL]^smp`]7U>_U?NB<`VE#e/XjEr9k%i]6`nC$Z!4hIMP9i4o>'1/2nnF%&<q/]Gs.j3GmmDWF-A>j6$0pYNtWtI8bpR)R#EiB.2KaJq;mO9Dl?JMeLK&_)\r`q8eV1\K2dG@@4!JJ@H5u3m3Xj-SH_(^R;]H/%CB2Vr,-8L23)gS+;lQuPa/H5*jTQ',ABD!jLQ!/h+^5E_W9<JD[NW6U4#8D(iV+BhZab>WeH\6u`Qd#P2m5H[HFinNYK(Ri(5K)c%DG;1t+N^'_;:on*F7sa7#77I?LQdZiZ;[Fp`Y>*r?T1HYcuE7j'`ugC#u7AsZ?L.=qptJHG?Cq`mcQcXHN\'ffu]@sJ6ZW)$F>F^%2M5IuX/?UMY:sUkf)s?OjJ%%YPrL0dWah>\9#`A\(5UEs_I/"a#%8FUDr[29k,qZ!"D#Q<d^YP.q#AO@U)^00K-t-!+KaaUDBOm%%Ef0olSgRD?`<]LbS,L-UbS(SkN+o`IPk7h@?R2j;XNo8tq)J/FZ&PtfrWliU(,O31:rW,*:u%K;c>`cI^&W:f8*)i`Ro!G#bs(g5%4U8au%W:\m@HDO]J9jnr%R4oK^,.fQ>B&n%hl=!;6&@d*)G5U4R%G&S,+ho=@1mRFYiKrT`d8gIhG1L36nU5`2N(caL:WA[DpI#H%RM^oKPFSP`DhV\4=m6Vo=J%6YipF.!44^kMI7pS",^c6*&PJo^"_L>OWY*@1OK;oUlrD1`*j1=7h&Gb3oP009XZ"7kWDFZG=M@I1%jG(5Jd0QHY-ENl7>_I@2\\NV"Y2'2jL90f9en&:.ONj-Z<>X[U9c:`(*#-UR[D3c@_MV-<YtbSf,a+b#2G_SfY`O"iZGp-I$h\mF%p*0@[%N)\lZ>1nYnV>`]"p[qG&5gnZUZX("%L:"A$QHmu"dU]B5??gHD.1O8bQPWD!;%Gb4#*aWW_fNAfqQ8"iA6n*2iqLDT7c#_%^\l*7dmsBBX1$"M!>FMsn2\=ri#sRr&R-B<1ng);ak;gl=qNS[R\\"Q+om^O7IV,1!\Q$t/%J?1#BCI\(TF=N.+fU1A.`7eaXVua%+L8uoP)kJ%,5[nSkY9,A--I_Q?`!VYJ5o&!6d\VYd1/iOeC9Y$'Ce([#)^d96BVBQG9R9MTK\mFbCa3gBE427\0BpnXHjrY1qhn^%/3!pua#p*XGTQTm;e/#93+BPI"T3:FX":>3%q$$-(<#5'*>f_],3ph$RgO+Co]hl_BHVUJd;bUE-#V*d*'%ELZ;DfQA\lh<&rV?p%NPl1pHrZaK,$&/8!I>q+jEKo&`riPR';B;0P*tkSVBJKld,GG(UYR(#/d\HF\5*VgY29*GmeNnrMbE6YS_`*!35"eX_da*7JZHT3%*)`GK+Er_4<$5bX6KqHII58a`<c#*F<#VF-CDgd@9WTZKe.=W+auP##aH=EVPmSq%<+S-h[(]hYT3?W]lTB`h,J:J>iO/JD`(h$^%Za)+eMR/"M/<V&><fT5^XGDau[r%AabCJUe6!`Ge;+3MrZq:d-hXusCjhd-K$4[@aPArmE":9E*?oHpEqBeIC4aT+hqYmdA]hMqs%cI7JL=jcX9;=,3ubi7;W+.f*Qq>Bc0)>r["%tD9A3i-a\kcq7U1c)Z,:o<to.i5"EAd,FJ32)J`p;F%sEt_M3J9#%DI`s9U+qt=5%no>A;NnENg!p+7j/eDUNLa7as.&QLb&7IuJGQbDHILn(PYjRVQePY[X0=p`sc<7))ns*+\8-?_GJMu^aP:11Z>Oil>ITD^$5LQ-+%oh9jf%qak%7OH%Vf^><oInEsQSTo)[=d@,=lp'9>?@K&B5,49oL[523>\_[I(?RrK_IR-WlOLFK8Z+BE@K/CMZH0#E)\QC3!_/I;%NI9.JDTH]/:@E2rbc3c%%6c-h:fOPR8*Z_YGb3e/iA<e1$A]8\)@K1qJLV2Q?(OD\M@^4C3rgiH[pWC4$Bl7Vap^p1c^9'GG.J%u%c<70$Q-/?_'^p)NX2Y-BC!QZ]ZJ3mXH_u5?lHXm3%lPle9@meK+7.jHITPTo71^4hKGF`Rdi4[s#W(O?_ML\@-W\<2SLs43,)QW9%\Qb^HMFup[(e?77+nmVZFQYlYZVoG%*:G-*'Bc]9JX-WX<[rUmn&[2G:Z%T6cDkOV)gjE/m.KM+e^N3]CM3Kl;,8eu+%'&8#ppLh%f`6b/XYHOY)\PSm"AIoX`90O6L;6&)Rtq*L=2+#?EmKnEGQ,MZKpDp,$KWZ>>.\^(0rMT\R"P7DA@IDnpIKXCeMI.553P=iHL\kX%]WmqRqL&rO''b"F5W70050'3@ONK;Js1'<Cj<Qs()2+,-LHGVV,+AG(hl(2/]h:JYq%)X>[)dqgoT:.+=jE(9Zr"n31H9I5NpJ[k%oU]aBXEp`S3f.gA\+ac-F7S`>k]]KXc+p;'aMETF.CT=kW?-E]0H;en_=gU.hto^^[&YX;-6+Z?['Pe.cBrsFGe+8"c<2X6Bb:$V%9aNQ;&Wl-)=fO?fInt6YI!Q=2B3O-eDt$'f$L5Ub7&?M]44EYVINlIsFD/LR7+WGaf^sN8Od0u5U;T05M8:C0d3t^rN/fR/mh)Mk%b`92WBr=&kiLGTKQtVbY^e\K8$V[]U1dY")h3-S@T"Ym*R8hN)2u'3!L_&:Q%GgcjG,!k1jTI@FM1u^?1D2SaYY9,-r,N86Z6Hr;%8kBt$O=bCFDh4;d^#0+G1BOO;jPH`(mehi]<Z4C?YS;Gg-Rk")l>H5"'2c$:46CG0:@FVEbc5=T)u=)4+#:!))A./]8A?h;OXo3*%RSa-f8;V-i5YL2u`.@DcE`q)Qk\,X,B$_[k]E0[E33q^E3H',_]h:MZq%)X><&UIq>2-8-U+Wf<7r+Bk<$\0i]-Y'`48h\'SQ4#.%2u$db$l-diCEp6^h)j'RMgDH<XbOu+KI6'-HjQUb+Jo0+\ptNON%0bh9S`[DAcsAL7[t"eLbJYFgq2Xr?,1F);FTFKRBb,$_=+?,%-5rsPJN-X*2eBH)W:s9gVU`!Q!"fH)Mjmtc_<I/qGH0O8"Yok*TifiL<WdFV,8MZ^K$YX6!RZj?K16OdfU1rS6dXE-mYH4UH?uGQ%S?l%#`M+Q8@YQc.!l10?OC/V7l2.sN>=@]!S7pfUHDZb%*NY[AUQN_Kk``W$U>HdKQioL/)7dn;NR*`lM*5qfg)>;^GCNIGVVM,q%">mQuhb'm\3\s.k?/k+mIlM)7NmXFi\&9M@U]ke48>(j>G=TA5Led\4HY1g!]nY`aEZ(U8P,SIC]6'S#(ZccjY3%Ic:Y#a6W&L.4%^c";FjBqaIr1FA<N.A>@$7EcF^[)nZmh/B>!Q-oj7Ckuu>ebu7'CuK#7$FJDgqP/m+?ZQKU4(MU9OFQ99Oq`]6BdKRYd'ZFqH_JY%__-h$`7mR-\OPb8L+E]2^u3u2S>'HC:?:Nh[*^m&@r7@1h7-=(cI@r&QZft3+3n#gaD(45l8?#aBqoaNL*+=TR%<R#PA_&(1NTG,%Zg*sn7d&jPHbFMM\8U`nR=8MmPKU`Yb.Q7tVSP:41'q^4*QZ/5>L\7m;&l512;QLb(IN6#bFTmO/G8YZJ(VM67'^?ACN`bf1dD\0%r&%bo8ZmP=^-R!=k=kbbeMD[acd@G57k+q!gV"j1^5+.&1<XRP:SuN"RZ98a&'UsTU<XkAn>8*'a(Vub:Ir.%_)X:rmTni:b^VTb%TuA8)Jclf3b-fVW4qXW%V'6;DhC\O-d5g"rm?pu#oJ\Uc-g#aD\e8b"c7Y[OG=FY'.Z&h@Rk3+R*8e]c8X_uE5pt>>KbCQ+Cte*C%guRaHF4U4H3bNc_]h:NE"UsQF2$Xh\W1,!Z>T95D1]l>TZ.&I9ag[)OkoOTc[(>k\ka\Ftg2N4@4GqG;SMU5YkQd\E9=7W&AK%6D%+SB7;$+?Ne+u07VIkFE:;'7`lJ>t5),?-^6mTo\R/mpYOW<p-3YrYKuoHR`le^GA(jSCfHf->B`:UOh=4U]UR*>b10.MZNU\'j]8%lM!_5_G+O9mRUD^XAM$@RJq:7Wh3SLN^d5COc2s,,G7*D4LQfk(nKmlpFc,\k<GKC;M;AeZ4tt*S$En4)29^2Y\$l'SpZ/-SaM@.%bc5=T2+C+%RGm]oRaeZZBDR&(N[U$mTf"-NJT[dudW*:6@0S$d5rpF:Yt3c!BhTJAPDlQFl_(\>mZ;d^Hogj@c<4gOW8(C^6j,R.%!]:<&`A=TV]j(%:Jol=!Zob=[l"cAU1pjgP\hS&\c7Y[OpI.3i$I>F6Qs`S8'G(8P87HVFJXY*K;6GYN.$9L[d9IIf*T`^M#Gm0R%FGASg`%sLTiOjjOaX#"lfTPSk5coP].o!I%7s:AFH;Cn\<o)GEFH-g(Q5oHrZPRfR5eei'6,fS<0T`a91_1=7H,i]?e@cfWb#hs<%ad5*k]'?m37s`iIjIW3=mehi]()g%F[arb\L5$Cr273u\$9@eIaDQ>sHV_"]<^"o%b`3^>L5Z3<7Va1.h)j$QMg-dFR`1_,leBdp%(jWqnGgt\lDdDfY38;;*A!#Z]0%&:l[]'<%0&^oM5O;aT2ZqsAdN.TU3nosqEeS+BMtkHI^EMJWY&3klq^0ja^"/`(OfC$dqFV^X%[O]DoI8LH*Q8H(\\sP@T9gi33ai;VJ\U6epXQKNo@VC<NeC7f'`aN^_6ge6sl-=c<B;I#plYF^uEuGVtR$MfF5a.)ohi_mif/@uO%IC&4,^BV-cAe``2gX9$4F/%P.m5.CZBPAL-3OXKU`O"DTI-I4_fSFfnajn=?Od=`]/uPO$7@/s->BjmpaLt5/SbWfZ/6(\pQsItP%:/6^e!N</3=fKS&okql1LhuAuC!Wl,VQZ\1erR]E.e2l^Oa^B]__=!5oc#u\CM[4N4&*EQUG+T#n7[>XUNj8LWW%1iN9X0_N4=(g%V_e?]s#Q.']9p!>AOAkE)b%B(de`-b``%(Nr!%.XSHJ8K<R:;Q>[&sTDdAtmNG%u\o_YAR>R%U]L\d?m'uV$['9;^:V?X#'rDQ=#%"Dk*]g08^'c]5MJ.AphT_u>?6!j)1.,9aufK!buorS-iO6J?$IZYraJF4YB>?q/OklG;/]U\qhs-C$mj)SB'Uar8Qk"81UZms.CY%qHO\s9l@fRBPKkP[Mhco*HU\49m6WU3D1qFBjW`nTL:Zg'54C9?=Y21^FA%_Uof!DIFIIaJB"sa0T,);WQ)=4d\2,&"GG?3CqA--%Q"s&t;A\'>JY!KZKPL&g`K0$6MIu\]JTVl)h&UP)dSG&f_u>q`JElPt\&:]o#-s%`7-C&,qY0%iKXCEBC!X/4(/SMpasa!f1i5q@%/fj6O76f_7:"rXaC6gqhL*Fcn#9A4a]PW)a-+.lo7/3t"l?Z<M7bkW*e!^2Sc8q/f!Q6CnCe5O>%@F&a8f$]o7T4M#r!(Pbh=Ku.%Wb;#DbN;M<b9oWFX0HKQF.V8*i?6PmYqK8n("h8!)CI7j1a2N@[t-K+NT@B6V"#j"ViVj1oG,PdadhT-pFbEHk<J<?.&5L$N@-D_%ofiGaL(i:=>2R(>h]`o8F.b\&l:ugr6f(-Ka!]kLCkH_NjZpR2b(6VG(couI"2DhhYRY40b-9Dn*aGYp(L^Qc4@,W\ksV2q.d5\#%pFPQNVE^TW9E]iV;_&VO/\a`I(.K+Nen\3Hf`AiR0L>Fm]9DO**ABQ/4EL]*K\GC.mkDL0Z9`!*BZu-HIoq7N:HL;h>#4c>HZZ:=%2B)cW2&d-5G&&eJba<aDE4QDoc<2XV$$*,(UV`\q#cJ.(UQCD%!P^oW62*qIVDUI4%1PBiD'29s+Iq7LcL6[5KY.$!eq?9oBYt1X%$'K<f\)hQamJ9+dH_81]Am/8%0l8V\oRM:TCqB3[p+KCTXjO^?Z6Rq41BO$1'ZipNM0+ON#/LG5"7;RXchoYf+IQ(T71?.b'C=#,%IUAn'p5#$:W+k'0.`A;,F6p\-k:k4WX?dQDB\Urq?Lp-E)JFa!"/j2o]6)Mir,Bq27@Zq,!R-AlB%s=Gah(`=en3K$m1-\mE<MiM%m$UbtgbjmQ2DD1-8#.p5Npb2$ITI3cmkDB>N(s-e5nFWT53]a/9gfAHC2U:2j;++LbrdOOW?DC#6ge6kl-+W:B;(,)-rb/Ih;X'*%J[ooYA.=mnN;*iK#Wa?e2llB521hKs2LH^XnH6CFSDP.EA/)SP]=bQ6CBT2EY"Uo08jq8G[C4"Ug&Q_8@W`5AA(q!8R3D;Ujn(*3%fXoS[GdQ/&>9_KjDLku."tM:6InRLA&4-%]qkho7^BP<=1Q%gGg,ij>NqE4CSqPbl$%)ZUJnSLg^I9(ti&n,9aU26qD01>@_F:8"%7T\UUb-Ze/Y>S,.p;8o6/Ac=.<@4HGT,kaWC):'*leRV?&4/'tRQY`WRCpNMfJ&>X-uAt#Y+4Wu7PkRS$Ce:PIop-dWD3.=i)@t,%AkVt?r<T@ta!_d'g@0[X+nmVFFQYlYZVid:$VbBA-akpo,Z*)qRc=0fj;S44FAK8V<h7oZjFF\L_e%S9gtJnOkP%D)U?cD\fOQDD%)PR8"VaR.Sa%jNi69tWn!jc.eXtB-ORCOr*J7-Hb4Tk+XZC.9^E6]p:fnu*88W`_**s"7:)I7-c?-)Aghk5ispG=sQlC#6g%0WeU%K8Wb4$$P\i^FQ$-&9hoa@iE:YZ02>=1$0V)C2uTq&<W`VpI5+e/[/*uQl2-]q4QOupFP:q/7:GUW<M"+YFD7tJI")La4fT`s.8Sc%;6BRhqkho7rrsR(VQ!.\?MfEBigG7&oFq.q=BCtO2c2)Q"6c2B"R3$hD257/;;QF,QBN<iD(TDE[Xp10`n\2udp9b.hGVb\44S9W%?fDnnT9hq"Gg-ZaNk*mIe9e3De*:(d`XpcfB9pe_ldWWm]6:43(BsUg#dpG'HBO$j9;_FGD;F<i6=d697uaPiBFp9!9e*8m6<ii!%L>9E5e"-MXc:XjZVR/LE=kLChF5+)\"APWXNk*p:ds%[;Zg*sn<qB_8D-k!.CR+0j44EYUH=46Y62_YNg+obF*2e`fn.(hQWqFJe%PXe!6#+XI^V:k9uH^B+@o,l7\BP=%dOJJNs\@-fcZ+agEMF`tX\)\M'Fui.I2liP7DePN-)+Ers;nY9)FJ@Y/n\B%7aAZ9#9D.^`%hE;Nq-27]P3H@IV'[nCgVG+2#BV?p;oaJBDM5NH8@K/[Q#Vk&H9=De7Adl&s$<>9&G"2BFcCN7;p<9NuHhHd%VKH^O4EBiUc?XkO%Usl!H<h?P-$l*GmR'nX/KY#,[#f!1^3d85kBuiB`BXU3Nbe6Y2h$"5M/@G7=ntp:sdOmojC?u:n>&sY7loOh3*bs$.](8uFO0^)*%<m_8/]6C.0(]>KA,d@[W;JTR_EO2&sk`!@gYt\khL&G]n8jM%;Q@$j:a2J>(KiF8kVFK@Q[*tTFE6^dkd$S6E'5Fl8f#Qfa8&tn/%OR(edDij)33RF?hF_@mQSe=QmXeI\NGO%Bk;nBMFdGE+Cf.oX!@i?$CO[N6:+$$+;%=U.lTg13g4be3J;\j74r\7&U`Y^NFf759*%s6Qn^:s/k;i!.'+E(c$KD,K=q%OO#QClTN.'adGtB[DTg%)$R]SB]Y5Pb-23kKHn9H?BaUn:L'.C9e)+^6+4R'kUbGN4Id*B@2+P%T(WWIrVD72kX?Z&9_(#Pd&:[FZZl$\U?X"MVFD'Do(X31+Y(bHE,\Oi&*&g,YRWuX.'oR$Qei5k[)'`DGr[TXC6!thTe)W:.25fk%,)cjJO?GMchd$[VVT>UF.5*WY]qAsPYDlIQ6(CMFqg[6f6s=je+=kFpBk3#HC[s4ngEP*c"1t]QSl']t)[dHnh'Fsu\2O]n1;m2]%$P=73E[!(n0h+?:D*mZKr0'\,_V9mmh="eNh76r0Lh?;5L&ilm)m`)&Y_L`5@5;7/ahYGrI^)>N"l<#^-jWNZ_D$s`6o.jq7KaTn%=;%!PH_$\YTYj(TbNQDQR`^\Fhr$c4m(RYs&2C=QLR*odWJj_T`;lEq\#C0p:C+p_"e-d%=qR^o%&7co[Y2fSU26g0qZTKejq<BH%hP]?1;sR*]e/nQRlU"&6JAeOo+Uu*ud@l7<<nI;s>+Mu2Er\r[Ta*e9B3uR]0rm*In2:"`ST6rPpJ8?s<DH]jgo%UZ;aYT@1:7%<%8))Jo=SGIYo+(PtS@lqAlog"Q'W:0Zi>JBtLq`>4N\c51Z&/6`$CZK*19sA]**<gTN3'5bIa>5`#h,">adNUFU5cHWKad;Q=j,`+%g"B9qCIf31[:QXXU$-+1$AnjQp*tjbN`s2PhLE(BHO9ZfIa,rR15$#qOP*&#S4l+\]5EOeLNR-p@**-df,U7LDY/sihb30mB(U2X%AJ6I7RkT7WKuQ`"F</6l1jfq\U7KC/-AMQPP"d5=SO7$hr>:]4>"M@+:)+pX_0=`b"d/6<RE8i1[<-r(NID4m2"^.=S5diKSfJJO%qNO,6<UQdIX,'Y\fhGD6C;+lmng9?ZJ<@GL1<>`EBP3(>#PPYO4Dk_\bpP1b-ls)h$je?ch%BZ+.B;Rk_u<f][9uiBNlrkSo:#b+%Qbb6'QJ<MM915`8Sa7<$o4\5^dU:-9A@I8bX.]-2)nAIlVltc6.-SJ'4YG+F'^I@e"7a0`8<kt7Q\+NaL,e_aL-E^/nh,Hb7dbJE%9TZpBci_I)&8j-6o'iUa(N7\%MWV[2Np9)0OknqEG^9OL$:/F#muI,_E>C]*;-Zu*'rC[7XJ;_)P\dUhD(O[F.IN!_?_GCBOW4OS%]>7"SiX6r)j@U!%eNA7'J7*U/\,gPcW^@>@[4qqBF%"!*dAr`E"a;_S<1M#h"aPW;)_soL5Zn3p3HB]o&IKqD1(k`h&EmQ#_C(kU%-.@L$M@!*3jW^un5/H/hdG[Bh7VC^9(Ek_t0+]9e@j\9;)Sh6S"G@49BEEk[7mq`b?<pJ\7-p1K+-;@8Fs%u1<q]ATm(0eff0muE%nYB=CHp)lKqW"WSMsp[lr+9_aq"j7+"JU;A1'ORgC;^%MFUg=:#9,!Ur<J7JE]s^G57mo!j:KVtU=TbNI+=l2T8OI(S$ALr\Y3tU%J5Df*.XUo2n$5X?b34'SYQtuI-Y%5)$(=5)EZ-(?1l'9VXpSKX5nMB4raWBMeD4m_Va=[u39j(sJa+-,2gH+S)NAH$dsVJBP06;H%MR2K8adQ2N/i<F):_k?,OJde#`bDY2)F;_f3SU>OR!;Wl7YU@?DG_SE/E1,_O_];rWQtCm1*b\lJ4E%)Us`?PIfqSqC*o!dp'4SM%;*&`JJca41ZJL;0)`YjQ\qKW_6I)E0eD<i^TId^B@<EU(W[-VeK"g767L[FVckQU&!1eq`62M<E&=[!6IVN=,Ys%B?$dbZO]+Q*Q%$M$8Z"/[3M=ObYJqXFj3*+o]iCCJYQGr"%G>q5X?74)ZX/AFRb>Z=p`iQFO;N!a=p=C`c>>.'dFS*k6,2c5h]6HN*?*b8l@qA!Z=%UsMH'Yg.E1IKdFnX,X@8qKZ3TK4`Jb^$,3mLa9K]YcH4Q-QDL-rIO'XNBs)O"gJljg703YJf=*&?BGG\7@(aJ0$<@:#LNVdGZ8]#%9b8RSdn2WO_.sK4r=Ec2>Gs1kaE;M@iX9Gec'MRoRkk@]kZD8W6(+7L:K^I9-0eoD)1+jR.*AYcVQd;T1^NtX+URT49d73Git3YW%?r[F[Lif@661u'^FTq<qa<Ftq:gcnQ7tkrb$<+lb+GE8_5Rn-PaOYE;?O$t=R>1KOU;g+=\Ro#]YcAsnEOS=9O_sa`k\Q77'qe/0%3"kVoLY%7R]H3[;<G?uTiCPT+2Yf#&!PrI(E)j2-;\\&W&;na]X#Yp=>W3H6b1Dje2+kHcO[^q7$KOX+j+?[$IO(6QBSaQsAZpN9%h'Drr7^8V"s4\]^W"L!)0!gI$CYbeJ(a)5l!m-HSph7kp)_bEO,L_+g^+.b?K2iqq!J;$O&<I0l:<u3YZ)Ad7*0@>9Oqf%5jV)1$%,sW2Ylh#,ukQg<QDQF27[2)ik\L#Ho-@uO_Co?(l&VWc;-k&nh)aJG*Mn49VXhMAIq.WE$q)`DuH@3A2PO;ePfr[h*qlGV&aJDmF%OWq2R=f4UgW_B%$<fK7qqYI;[Dc,i-Lc&&W/g2%8n*%Ii8p!37>^7GF9!YGAX/-/8j^P=>[m:EC@?qXg0Ql:J4D1+TLLIWL@AUrI%1jV"l_dYM%".c+9!"_+OE(C-'o0ojaf*g'7<$pZWUFIWbHh#88?qi=T'9NmWARI$\*J"QdYDqCtHKuK:,V.K1]=ThN=Ed"UEAXie%OL&7bT?Y?j>D&sm\M:InJd(>7e18G3:oJs[m6n;i_Us1fnlNOo7DKLt2<is6=h$e?l\4XC^%4!Re)1L$AQUtZ9\BVLg_^X(@&&Ce%UI#+NBaBSi^<efEb?Au7j%1YAdaG!(Ff\8=-DQ7TEbq(\m2U+W^3#aOP7CN`F;X.4LKZMt["LjU/hf%l?I_#]X2nc*,c$JHf;P=L%6Lu[;o35H!pOeRB&HB^n>?eRD4aenmcG(D2[k>FA](LRGn!bD*^\_C8[g;_Q%q>Lt.b5""pqlrZNuV%gY\Z_n:h^/g]IcMO\@+L\%PN'Z`@Q[Q2*.9(iW.mIffs!0JO+j5F3M!rf)3YYC=;D4c/Cad55:UmJ<NY:k%H<3e3b@O!>/%m#22`Th%C;cf_EkTHGTKjLXd]C>%:ZC]@./>(IafL0=N'9T*I5^:37uOlP`\/g?`-0;/-%**lmF!+0aEVZ(6l''F?lmnh:qs%R+rM(-T[dPpekJN9"3aTi2`\S>p-D\s%5_@"nNgO(%kQ_W%,7G,JEhh"aTfT2IlX[?eSSX?50[N\k2D`0gAoHGJ_5Ni(h,ThgUY[C"'kebbTEnQ)c&2p"CQkgEaj_M["n'P"%K:GA/5sd`0;fSR2Z1Ca;$sYl*M`VW.,%("h:/:;`K#gpLQtiSJ&ZB^XL@^jO9H]s\!sIh?0A'0$^Trt(j[<p!SMShWSh[+d$tM$G%Xel'.1_hl1X*$M`@'2+toNFh(Eh`V$<Pco`h,*e;!%<n:do0"a0Ip%_*_r1)iSfoukQ-`J4$CSFbDkUHrG>YkS-=_LdJajrVB6d%%6*B&&>WdcTTX%p@*\(f>.$,TgfOHa0j9L;19gk5+08i!goJORP=gnmbf$Pu(bD.jTX%!Yc59_X%ZB__tJJNnM1X3;DOAYn>9o9Us%f3D$<05nl*3S<Xkl^#`%Rl&pAbRJ+++]^tilX"^jN0ks@!iO)oes3Sj3.d_n%-L;#N_3*2?u[Y`",Jp1RU%'R=H+HhNk+NqZJ<AT%`.VTbom=N"ccn?K4@FX+erK,#n]qBQ-)NSE^-<ksCZ@f=Ee="&D!t&E`nY>Fc$K(FA(sp?[3U?]ga\S1-?RQT'%dn)//GN(D7agf%\6Q:%<hq'0fb;/+>g5fM5YVX9.fc\$jMFP]O9e-tr/:pE7R23L6*]ob$O$mF-cddkQOFlDK`c?X9"f)k%MG*.Ehf+,OMrjGXQ6E1%4$,`,PR0,U9YpRuGK,_ao8X"V!$Q$Nfoiu]'bXp(.?2_s'EQ#Njs#!SEB62uK??E<mLJ&/"Njc@JDJ4Bd0*l$OUB5)SDMu4F3]kL%UHU.)6H4Ye,uKd:`gkDq;rg`:>A1b/XU1u8&\U%g3O><ZE8$>*&]Q't%J&FS?Vknq.]B$jhEXJG6(oaW*4hX624QJ\qQ_lHQmaKK%rIu8j1&TG?*g!a6,6pQDMY9HN)>&/h`miL)I4_*@=$ILYR\R0*`AGqBEa=scYmOsSObG=)j2*@'ij4=k!o27b/m!f$WS[]H\/b66%A=T@uI+^B-5[N!;KBQ(#Bh"X`;p-FJ6aImFco#!'RX+_+;GaHS1';cLV'%joT\,#ETasXkM^,Zg,IYQ'b/ul:LJr&nB%_%R_!*am%$LUjlPca\6Y3bk;Le^9^oeZ_$!@sIm2pp2]Y@Qk&P!/IL)^/L\I<2>JVQnikL2mqJUDX@SU5Q8B^MS*BOgoI#E&%#M3=M%qiLe=J%`_f$E:_$lDb)@77.n2q@#,+aSZWl2P:)!jLp%$Wn-!RHW@,H9]F+ZI.nOD%$HUXpdTW_"klh>r5-$jYe>4#8@N:7hh;$f`>RUHS4%+KqUW0.<%mN*L$QA78"qa#BM,%KU;Y?7dQSMU=3HU_[O_@"dg5b+-GZbDhJ`JuG"mb&+"?>FB9n/6-_,QTMmd]%d_TZ`pg03St&(%/:V+P:oIs@>YnO`en^\$K3JG0BeFKVMqm.lRTY`,+ifN4"qQ;#$Ek@+C)0DV16C8!GGBIBZtJ-?(9oGl,Z.m,MKGO8UCsEV)r7WN%+tAiC2OHQUUtr0;N>_Fe%+8!6\D)et]p-m;QQDU\dN2@;\HtA%IUce%UhjY*q*K3,[R(i@(KR>DK8_TSdUgu4aE=kk"rSgJ+k'JL%"A^F:..^tOB[M*]_-tW7GO_Dc4?ZpEPps6KTnWr'Lt@9N]uraROOZE2SR&R8Cc&KG'7mUc8<=F#=a3(=H'GJ#<7UEpG[)Y/$>4L)%Lmb01=f)KO2&g?fD7L5H:l%q3C1/Qb.5OFNV.YTtHC'<k&$mg<22E]T5iO5M7l!*BW[X00J.=T7j$^%CQ#2o+T=-b805!"&S#Q)@%Al,H3hg4gu%tA53]LrQWQ"Os?K:Wr1mBI$0gV>[C3-i,'04Rj,Qrj`p/E<$j9f98`+E.9oFUtnCjEiVW#EsK'XUd)b$V!XkLW-6#%\sG.M`usCkL8qgSGYf(/AVn.DJeB7FTMu<o3:_V#LD9G]F=1/'2X#[UE2:u/l+0F@B"hG#h@>8lfbjgZf'D;A&J>Z0B\X4](E/"7%mocDud4bR-!r6hf8hmFQV1Q?u?Sr8BcNq^,">X6n%X(Y.E$n`Q[)ZLi$rn-H%7Y2sY_uS:Tecl`C.,)#QqJ),eA/*>O#gP\lTrHA%^97."e[BXQ0+"HVPAXe"Z\TC(UM9uh@YkFZ*V#sNjRh@"4\Vi1FnN&M*`gq20RNQ+mp*GZf6bNQKjYT2"J:?"'k>Gn@mVhXoq6[S%@It1/+//@h@g<__5;WfOS!b0!anM=l\$40M%_d8PkDe5_cS$>D>`rH\cTb%idG`()WfB9+kN*du^@:AX;8mtP;h8@tOd?!d-N4FU%W?J=A@;aj=pXcpTW3OP;:k=r'"'N+Qpi:j5V8c"%h'p\cR#i[R]k>P\%;ps@ePr1Xe*ffWOr593:e`39Va`f'#R)T#c4f"u(=Ano%o*EM2au]l2E`iJT!RsG`E46Gji@SJT(Zu?>-a2O1OVo5NGp!k!Oi'Rc^4X?OEcRo#PEd^N`)n0HJf87WMLsVCk*,mKm8t-`'l6jd%Tkj^j0egalf=Ik)mNr#cAJ5K)k[G-q9_4T<C_<D.)c'"BO4gu9[1BB4:R>Aue0$P9::VKX4=RB,icq13H1d8?NYPOcN%O+14l_]r%dt892!1O%YdAnJsl?0.[\tIu>Vp?V'"N+5]6/ig.-o&FOa4nCX7Sm<r0*KlN7VZ29.6"c&3L"02'.s9O.o&ejnU!:O`@jqg_qbo,%Xj$n&[6/@0)a!)m/_t,]4&OX1K9/UGEMt#6YUk*_3!rKm3r$erO^62IG]Ur4$DOLn'f76IG5\],(#$^hnk'ULZW#=!b0E@J-)a/_%@r$-O@4$u:S?f)G25.EtL%_""bM6Fq84\P7Ysm_e%7>iIc-^N0[kfmXJ<!nlNFp"(IYQO)86AWGPd!pKiephu0\%B1'X8A5Mh2'B%H0YPJlXi)0EWlYWO9LXI'e&lP#!qL9[,PV[)2<m2__il`N2d-Mb!Q@.3khM66]eF&6!RdHZ#n/##O'rPGF@4Q,/"rfas-R96$je2%7RRP6dU9!`%];P$O%tW+dM0g5RN[6eP\S*Ze>(u_[nS__aoTNi@U'FC1rPi"W[H]P%O+0!aEi_CNN4#T+<k%)9&1$$6H0I@[><kD%X/F*J@$.ou8[=%Z*'d4=5D+1DRj"+Z'8HX-*)%U:/1U0.^Y#mB3Lb;)<#@lF+!WH"s$:nJ%n'#<M$J\=NG6)5r)u*NQ&;l52l0I^%.CPoP1l3Qs?Cq3A\T8@UKLg09*0NMl@b)(nC=H-ej-p>pH,UO=BS&L3)ak&g&m8>A/'S?%O!c(K^pHAUZ4Ks);LR$BWC%P#5_SIT%P@2u&>2M@`adC'=Q(oc;.!qp5D2&AiE2ko,D3jY`E5u,LdW2]4-Ifr5k&IaG`^f`9VV'qq1,n<Tl9Su-TFT-=&B7rVRN]$ZE[398%$!aV91lLrM]8KQVC+1QR.>W7u8naK?N%IuhfL*%_(V4FfA]6I\Z\QTHA&U5DH\S`E%U\j<?>S%8s6S^Mo6Bd^a6qpP4m`4._NETF%+Y,B9,rH\tqESDU.C*nb%3gE"RZ?%#.]MM]n?Mjf'q:q8,UC,ce$a!EN3a+AD,<n#UYN-f<C0e5"6L;rM.@L&fetpa)05V=fU^8m%PG7!SF`'$[>Le()isIbA29!?KWbs0cGn#S(Sin+W4_)d*r)`"BLhcXJ],P1<#\+qh(od6KQuilk#r\@)L$TDeDd$NT1`%@f/o#V7%JY\NtctakgmsC%36oLJ-0[:mlKor'k-7W6%8i\V@%KXh/F^"mRJH5cG(!3s>l!/kH$VJks-ruH!>IkZ_M]8pG"5tc]["YH\_#`#L%\,u(mdmGH`e[SX_UU)2<A,9.k+YSfZRiN)DWB=qQVW.sao0Y&ODFaMieJF&V8Nr!*Y0!%C:lur;PikNnR%mGG4+UAK3U#(QW/?%A%KRS*'W)IqeZ&eV409Itb:h_"3pCV*m3S,o1gW&)>/[7j>Y;+^*6OaSBQW^WuHP3WYU8LGO$!VA^]A.jMHH_Ap@s_R8l04/t`/KH,%\W;!Rj=:,@\bD'Y+*"tH1(NK?D(gJkg;YSKm7$M]-LZRQ-ip]TVJq"0B*_]1&@dILL=#(s#?W%Eo;=D0NAjPAo5s&-m5+e\BT:H_%=iF)<0WG3hQ2`Gt6NDb-E9XuO$LP6pU9;nR,R).FI2>=/2A[jikV8@BW2V^8M@6E2YS_gHdCd[U247=,h+@W:-f!Zr_j1>3B&Lf3%HWd1c^c]^>q`*[q1Z+m7$"i`tSYN.^JGK=7FYm;`?m>Pi](%]3H5;K5]c1>)XF!3\a4Pms?*rf>cO?!$X#=be[m`<hTIrR/<d^\\%3s@L\f6$MN8d2,CeNfXX!a(:SJZ-4M7!Jj).>3jl@bhf7$j=/QL7II6!$7,cmMC4npJ^p#(?p?Mhe[RJU!A4KPZ`Sm";o*Ap_GAD%>!:h.;.W?KC_b8aeS\95`4E<BJO:1o'6#DMBIsOT*\b,.cAXcH&.nPCak0GM-`BJRA+qu;8.s2^\4kFYiuDO]PCeDOj[dO36eRm,%7p.nf7WLlC=-"ehlG9I+>`mCM@nJ$IZ'DD.L);J&XF"naf&O^s)akVYUA7KAhGQH;0[_0nCsD8N(c)/JLC[9I3O?rUdK9F.C8"/3%b&uITT,@bKc9[_%@CJ`TmR*t24l%Wb]k;"H)"[8-j)Ggd@8K+'X@&)7"\]Q3>O3O$\L_-W;foPVR?!hH3^(]dLP9kQh-0j'H]e/?%_g$K`K@t!,/jk7comt-"arYpcCM=H<XYI2ul.<[L_ugrnh.qh?2&a;0<02XRc([`kPkMP/-K<0"%5A?HB[uT#X0N0%V74^RmMI#S%Pu^P<VM.aXr!DKRMp:nC[*W5<Q+,$-UHYh<LUk\#^^d.+@l/W3W/#*3@r=(bY_Q*$/otmJh.P&A]>L'tR(`\#64Mr3WU;q%^)^M'%P!C\*oX`F7Za.`g7)Gfi6Bj#Jmfi7YW4K7TPJPgpUPq>(Q^TR->,3ZD]0dgmg4ai03GW!pm[2b\()oZ[5VcQ\eZqj8r8hM>"Crt`%p58]N6IeC,8tqNHWq.WiAXXNjn$O`!C?ZG$6HQ$3\jI`6B$:Yr!(fh,TFq,.OTt*ReHM&4b>U%De1_9Y,S8O>``1(e"pLZGnRBho%[WPD('\-oR1sBEJ9s'[Yo7b3Tor+N1EeG?*C(>@Q'E9WK@?Rl?dN(=RZ@7n.+l15P=>KuOE2=V87i$\V:hCUtimeF#^'G.S%QcbF%:'Y6hJVX\<1ITBWI9Kk=DCC=kj0M4#QpWneB'^Gm:2H"*'Ol>TH??.7#ZUlt?:3&&!.N@0"aY_6ehlaHO\a':4(R-;'nU@t3"-5r%#.?9ts+sdYL2H,o9Ul7,WAb09:.(X&J/U0'i(e50\R_FK,F;4c$/_hCeK_l?\B;@O7,&:<'_@("I]7qF17aEngXj](T'bu,UE8-&%=a(tBkV@c"I?LS:!#h&;$_6;iT-`um4p1Sp&JU=]TfOpf9uoVf//%S5'/cT8N.hr\fh_s1ktn_TIY,*J8sZPL&/[s[Eo1__=KO7.%5:&hg(*SZ,A1>^([:gO8o[uU4BC[^jBV%bA8]l'GUQuj]Wo:HdG#[-kop*]qC.;\pmHH4NRCbq>(*Q;Lh?uKiR@`K_r]T.CBn0\U%m,YT)?Pc9bHChg$f*(B&)H20Pb#Mh<Bd44_/(r5(>d/@`^)4u55cfR=4>#QFHC?PN(6sn^`Xu:Zls)idZDI!r0uUT&2AZ?e:(,(X%I>3%e!X_Vu-`FcDe;sume`7ADNN4?JUChAEOA2U(6n1n<@^0_#Q>tJWRhAn45VXQ'-@%0DKJI0?M/Hc;jF,O],*]%Oc(jV?+Yf<!%K\A,E&pYu0A=:A<D!a205d8LhA/R5tTLT-JDlia;_>"dV=>gRBZHN]Mele@ZB[nLs<45[!pcf/-%^]9/6X'[-F$iBhL5IB/%jQ[q%\L>Er:l^r;)[/G_&]6E]=sN;gbKOHQ$W.2&L7,gW)2.g'Z=?JO:&V*.*jS_X,p2m&@Y9hI:oL8)d'M<>#10CBecIdBJXW`G>j^Re%0RNR;YRH_0_FFn4q:OMWBir^t&Fui$=-R3caMP$LfU/[kGU*+]X#u/H"M)5Rkn4Q.V=m_LJ3c*7qG<ro6W',5lRJVV,,5)alDJ$b%1b9B7#1<;IYR?VaXO5cS+X3@f_$iGF8E:]Y`'hS)$Haf3U(u\;GXjhVbrla?N2eo-ARYClYY@9P(jLT<@1SG7VjPmX<-N>\q44N4%'d4\*At[A(@Mkl76(1Z/W"PIA&KB7p>h-uL"2[)5KN20r_Ge]/.%Y#E.aZ$2:rknCrM[e0FqLf$AD5[4g4I.bkd$L2OP!Lg7qGLe%UV9?ZOi^NB-8`2"f[<BfG*_0$2=Wr>@$0`"k:i57l1"p`7UA(YkoaAo&B8rnNpC#Enf%\-Ol"lt^)1;8<to*a+Ac6XWf"m%1a55c%L*i+l(hCN\YYngrj>_.pd_<phNSo`Q!f9SdjhD77"2HM$D6Y%(10`N[;]eXr/"9t$.8AYI=q$8X0eK_f/o(r;/LT.62uV-_EatT]%HF/'^@tc,Mq)0I$.EG6(8jt?jQ(ei"WN7HmiZ>.B^jLjYkFjN"%E:q#C0Vj!'#X4T$ZsQj/rSOQpto.?N.68*@bF0^(aL,)J.Rn\%1j0VT4Aj$"lZ*sRjN9<4hK9KoR/j-OBiLF#StS0"OBfjJ*Nqfc*O>[=*5["K8^Z_`($*0b0F_5^1T7p6P?ECCZn$Z7&6M<BX_@-2%b539ceE80f]S\j]HWL#a%hN@Yo7i^!WA5L<6)]O7M41FHYXqUP)5)#;X^8F?jgP5)eC$]o"CcROTuo6Xee>-qRsj2m>+76<&eQi1%1kd\:;(Z5_W8P=5B*AG^U&?(Hm'Ira@*%I8-l(XF(BiUnO5CN%U2hcB!2c*2+9$S%JpQ_:X0baq/kTjn>;&p5YV1OfP0=TcrM,=I%)B/c2GXHZ4"0Ku]2AW6r"fD+^-U=dB6au^_3HS_L'bkZ<s0$?i?Z50W/(rDsYsBUi\rt3/!eoI;$m&GF4d;Jd*/Q?V=<L_N9j^@0%6)f4\Sh]>Kic\8ebcuBSo(A<j&rgd<>EobX/bPJ>Hkaf3oe&pgrZT#_>.nbMS7Sspb0hD>"-cO']hh1h(DI6ReWY'Q#D:Eu&$7s+%)Z=EGKl.p4+uWF>p*!Ge7sd^L&RXjmRE5"d&>*IkG@RCXr>$&k\)=u76Q&L#qk1qm,Me@Ip8fGPWWm2Y$KG)p@`:l>)tF2;"aoKX%\"d!+?4b2ZLl&a(WZnlXWYWm.#bN`Fp==br5]-\bW2?G0ERJ#\S[iQh89D1@+$T9K89-&3_;6ejXi^Z[,85jn>4?u\<8WF-+c0o'%Zt^9XSGJUWEIo?2"k?POPoi[b0Z:a8i7jGc`s>pr\DP:7`+khUcT"<o>MT4aT^mA,Pr;+D&Yq8Kfm^Q;nja?dh&k<9$Jm+=_lHqB%Yr$4i9R3,0r5-HrZ_alE<._"]+u3u5@Bt0[62$aKM$pe],W"6h`4W2:q2,GD)Laj1EbY``n`\!"#`)>h]?UA@%?mF7KPJ<:A\S5m%C=7&H_YD0V1`4KQ#-11M@Fk-eo7d>]ANX,fL:E%H\24-)(.LBE42@b!$2%5n@1ssf)mu?I5g2#2Wb7\3iXc*1M08rQrm>hi!n]2\%N?//E<s*ejkc,$-^As-d7mitLYH%lh;6#uO)]3](WiLmF<:n`-eNlH\<^1?L\8IDCLPi_KU&j^bKKc.J+@&-%HBom6&@:jK.&.^%%W0q4YO`3p4*Q*0R\3Xmfeep@/+i&rm.^#[b,=R)WKNb+c6DN9^r24io$:I&5[amIe5jQl8K-<n)KM^Q_7&/Hs[Opg7.C[@G!#ZMQ%S8[^;\]ikEUbs^Mb705)b84X\+XH"i>WYX1=pkEk6DG9@?uh&<+ZQAd-][q"kg2VbD-\hWba*pb*?3T)b=+4:"\UGC?'[Ur8EQ7m%>Mos3d82n+\[k+^nE4Q[@4k`d\0)*N@7hNH&QEG?"c`4^Nrld[X!AodK$=E"F/GY/UXB2XP5q]sXH[SO)5A)gf>^4Pq1ja;PX(Pk%7&'i"ZQfaq3jq5Fckfe1gXgTk5'"([I>^.o0WnR@@MZuD42*+I_hVVl.'^3b#arZg7%S-)eBtU>o<7g?<?<rm749eFdd/Ws#;(fQ%[:+GA1m],I(e7:+Y_Bp"*];4f1,rhH=CC_T.*78/#L-:<:#0?e,E#*H^4P:kpkL@qXB@h3$75e<1RglM<p8^pNorN_Uh3_3E!otL%3kMXqr'mOedX2bVZrJG*CTSb>?=O$#:QTnT$AhkgI%qK6$?%>ETETVK_a[*NMScHKLV_e%/pXf*7=lCR`bHKf!"H59:pl6",CGNQ%PdHSd-p?L'bDa(_%Tf[4^k0i@KfV5QL&k?U;XIn2CKQ?0_^Eu.!)+s%)&d*K7m8<s:p)rI=d._t>#"05Ej:)Cf*4Bh1,A9Qm_8&h%"<U@\CXm,?k/9sHnV6Ta/EeYG)c4U+O>RdGkm7W^E$>[RPm>H7JHg::L!Bl/IZIngqSpOX2HNabKH)ZBAiO/iqSI)B0c8W(KUfFQ%ZE05/$O^_`n\.U=XqaI^\-#rC;)K,OJXs2FNX\Ot12Rn%3'fZk7qPBOU'284A@2^cXt-<$JIRqqNM%D00k@k7=lrn!&[dJ:@!P9>%+;g-mIG06A,@o.2PK$'S(Kc5"N0k>qPc"Z-<nrDK5"cqsZL0?q%J=!T)&o(o:!A0R,N/lXB3\5.XsmD[71)33jZ'\&XHi&P''fIi%rAtju7ENt^<ZO8QRJoNO)*ENm)lj/AUR%Y1Ucgm)g)HoF=`0]`\X)X/]\C&20]*`G7<84L<#jjecEQt!\KE--^t)+eSid>p^nUnW%`)=$3;c&*]ec8-e'd!8iEtt2P/\GaG8s9k^@A2j3cp&+6<QK*SPQ[#&((>o)4Y&C9=S2V:>DlIKjA&%O6Qo\*XIKd515H4_kEs3P%;('fE5Y>nq;g`PiZu<F,bVB_JTWQG&2]lQjQr*%3BNRJ<!ddDU[IHD;PXj4M_Q-]'Ai]gGinB)P/$)nUlSd!^PcSZ.-3hRWlfd^2%I/`sq<A`Le`R7C$"=:%GKSI20e/CqP_76pl>HuV99-YAQ48kH&VmR?O8;usi<gL2,!M,,Jn1[3'j^k>5/\$D,p?5o2aC5VJ1[;+t%)VMq89;?p:P#M7bL$YM->?40[56/Gt^jKo4\\Q*(^R-.lA8M@&G0Sb#"r8gN6JuA)cK!+_9B7t'eNfcnao58%-Y]Q&9NMB!dB&gl%73S=m(gd6HV[sYido5_U"g>24E8"/RS__A:k+4L&']acCCL729OW:<m6)]o-K4GM%SPc6.+ta]Dp'=`j*5DJM",L%'PElYh"[]t(%ag@qF9C8c.rQ-:8qP_A*=gH8Zg(uKd@]!-/XI3V?g9!:=Ph0G\[P4l%aY-aS(0[51Q%LY4;nt[_E4&?T[g:95?qr:2Kt&0i=E5\L%QW/=>"m/KBLJANJ4pU7+XhU4=a1+6*</cTWiEA.i<84$"WlR64n>bfoK("5J"O!uP/4[/KIhW"p$Qb@(k@NP5bni%I&<D!NmXXhZ%VGBkp!q_SiUci;)1nc&m<4ej.?5*FVOY8s&F39\\X8mg7=2G"Z.g4i=%1Wil!>*XaB[J%`e=7I_-YOn0F&*rlC=(QT.`c=n.QAVT%;&2qr`jlE^`PN=m1/2HG$DNDAV>I&2a$N^XL&,7D-!`dA-;1(_K&IuJ*&E6NgttLWXMCW^a]dI5W:J9Z@aP2apB8pm!@iXH&P>qG%lWVgjZI.hDCi'/TZj%[%Ju&M_ZIVDD_e*U*?Ge3AXC9T`4&-Tm?]\LKPBStPcO>n$of,bZ`.>AT-Y+)&#)Gq/d`Kt:6Gn<]"ek')%4rH6AKYWD$EeQfLTrtC=o`2oABn1TXYT8rq@W;Pg%MI"tZq]0*3oE6@H>?"nkk1E%?mI(+&D0g\B2P\?.LT#e5_\275AIRqSsJrH%cXl//3Q4g2Rg\GBLXAr-N?G+blDlA=_AK`:(le<!h,=KRXR]k3-j*3c:$AV^VRd^c`'D4j/0t8Y'tG;fW^6p3g:ietRS$cqK%1]q%g7tTr"AgOX-k.)o-B4Xj0F^Q@BSQdg(c@bF@.7$S>1&5g#`HPcH_bN*j+:`_:=3-n>/4giLaJ`En<QoCL;^6LEk*2HHdVY^rZp>J%&V]QMiH*l,g9JdJqO+(UB7R4B?&*POC7q0;n[h+b&4W9k9D^QEcUF%`27;4a.9L@9N`^J1d!Ht@gNtfsHI[YSqQ5GQ67SK0Icbqe%"_@V2k,7=F*LRQlp1#6Of,8n9ip)%eY--7sWtc2L*YKB&K2SP>)FLQL@H49&Xs(?_p/t95q[3/M?B4CV8:-.1kc]`-/j>t+EH"K7%"0-5?N?s@h!W!W-6WCrZoKe.#o^MPL3m2Dt0(@)RVNob\UH+da,1V-&`ZRuH]l-5#6'M$pl6+q`-^@kq'CE#-bn8f-=$$\#E!?#E%XD_iLUu7/gECSd]&2LRMO9<(0J$t.Q('p<40m]N_F>Hnd/t$Y)o)nZ9Z*;BMWF:ej7.DeR8e.es@Z,ctM%5M781*,[636qQE"?<,%JPnGp.SZ.%g&P)<XsWW7Qrl$`5lE;R!h_a8L8%bNm@G6(!<M05%T'*l3XNqc]\*m+[Qs*o"I[uNb+j;4nPWj[Ehg#]f+o'MaU8*m%b_RK?Dq3([S46koWTL:[!8.u-j6A!iof8[cI-lh^e"JrA<Og6WVPac9RbCfe>4#1'CYHE&),1<sL)X]IQr3,UOZ7oNqBiSMQiJ>A%F[P7q/W>j$DPdLsZrU6FV;U0=q_/fLV-T30Tc%'GWFd)-NrUYU">pBPm?25n-[K@0_[a=3W$b:U2abRbEb'P,=;9".i!1[,X"J9+%9@[MjmkmegX-&nLX*VfX1K9;bHrTsBQLfmja1t6_8:bGiX.PK4"r%p.pX/;^QMrb$@g]4&MSpu.#dN<!Lp%"^j83JHOG-Ybp_lkh%-e?hc!k&F%qa+f8^Ps7#+<.rLE.t*ETa&.i=&!6a,&S8VeNBO/C*5qp[[pD2COBcGC;guXSDi;QrP[<.mP:T3d=u-b<,#V?`[\6k%"3@>nZk^\<Tsi(JhC8jL<bLCX'<<*b>12(l'C/&U4:NA*[Gb&=brO7!9(ScgN^t,=3&?i'[7\_.-j$1)U0\k=c-)[p\C#k$!&7RY%Lrn5f%!@K0"9VB9CM#GUBsb&o/4D*n2??-,4&TB.260lI*Se$#(OZg1QIP=?K91<cZ-aHto&A2q4c(p4IcS)H_Y^V_6*:>lbLp!P%\`d?Y<#,d\oh8t!s0_QC#=0aP/6m%[)B7g!f18m&N$U3!M30e-NQs@I<D)go`'FiD/?YMb7PrL^`iMInDel<#'(eBtA^>a_nb[Ef%FXQe2<9tWZTfB\ko:d5YW!t1QACK+0QRc8d%kT,d=HX6/G*-dPncrsMBbYGNN%Q\[,\mk=ELMj*R#<Eo0pssE[oB[fn=o)Z&^B0i%dH?ChFmS@LLJ9R<d2_q#eU0aW5#nS7<M]<eX4>=M@B;MA\uEX2KW`t4hDn$2K*j-@HYm\se]H/=PIE(5#:P<MpV:Oj"N/#AD954H%\RFA\HkQj*UX>H[9bh*T9jY0[TU"9?gB8cNE\lgsCop*GbqOc_[HH:*=+e;0V[1tKl4_'c."\[*5E%i,UC<GF7N;<.Tib!EK;];W%W61cY?A_aWEDTRJ'NuXoQ;2bc':#DM9P3[7MR%(;$5-aDTF]8UE=N"().$n$)8uAto)6=IoRYQ'WgmY&lW.+n,M05L%J"Rt*An/D%%_-8'ced7<L;@"s/^Gc(WYAnp;"^P`*Y_B(RO*ojjtul\_`d=,74$W[jUP8O7..oV1ijr0!+M't%\6fNB=!p$6S`N,q(boGCHFH.%)&MV5VhN+g/?L\+%G_fl1m'g!N!4(3_d$I`Q;):U!X#1hHa[g]JA^4&n6KUS=Fmh:1Ii8Yj&e:T#)#';>#\u^,li\N3E*W?,.(Aq%.XO)RYD0`YRN2tY2BV"?CL/k#m[0CD6Udphh2G=5IqY/@>2Bo7$$77(`0XSsT4gf2J?c7k1\me8=8A^F[-F(u=5%<"paS[C(=0_j%)NGh_1J;Sb?sV.aA.u0I""2W)X.@h(f#-u&[\kVhTM:F$Ubd/aZ/Thn)/K`@2tbE2BXOGr`*g$.g.m%%K(R<2DXDN*"ghc^Q8t;@%Xa]9uAo[M!ldmd+QQA@UG3m)hQd=R%h`>psmH*ZY(]W[oqq<,e*kJWLGkRhHcaRe@Gl7!IfiQL+Id4`WYF\KOQI.dM9CI4TD<o`-%X`o!];-LV1mrQ6,J,8--qG^0ASbi*(YF_L$oC\0*T>#[MlGG!i>Mjc+m'$7&UaFpNq(o[qh3qOfT31c+I:VC65?g(oJ58)cn[liZ%p\M(WY7&J-IeA*[p!^%/Eb8W_J,JTrbH6!'4<Dcc]8l]`MGcp*AX*i`b4H4BJFGsr6np);WoNFgP%u[VZu,r@16iC,brcfM)shgV%0rTP$?QB6D[RV<u((_%FVnQ>#RgYFd)a--jYh1j<S6>0%7mgH+@5$)+e=HR<&IgUDOmPD%7*]eOLA=r1`e"fT(.Dh[*f:2k:o-XF%]RmF^X`W[S).KYq>(P1Qd'+\%V5Pu_?OMS"=@W`bKCC%)Nf"msOu6Q(ZZS/kKna]mbi#r-FXk,:\8"2-lQpOo8/H0E;g[9_KO\`M%W_-#D37JKMD=-Zk;^9mTMPi_//O6t7;hUYOO\+Gh+kMTFm(X!+W<*GYD+-\SWZVc:UZte59j>6F2O7Cl0^tk.8?'2OULoE,*%krY%PRXbF*Prc,ojTUloM(FBI2,r#Y>riL2kuXQ`&Zu'2Q3-9WC?:[:K$j8\lu6uBe(bZK_@k:Q7uD]+BqKQ#MTUX2?(BWJC>_)+*FuB%r\dD*[]MOscMAH:%O$bHXugj#A,[q-O0JqHI]SNL7l[(ueU`cT_q]%`e.(4YfD;rbK(LttL7D2!@_-4!:@&[nd,jo$ODE0cd#a?Y%e;DMM@@[V4iS/r+7apoFr0fLdP4dqe'@pht&;51#e"+Q#J_1I)q+LC#"n$nNoY$EX05XH(!mLXP6&-@"P-oFD@:!HC5p*A]pb/\]%qO$`jK'7/m$>ZXNlSKdq@p#i^KaRd<#)dZ5i9R;ubU2=sr&7>OP#kig3t@`Vg,=YQB8*5)Q8UJ7$EX'eioC2?_XP!BrBD5d&Nk`<%+m6:=rmJ$ZGr;N=FN4O`H)E6]S'j8tRs\2jN$BG(-m0:"0I%8+/-Hp!hANUHYP7BA%IXYh$bp5a2GsCI!l<O9Q&mF("<ack_t1c"%0Y&PJ!PcXj!jTg5L@\SM0I(38hCX-+UIn\7:da2`#KX.V7!EZmH]`fKIJe-P6(T%Ngaa.p5Re2kM&aDE()1i1MI3[;S^T`]%/c4c%""i!L%T)1fTFW/g%mtk6_r=fqmQCY/,,2l)QLY9bA:;loQ3Hm_(B*>o$uXgkg$QH^7+`I6-l-V%3CH6;/gLU06OX@=FnakV6?g=R%p'nQVafe&O+MV&/;Y8)<dT]?P:9HI?)Km%.N3H0>e44HWopJ<gS^s*MZ1aP9D+>a&QT])/5pgEKhfU<L<0J#!&^H!f2EXQ;h(f\%%ir=Mq^$C\*fp*TO"SE9#LO_6I[Ene\ru*5^JMC',?sA3c_]\07(.Ba31Z6K%^pdCH[Iue(q4b/Fq]^/Ur'@Q5AOLnXkH`FJY!&Cp%-MR=J'taf^N='kQMIl8bK6eZ/<E;pVi_:V\KQ'qULq/f.2j4/o4`2-M84Y=aMuA>Cd-/)5prjq6>I<Xg(7han-k*Ie@u;?DGt)1m%&3=lM&9^<9)sr1h;G'6FphX>20^t8n'pAb'kX;A"bGMV*bi;lO^)R!BmIn%s-P'G?Kd:tU10kFdB@&pm7$-]=6's^[#<g4pkBh2g%]CI#pkMuI<<:]^s+]$gk?X]Ep!=Eqme#s,)CKIgiC83fEkrP-,HKH^]qdF)sA4<(c1%*#Xp/RT.`O^*WYJuqGVP/Xb^d'T0E0mAo%Xr@n4r2CJ):X%Gh@uk`:L5cKC9PC0o8RS=G@Yq&E-+#\@P/=YBP@?g#"UI6n]^YHRIi2uCl6<d2;<KW]W!amS1Hq#+lH0I:"FE89%F"BVV`!M0`g:f[5o.OV@A">%%&^u]VLH7pe@>ij;cpRo4e$aGI>/KAkA\9_%jKo^Fl-g;qOTYQ#5K#3a]_ps!<%e?!RW+Zgp4Q!p%:GiF8]7^U])fL-+*f)Gj@**M31^gJYglON,NXN2uXICVnNrgGf//&<2^a/EL]/<O.3C4,8f:,;0jI46cNU741n@3h-ngGk'1-G&o%oNWm%\9CB?$.;)-S^l=t:^3]Im"gS;%1?jp_SgbrjH;G85>d13Gp?%KeNa\m*UW[l.bb"W"sG5bn`>4/1[oap-q:57cZha,a!YK)%PEIbRAjFVbi$E/;*AA)iRAs*9KSnY[`u-%6$H$o'jDAe9OkWh?=>%bnAQniTPp%t7ZUi2aCei'3S%&:J%OA`DdB)H6=TOHiFA]G`%#QIbdp?UOZBR%i*pNlSTTC$fLgah$;&%h+,*2'BdK\dQC.a4"Q_![E@BZ%7>>PDS+rPY?.I;+BVhuAm2His<A:pA%O/"QpuRj]n#%qS;,:5MrPs(L\^2i!(IU+qn$C%a5\TjA[A35[i3i@"T(l(HmZK)u9NNJs[6ddNUiUde&5m<?"mu[=TfLOC?Jd%J5FLEaZ5s2Vfh7%@]+oM830(+H(s/-"-_HjU(iJJ.#8&k]jppiJh>(/YL?HZE"C_TM!)CDs4M:Qqc33k+'t>)<AMh'MDW#@\tL$%Yna6J6SZ32FEtS:%)Ro&#Ap$;Mhgah?F[c[""&+>IYD<:Yc=Up_>(@MZe;'jD"/2io)T]_/-QXojm":%TPWf@LV0F$K-al!f?n<Sk`l--%!Yg7Y6<5B"%,u37U1On]?rBnV98tX.-leC,6iWCAqNMsb.e(6:p!Kk2t:^kNh2,rWZQ"ZoWo#+nR+;A_<ej93%@o+Trd09u,XR1?PI"^g,,R,1n%Fun6FA,><LOhZ]<?u@eh;+@76N<3nYEH$k1>FZd/MWmMEmQ;;A,YAo@Bh1!C54]S*2h$%mNe?/$9dVe*5,sJRl-"c51.WNR-!cd&%3t'BCPggsK";7,"O,a9"VDk5:3b[DXKlsGgiX1+abp:t/Xm&O,Z1A&^57?rA(O`&)88]^7arp#QX!\07at8*$^)'D'W:h\W(:IQT%6,I$p::4'p=+Z(Ddf=)iFKhg%4W"aqgH13o<X4?2WM=TV0Ebn;BT3?u-hWbtJXGpZFgAQ(ZNqIJ2m;uOF8!Wl^$iXTi'lind3KIC%asi9'=S:(c=urT.-PI!"'gY<qWIS?\eq!Lh;1am=`CDqoohbt'?Y5,sWjUBMOC5B:XuL$=!g6"<'Tk/c8Z%udqtU^IA*d6`\Ht)%%,^:b@-Sge)hmk!SLZA'Fc+q$L4nIjE$Qh:Jp;rA"#p4ai1J:A;nO]^4ZIrQcE4<=@]CfUUrT#'uhBkfQYPsBN=B(bQ5YoB'9iZtV%^Bg^uVje!@^74s8J^oVZ"3sR;5k^AlLi=bqq+P,Gf4Uo/\s(p1+s%TFYF\](goqo.2uuJ/U`a?CCbjL3Gf:S`M1)XGO.L&!g;9GC%E.h2o5!VNW:a!PQR5p*Fg7ZoD&_NI8#4Vu>-%7&;;.)hGIR8iSXG,iLU&S9_LsN2^e)GkNe.&M8<RlDnn=)#akQR'$h$B))H]`9V%cu)nE_n5kXZLkn%lYf^kN%KVB."QfE#U])D+iT[#5)@!N=WBiu%`9Fk`ALKARePq3R6U@brkX3g=d$a$$i51>cCYN(<eV2ae8Cmp%1hg'=c*>Q!bjC^rT_-JRIi6.c<!$5;4h"iri?5/3A`E<FL\3nAJX/#F(7KC,NRm<gE.6e"@h_lX\;?u\/p@Fe]erYLb@im.!k$p#%jL?fMj>\9YW-'2:o-8aj@JI#=3IIG&\;=o\W&O*"OMn#\;<3]F!S"I"H*3[3[^mb7>]CK]gOY7S-Z^"X"6%]6OAL=iRB+\d-eJdM%o\"-2Ze8*E..2!^Tm+G?7p>-@WB^2>h3;_$@Sp@1.48[fe`F#:(Yi$<Ymj)0CAk8.XbttDpi^0LM#8cR0sU""aTGIBU=U`]YuJJI%JM*Sr4q_r]"0pJ)blt$<ZYlqA]Z1PN^LKWnVsen?@.;rXLg`/fUPM[]2_XujgG_?9JScp68K6E]+&kP2Bi0GZW`[8KJKLA^We)s6%lIq(7G[fFKA78.31e`1JUh\E#2Af'6gtuYHH8-+6"2))&n&4cF^*FpmqscOn!CL(^>S#M03SVo4?:!gt8F<!,Zk%e!"+D-/fA#Kf%/9gI@:?%RffQI+fCothk.]T$C"dEIJ0KBE`\Bt]`oeS]%-iSMSX6T#[K+R/a#@\uig>#oi=O$f^X+/Q1%a3&uV\CEjB+n$&Ug[lm%;jRf>^0M.#L=.?b:>K`Lr5>4Ah'7G`QGN;EMT%%Da!]_7rjtOLBG=[CU)fMV*iGa:$W&=3Y8*doNQW.m"BEJ8pC/AE=OsKjaPJgk%18fqeg\OSh,'A`Wn:]0J23ag?U(tB+pcIK59'"4]'^?3ej8!jVI[3(XZ]!tO2dRc=A#FtaANa"7M3b.e/_1TDV`Snir#$)e^D--;%m)*W<`UnP5l+(Z.K'<#,e1@i54i'+C5ECgb8\5Qk0!n/(I3XcX:c]S`#EK#/Qb1<;lj]!BSYo#'2[KO0PU*pP.,4)7nGB[uf2o<0%'T!)E1D@T$#%nU9s3Ok14SKXI(nuaR5MA-<)@V"86&;9(+&12[K]:\5qa,QifHI`QBT9t+Ttc\O:gQ!\LlmFjcp?Ig`LF2mp!ml>%PebN#lFo\X#+.q$T&LZIo5jq%YXUK#2'j`S"mghWD]a_6F$iT6mMnc4f0g<_7J/N,oO3!/@0l6*FXt8=A?^;?)URZ)"EU7,:/^M+%&0ER9oKiCAB[kJL(K#9r")FUOl*RG*Z5Pe#g/Rm2-J1Ig%4'2\)JMn%%W3Y;$jfI)%`BDp&gnFY7k;>qZXsP357kLsM.;hs#eeOK%YIc9iAV]EOJuAVWoOdmj_6oaZH'P%8]ujlNb8Z-8/PlsEh6i-/J>#=kFd?0D!hhaX:0Z>&kX*:7O?cdhB3$7d_saq*jb=K]L)Umo%'QEZ4qX@3mB(>k:`f4`VH`RR;lo*)AOj#TDB6X"=@-61?o(Ag)#.'[HW_dSuCd1,-fZT&^aaL^HlH9^0Sqg0!5J^oa?aNq!Z5Ara%2pEHKQPZu3"6e2(;ErKgeXJJ(+D9234.=-rZqV(U`pFEh#M=g^qsG^u)Pln/IuKj&baFUh]I5Gl]"ppsC!!deJ%Z`5kM(Qr/P(L4%gThqZK>/%np;U&R'>@4Q)["O:NE1EQVVn!pfY$WP)duZbNENbY?eI,F>7NY[8!fN;L3rM+%V4MfRF!9B#8BKJfJ>gF3hn92fEPU:%Tj*7K6Bfp2fm(6'\0&5JmUt]keSp&dK>-$H62Qh`HcuI."eiX'FLPhQn+OT`L\iO8>8e#jWE+QH&b#n24_fl)oUqq^7FVkK'jjL%%gNW)?D,tTZirerQmbh(1;/klG*R9_,`EX#DYW12,U:%R]:+aF8\PA$#ae3h<RpKUtE'ikIIZIN-oA@/B=223R?0WVr7ZQ'$mejrk%aCT3,e+O44F$5Ye1?>$MOAXGD/ONi^+02$7`S/?UYZK4]k`_be3'iCNXE-O-4]]!G7]O=c1,RY"9UMk2rg2g5pWsXUoS%Ob@D`CN%6Nhb>[f,ec@ng%@iVSug!clV(hrrl;T=YWsE43pSVZ]l&A8^.P*]/@ejeRJ<FI9@+P[QH%XYHV/T',;)^W1"Ej:YX.ps2[4r19\N%%qbYp5!#US%ru/6V]!P"bM?[[m$0h>9[q[(bPCL!Xnp7rOoF.X+bkM>YrF61$uDpWbbm,'O'Nj:c"Ya]l,@hdCaP8SS?]'^:QE70%r%bjs;"BV\G%6O2FdM:Z^F.<jb*JdfkEJ6Y+JQaP@'rQSkd*>0Nj:/<]+LMRrp\S=f6DOV!e;;srRXH"?:"K%qg*.gY0mahN!5Bt%[D9AXZ$^f]g'9X;.<7\+LZ\IVX4p&DOm6,9C;g4"a:Zia^-t.@BQ\&7q=n(iggC$OO.[<I+H3[A)JJ0/Q8VKk7\:2pVei*EQ)L@)%(M/E%njQ=[C*SZ(?6$R>Q/hK.)gi'sk=d,!U0NH_*H8WSAdYgF8'n\N7nlHB'i7.<XEX!iS'`8P)m/JKK-+Ac[aXc'cg0km68pUD%G;'H(DIB.)2>]U8@TQ!"#!0(X9CBmIauVO%)W(h$oKTW?9@N>VZ3IQO"fhD(hCp1,6;9Po`OA"dIIcubY<Vq"/@j[95fI09g-FNu%V?b]mH=KM^b!2b^*c*>FU_A/AZ9_4PI,M8fBrMB!F+6-DL,OqrZ8[:a=6`7R5qj63J7rIo(pU*B)AuG_1<BS0M?m>BcaTMlokJ@[%U0=a<VfNKE7Asa4.jL.:/bhr!c?YNf)8<.)ETo.<8'lf/7aUh-b>@*@aQ&%R?[Wb*%dDg=h$rtnK^bD6O.r1/"4b,hL;mtC'\cm`%GB2+T"9.\ue7.P`J?sAdO0Q+GNN>6t-DRhs[^J#\b;n/=eooMr2(Y]0Y(W"-jBi=Qj2tWt4cIfl/ek`g(RtAu=Ab3-;5OC]MkeWf%qaiJkqQ'sPS.?_;bJ[]L[ljIY=::ht.R#F&?c3J5lY[/<<i_;Xjco<,jD#ouV93-[s3DPh\+[c#@p_-^I:jdP]$^D!bMgi<\@3jR%Clbc<D1lI\>SMZH'&#)RhQSBq9TQAq25@!$S^j:WBgrmbC=eb(lBZqS=^bZPr':YH^Z&+!^K9jl$j$CAZc9`Opp1b83JIF3glGa#%^DI#9Q=lc>a7>t&5,u!cT`/9)h`FQcJ*j>A0>74VKY,+XQGS*Og[CU!eIMBNesK\hk/BU`S2#;-Ghs=;?f0QoT0@&jgmUiZk0L`?%o_#L[o<Lm,qRK,Np"n!-g9,5?>b8QWSiW62nb8ZfYn:luM)uC0k,C#^47ARVESs)*I<mPj*.MW88+(3q$Po"R1b)EC`GH8'L5DrC%T2K<6SX-Lur`l_-`BCVToM>3f#<Xm>`0.Z61[0+'?6J4=o]`5?2;OcS=X\V/,G4,umY+,"5V>0K)d)k.Q&K)?D@kQZklCZg$?E<%%h1/1K"(d=;4PbG[oC63dXY-%O#5!joA!"s%o6-ou%%p2lbol8V05@'$HZaVNbAK8oh8D`L1;bN2F9?B$ZSiXr6Cq'Qr:BC7jZe4f%HYsq<SZZ8O\to0Dq\m0Jo]o0J7s;RTdo!%j[B$Q[/[ZMWJt'';(KFFEUR3+VM+&Z[m3,040W4aTJd'(l_/7X3FdW890H,RX2$Pqp%J?$q@rp0u?=Nbo(rbe"B*YhNfR4a6NBTp+cdEk9_Ob./f&pa&f#**(M/6LNH![Wrse#]k`)FeVq#VST"6oR$_!&gF\!Q(k5]"'sr%!S'@hc-B>o=qI=Uc)t/S^g;\mOU-bV$-Qq?GYU*s%AT@e@s"WjG!KtuADFST%(q<A&2Rl8pK#7SpKXk^VtV"cI-r">s1>+2UZiP!%/\HM$,@rTW1)"N5+?^*]qC"LbqnB+;<!dB6fpD[K-A*e7#h!PkH!%P^F<^SrlQ\3oDSH+'"rc9LSc+=pO_k&8FZnX)kuV`<S4M!c%^sFK43K]JrKuLm9o_>$@#f&G?bds.tG\!U<nq0X^+\N3jq']-UUJOI&5WcP/kL;c_%7];l8$c^qG\oO%m1;M5&^c#p<1C*$R>>'5%5Cq-%ORV=<`m&RT@ZjOm!d\j@I0U0rZIdS9/WLT/5rKh'Po2#H"-!f,HFH25pXqIXc0IN^i#8>hhX$.iip&31QusjfZl2dUBP@eH%%qNWqE7kq@DAO6<lt2laHUtQ9KS^SP*B?5B>>N+1JrQ\Qg&dJA[=4UDUu(/Z1>&[2)sN!I[p/H*CqmpnHBI#m3t5.IKL8g;aQq,B%Ej.HQV5&;$nb%?=O;fuRaS8l1b@['X%n)Wsg..p:8O`#YSmFTC:?]mW,@>oXX?6n.-KSZH?aqpC($JPg\FV6kkg$$%>QsA51pe;G%C%(hF3SA;!"^;.5G,u=.D@8WONXh%k*>M@/_tAC5Y-5^0hH*jE'C[[q/XV]`OF=\,&p,'#[LKL(\_aQYYdQ"i><':("]pdnK86/D%f4I'\F(47''iZu^EZd2H#uo!O_G_*jR:`n$!s8UML'aSZK]AIs"':R?YNCX>Kee^!rd6pj5A7<LAg/93`[dli<(fNE>Mq=!b0OmT%;J@E-Vjks#I(.*Q6'nRaRJquN]7t:hFSai5)T@;^!LlfpDfV9ld],I+F9/Ye+En'nbaghOE]gXdP\DsJ[fNO$<#l[D:2KaZO=7Ld%i2itQA,kD"cb01e]89AU>3Q@Ke,ag]U/tIf`sQ(_X>.\:liDna/(7+K@$;qO!O@6=MU/NVaGGEsJtUOL$7?V0+ur)gCQC^YEqK?\%mnJ<39m:OF\Q=4WW8#YubV3>;km&44I3R,qEjmE@csQkf9NWPTeoV`CShR(iFQDJ*1]!bD#O*A7i(%Wf:63`>>H1.2.HYm?VH=@5%Uku[1/^Q1bolN6[nEi)C;i-&*+OnXF7(;0_f3P#?ae*%91(RsC.Ll(a"^!,km]r#qKbN1&E3F0+2BgPC,cJOBr65ItP\Wh&#'I8D%`hqaGi4RUDAg%8VS*islIfMkB%7hndDQHqTJu\c]K!hC9!u56n"*jD00NO9J1qoL?l/kX2=,\nq69,A44>B=99a7s'2OdG:,2&;N%2FTX$]Yt@g,UB]$>D@<6kAL^D?6J4#*<]DbM\IH4KBZ!)j?S?NK&*O77W&cVEhHG@:Q'j_%CeZJJ7,$AH%i:sZs-sf_&$--3LMWu%Q..7+Bf9m%,G@EN":?dk4s7;h6p`UX\+$I3\V%]gM`cQGmrVW_?A9)S-1uuBP+.hWg`$5DMAkt)R8dRE,.qiGL(-F:VsJ=]HCNmD%o[7Pk_l%)%$7e5Q9rc<XAi%JA,;?`X)ML)iKU$Pi%,Jf%-+aLY:l=.e7Pm#"OTPc90m9;:Udm(62d^<^;YNoa^ju1>8(gF>^\qbt%4u\YV&\ja#LTe"W]RKhH(u:56c'Vick5(ppj`D7K/s@?PaGm:sN(ePZ>pfr&-QZM>ja%L`-Xj?SkX'!?Uf&h>lVYBe5P)IN[YJHm%H0,m>#p320TYr5`l?Lj)ql2URg'r7C=M@#nE$Mn>9nUabo9m_`NH/]-Ec=9#'i=k5,,u,W37'B+Rb3-0:?%CI^K"=TkCK!t\##ll%_26)?>+#41CChK]4l[nUc/,@I&q#[,U(;Db2NRo!8733$?N`QoEbs2if9c>Uo:9OAFHVh+Jd6RI,BZ3uSZbrh7b1olV8hFZT&*#o%HeEe3i&>]UiB'ga*20UU1\susA6n4;E5Kcj@q*N-5l,s]TE_Gtk9pTq`1kc./qH,LQq]7@;nHbOBg<@.M[:TZ;?f_9i.`E]BM.7D%ZXa;lM]47Mq3sb;!7>l"0rjOnT=1/,pe;*YWo)$r<["8U#<Jp4mFE+#HEc?^@uYWY75IStjNX#Dp#'IoosSjQp;[+Eb[0`#8%\'8%)]%(YX`eL1IEqh=YgmWn]!(SHJ5;6KIGE(tE]+#;%>Hsnip.+6o$p/)<=WA)p#kE3<USb7%M."<7/BmjhoP*/an1MT^H!AW^(^)(%_$\?.1cj8IrNfPOXhFB%9TCsk:c)n:)`,2OY=@V70.;I6P]MI&_mjM*HmGY(2C_nb8b-^2@bQc_8k>1^-(C&)b>V;0EYO?2FdN00%-Kkd<T(iKA.T3J^+G%W:W9@VUT1Bi""SF865XRt,@!Hi.Y5rXMRkO`f23GoiZba9a^s+Q]DDX#!r\u\ET;BAOq#$UIqV5Ib#Q87L%*kla\,!+E"iFK:DoQUH"VopNWhE":?B5W'B319*g\Rqc(p&'a9mF*LEhE"@Q:>L]3q;Fu=YCV*TaSS7U-Ft9\O,lU'!W(ugpL-r#%Yb:&0J;nA6V,)47"dHS.#]pFsKQOD3\&LfT(U!_XRONb3O)"[nb+fSW6UD'O!E(I7OjNdohP^tbOZ:(iDa*"`9_.91D]5N'9fY\J%)n7JuAtIsAka:&=%UB[nOC&JX;'B^+RG^Xb9V(MQRC!4YFDMfl6t'gBNoYlATplYGXd?SDOct+^=JKL?cU3V/OE0l:(&cU37/^Za%/1M>J%IBbP"Oq^Sn9qcGrH'h@5Pb6UJ?A;pBUZ\k_7c7gLT1,>;oLqb2YAt.N7eubG4D1%<@XiTMSq+(n5VrIG&)ZkLRkZ;bsfBN%cluL%/L!m<aGIB<f+>2sT[`1>_</6M:j]f>I\M\pA[OUO^lb)hH'b#SirY@>G%FcgC_MV]"s_3&CRc#n;fdeKVQ%NiZN_=rmb/;0%NOCTkA;2BA`U(-dBi"jRe!OGW5gY%"hX>).&L48[pdnDQMFk`Q?$eogkr+iY4ViS`e.m#u80+*HqB"Ic54gh3DO<\joK0;dZ=t3a%6Nn=%M&MPH&N>8cSf8!S'^;=o7jEU%P]c=5NLsT+%RJ!=-%NMFA7?=m,\frihX(,$&gVCMjC^(Wc_G(bnN+6?F7:kb-4q1-\]H]'%Uq*MITZr_LWfOjI!b$o-,iYK.0ZfcN-2tIdGX*""+M%bJJm+L/m*TFP852AV^pLcj&Db*,+b,W1J**Qg67,XlascWodoMka>C&ff%=gMC=8FVZj-T3WN/D"c0YuEH28hmscnB*t"W4Z$=ghc(?X'QoS%7nia-57(KV>tH?\=h%2rL=&Np@4"9&8ElVr;7fh3N%G5otHRo%:*ZJ6^5Un6h)!q2,5E*I'\7&J/9!VWlmG,.Gt%hRA=:0!R'[C*JLhR-AA/\<5+7/KkQVJud<<$7fehb\G0_e`,fKkQO`YF&X[>H"%i::nQkG@h?R9E4L!RX(\Q.8jl<.R6,,r^La2B4_/_WUfm-*Rd#6^`"9KGG?>BkT0gp+nqo*XD9+Rr1Fe1-!U(44Ha$/7FrX3VPd#%TX-qNf`<jW]6r6loVtY=85HlPTP8G?JQ&`k<6Y6n<+X/bD@ZPoM3?O."4mVC9fL\HRQRlQ[.[jLpAQ"oZL*[:QX>7;eR/>nrU&M?%naBe5pZHJpo^S^Uqq'a)rXXK(6Ad%d8W$=*$*H1tgVD]KJ\M&s+9&1qI/AtSq#);LrO\t7s7tpF5CNFr5Q'J)s/W&a5MgnMs8;?c%ouk,KgYY-l02LoJhu<Ju^KpU4YPe=fg[3;RZI:3$p%H.Ms"?M!s2rrCg9`H7qJ?69Uu929Q8bhZmSnaV0EqfNnSl^-VuLW2a8`V7%s7-lAe%^A.^]0qqoQU)(s5V!^0I*5uTHQSP)$W6VOnC-<_EdNE0]`/,=Yr4C&?1J=Y^^bIZPjB[jkm;?[+%?KCiK\.-)<0pRW+]*%AGGo9T1nMhO';iMEAW4Y7@\l8PtsXoUe3&@Qbn>n/#jFi4'gIg_-Tp4j]tu,C*,;`h=m[$YdE'7G7]<+.dXsn:IX#B5`)BU#HlJa%3_J6%[g%lK6LeIijd.EpU,j,f_\Ws>"Bi-:/"-FH=l*bslajqkVgpOcooIJpMQ)QGeNl)qRCo]/'.9FQmh9&q-%?B'i(+s!De7L/%9?:$R)Q#XTrW1Nq]S[pr&5ukr-E#C_:=i3>9c/QK%RQTFo70<*f:L/rEWEOL$*]B!]L&'=)"0Vh654hNL5M%"@4:U+KOlV4K^ahO%)JUf(<L*dh.TN6MRGft+DH>ZUFb>s^KE;o0R1aR$5e&Zqao6Tl%Ge3Tq>DE^WWkFU("04t-i;FT0m"sYRF/_LPWqYD)<5n86,$Q1%/msD(K]f[\K3JgO+218)lsll9`jc!a?%recot$"YbP,k[J,E`%<L0&tdrdtQL-9BXRN1ltm*0.+(Q23JD(c>0Nh#3*m8.:6jjH)[%4/i_LG5KnKroU[Qr:URCMf8b6GpGs=pQ8&NO!&2-[r[]DD,]lF5Y6YbfOB1i`6h96'XeARQr2*2W%meaNK9l'5\&:jW1us\q^<fZ%hTSmcao.MCf:a#^2$%n?#&o?>lWcY_f-)d+d%G\`kd-*=X/W9SLr)3dh4T;NjE^(j%5eXMPqLBLWBU']N+-:KPm<+j'cOVdl3Xa.%eu_#9^f5<$g5pgWn>kcd4ArU([^SofF\)A[9q-!O&r8mLXkCZ7%Rf+jk:gV&:^tGs[k)("LheQE=cgW^f.o#2D9$&YLJ:LM-C)=p%T*?Va6l1/,.&L5n-/*JFGAo!n%"X!l"CFc:LhJ0-(Mc>9e]msho'Oie>MJ2A5,5VN5%_J'(r`Z_M4c^Nb`o#OJXY;UG3m1%he3Ie%4FgPj#@pR^1UO0ieX.IH^>Y%sU?4L+-3oW0Hp`JMC`qgJiHjl)\,^LnWk_mn$1P\3W[RS+h?-LQ5blqUJ8d$/(1Wr=K@?PUKOR>7%-2>pj#RtlkD6@j]qYE.LV`7sraHP!7ahDk]-K1#5//J>XT%)Jr90",3-TIKKO%6?r,81]HQ,Fb0.YEY9e1&/;f7FH0(tjC[QpO=3%VQQC,bXD%):E*p(/-r_Z_+QDIlaA%bT8'-l5ZQuWAfnHi[l1YsC$M*kG[6fhY05L9h4ZT:o33$0&_R^L-YP%UPmnF;AY8fI!J?`f%iJeKU8L8mb/dARp'qh5'i_e6hNRDu:g%.7&?T@0mg(?HH$=U69CI,p.HO6eZ+*GM=Gk<jM$LOatF]6R`\t6`Gf['\+f7CLXQ.)pS%C<%lKOQL5c_QN6S%O%3j`"R;ri+ti>i>jsMn083G5ERs#LeXsS5\#Y^g9TTr=dTFJ<rTsJ@ZkDkneG<-HsJ2mM1mmWRLBk_Q,CZp%N@uld\5*#Q8fUG]<AV*A86teA>.:rIdMW?_!MP[*5Vt9N*Sh6m2(M%kIZ"mlc82!r<+UJiE6^C@[1hAc=@u05XJ,ZHeo.P8"sdS`%f_Y![FSSY-8A)+3a!FN<RI^_Ohjru?mU/Q)P+It5UBq2TBb*rPaM&XU3RMY9;iL5[lthrGI[&p^3-"e=.V+;j!Qkr;4XeO;#1pX,%JoP>M%Yc50`fH9;dDhC>m<u)pd'oD3AY(@&>AMr/dFJn'+YJJo7U?;O8Q"2$>n[^o6&]6!Io1RXpUW#l1:;eH7;$V=Q/G13-<$LR%55cKHgO>[!]RIt*Nm+6aB+%Lk:D^5Z'+.Ppdhp+W/0dtR0dj^b%iD'/lBPgbJ;Q''lsc(3ImDI%Grt,&U9d!O>daiT7HRiH7qpW6%>UW*.MHeJ[3hN3[UJg$1JVXcdE2!as;C6QJDWOq9(\7aXaY9A0#FWX.7/mGfdO+RY_@7Lgnqpt0)hh:k?Q_T%Nu0Z3q4-Hi"L9]i%G(N;/]ERL<]!]gl]6=Zu77cC!R,/t,^VN+qq$?40@nPd+>sf@H\rQ;a[#liW&,.8h&qcM93o5dtX"!iPUD<r.$e<b5";2a2g3^22%.h5>"8e6(q;H#8lgP!*Ua.a>E-bJX5.-HpT1536\L3dnl%T6X%&8k2X;*8.I)F/gq"CPG"_gbQr!JtN*nMfKkB?s5?.lfsl&4Na>%h8*3ODN.=dePIG0Jm[%n*[`;nW&@f8_!V@SPO8rXKc_9V5FPqZb$+DkaWFf1(Tht[]^cbeSq*4aUC0R\/\W':G85Y3>N,8@AtLo?%>+H#\81+\rQ[GdMUtYO=\k_T`P^U9;(K)g/jTNRaFksLmh%6VYn'R"1Fg\&SGFC(W'?M"tPR@QU1X$2TBX5OIp9m.a;.C[@oLQ8L%>'6_Z7)j4c%FVnb1!eHs[##>Nc>A`ti)?(3.FT&"Algl>/BCUW;k@+X(Z[h\7s4i`BhP\GU+iu"nZ6B#ZpP#2Zp=bm@JWtEZ9U=P%1cK/2;L0d_AQcgIc.iUee.J0cG3]WU+"^W&>4<bs$6`QM>'K?eq?s3gm+)B5-bgg+K0#&[2Nk'0!,7fY'lmQ^/(:$i4F])O_r%4a%Gq-&Q>-UH*Jm4kZ/I,3KZXapfe)6k0=V!Ek!u-5_c=5/'KY-%UiQ-U#&plL%A%5dc,FH'hAsO9j[G"#*Y025B$.1Z5bMR"Mjm7o7%K1$,EZrOj]^b.]]ERf*\+k\l5lf@A"gS':\::BL*=K&1XBurjI1Q.k6/_OP+-p<j$\1XCpQ[$eKgR5<^&%R$%<o`[R[j0"J8uO(K%P6iYeCtN`Ff)MV;QJj>;AsXs7Xtm!^_dlQ&6\9M=WNP00*Obn*W9u=T.!+LIDAH$H[[?ASG,hCLp5<^0'?gF?T^ol!-;"-.)SJLn%.mK%(QbPnC)_;BCjuXYbS1LTGBd4Za5g%:SeA9qF.A_hpg/Y7)ZI>Hr99MQRj0;M@]P2sUBf%K)kpH]Ed`q3eW!iD:S"OUIR[\]Z%mofgd+0+HOhkXK>q^*b#E4\K,5CTUu\s<5;ce".B`ILaZh>uWVBNLHOZaZ'=cX)=YZ%Q_s?QF\N]L2Ro*jH.!)a1:V4B/1\nOL2#%Gq5ZEqi7Xp8qC[mq7]#3I$q+[XM/3/V75%"n_FfJc8<[e0Lm#@0,Lj5AFYf"[/3&F?>F@mDQ\f_+=m/J1KYbC7]LaYjm9.D,@Yd(%k39l2@;rk1Pe%QSpuSqA1rsg_h^gPHYh%lV`k0(24fh1(o!r'LIcu(=g6)5P!E4p10_Q/>[Gu)D=2Al`]<=eQAL\`i'5AVt.hr!]%8%iCAe+#2Qjo2>=jN$._;mX6nEMc=NIP^fg=BG%5&SZ.fEZidqKHV"i*[K0U*^H#nZhs;*"=#pY4+/P-W'gj3$_W`YXgBh);%>8a%)$($/<SWJ=mp$#R\pHO7a/5LQ+"1m`U8$!<[3:NrKcp[I/&A\nZ>XA]QgYc(;UV[=>dOX7hD_UQF:lb<TNI3[mXt`i)e30.'VJ:i%@>U.X]&.m^N@t/IGp6/71=S1aJq:X=Frcs]JXAqEUnh:cGbF9O^:e8M%CkWh3YpbGT`?l:[lTnpgW6;g9S%nW8/WIdXRa]r4daCo%/2N*>*4,&VaNZc+KOu1b!82RNg/$<p\-;4Vk_;N\b]Fp/>`u[\\gt$<3QEBhK*D_r5bn-!RUGF2Xg@;nYQ>pl0Ip-q6\ZC,&rKto%!O*95c"Af@"1[1lY:@qT4#:BTZcL?5'#!PTSn2X]j?7W9<AQohn_kCl\:R#VQ"'Z;h6<S`j[/.Q<GQ0[85Qgi1Ek)Y1_-I=)cUFS%lX5)@WMA/1+t5o=[Q\Pokp$2XZ[6gMc$M@r$0K$[L`P^1hE:^&M]@NmQk0=l$n!kG"%SVOocL<hn'"a"Yk;r<lW0h,iS/!cs&C.\%NR@A$(l#L)fm8$CP2W!r;#O37A9/[\l+4lBW^l7t2[mRMfm]UUi>ZC+@4,5r^*RVH^hH[Lq2PR]>kKZ^?#N_2#'B2=1r3H/iX(/P%=jc4B#WFX`Q&"$i,K4KRgMI6WLq.Lm0p"S:5j[QNY\D+n_C\nW(C?()oa,cl;^7N21C*qjMG0cq`6Yoo[%Ye?YofVI.3l1FIasW^%0J=_ZP$0hpl'0]G;'"gK1*(g1Y(k^_W%c5Sf0,PP#A:W6GVp.Qdk)m1a&3UteDQq61.`4/"r6^mn3uSqr>\D39h:TD/C%sXGLSX<%k<.uA32`Lc]IOXXcdqmT3[C9kF\Giol'U;W0r$;]:6oYlE+Ukq:ZW3<!?Ma90@qQ9RfR;Z&$QPNghGYG\YaS4PcBnj`EfKp0g>7`%[Z-H.%3u'm27Hq&+qL!_=CFTWUUXDu3^P/-@Z6Z>HE/P=D/1AL@]mq@jcH:n=`IVIb7pK"rIq5?@&q1.I'ZV8\NNaCa%XIi!fGN,%176:+J074,m4Ba:fh<@T#XpBn&2!g7p+"m9%)]=]GU"tNX/VB%pJ*cH=kK-Q^9MeqfLG1QQ5tU_Rs-%-m"_d&M2kpm:ZlFfN-@Ig%KQeuS[o43Z<,JaUL:]R:Jm;\&B8^k\\pupl[hjn>aJk:E8K;Mjes`'E9`4<,fdSP<9XMTZP#jskP%Hc)[s0YI3i]mR;+TWrkn0$;%F^n7+jO56$#L9ScdnHlRPabjhTU?lBV2/o(8/;^3pJ&MAH]79Q6ldUI#,ATD2-d3ln.H>t_u*@l.8^*lSC-.n'b,TuV<18^ZF#\>%OJ''e"We*+'1bQ10M$.<B^rOIdp:e&*NYX6UKnZ&@,JV,pjTGPZQ'YBFDDllAC@4MHE7f_R^AFd95)sPg<P??AC>YPn[]W+PP,-i%8\9UsTolb_#Vt:)2cor1L:H"0no4V8R_bV_MGH[6HNQ+=AL16J<AU:BMi.h]enank\m:*BjO:HE.[MjEOO8NBe^!&kPE]B9j,-:l%SV2k!_Mje'"HTHd26n[4n<!oN60hP&"a5^bQnUo#!.cSoql^o_=?@n7(>b#4,p)AO?k\M58of@+!h5`LW4mKnf^/8!S/+mJO7IS`%TTCYs;ar+WMqWID^f++NAaNGI:Hbd"ZpY8s[!%JV>!!+6-c*t09]1*V:FPt+ko*!/in;5NV:O,Z:,N30(V,K,6Du'\p8YhlW3kl5%V(]k]ko0(Q4jAVJS8R^TM#e*T<u^5*T]*t*ShM#@ROaHI22(JAdoh(]a@#\fbeN1#qJi8,ot-sq"78.4#DXm(&'U_I>@hC1!Ge8/%U+F!?<PJ$D:X_\=qa_de[62-"2T)_DKU7OA,XENm6p4G@YCoqLeD%bsS#og>lCh4Xjh5p@hI<KF-L,I+VGO,4FY-%;kd_S$G^I0d%l%-:V\A>(*]n,ZW46>]936R'BH4&C;&;#"b>;Jul=M`A)Q'@#4F*!&<1d+ef%o8ZkRbiS9bL8tE#7"_4eK@Z:)_<je0\UZ[H30.d%]a^tl%.%\SKAj=\\SaKhrFnsS6Tsp:LcnIN%-9^'gsblqR1mfnoM1LGl(()!#Wo%(U,5$Ga6Z"[QDQU.''p6t.f<\Ib#@)_VMDAD%DBsRthI)8<Q+t^'^dGr/Pq\!8$Io9YVs/b&^Xc>P*`c!0-T<p6i&kT=C&+X[:C/CVIOLfCDSJeI#Z!=b]I].@9]&C`di1ll,PEt-%*SIdkNYl93!*2.FP4\85kj"9Xl%'&7c4t]8kL\9\8U>X7iq47^UpkbON#kBQ`QIZAGe'"0+<-1WR\$<F`f-a09'sNn:G1%_I>8l)%IG(QbV)LZT[1%4a#Msr3KU&BhC%d@a-g?b;+eFkh\<):IAXT?L24-Lnm7DV+X47pr-0YjQ+aN-P8U:VT:XV=U9%(W+MC7^<8WPs;%S<NTLHUg1El/<;UVtVo;mm3&Mj03eb$qVuHE$XdAHIslSoS4\Tnn,ClXs?0;V[+?`=-=VJ<LGbTStq,Z?,]*%dR-5KX".'L*gT-5%f8;DIJY]Vs8CAIH3/",9:+`K2DXTT3=HIs-jYKC;7p9/=ab5;e07V$X^)`U>i`#d"=IiZ]kZXs]MF0Pa$+,#mRFQlLj/V:3E6<N.%[-IH6RbW0(ZdnYA<3Eg);Y>DnWRJl-]q0/Z1Ru\(lh,W]_DLgk+7&_L8sW_d8if_s+Jk!1":Bu^:0K?--;(C1>oCS2EHu(hVZn*\%.!CP?pE%P>44Wp3A0%fEDl`'U^o0fkWojHn7eUmqom?iFg#GuVVuF$2>uf2U-q/@%Yb(:`mIbi3d-LMs'@#@8Woq8-2j_![c\HF=%p>N%7__?diEbS8g0s)E<9hlf+j<DPgp:f;e<V'C1\*s!;'4.K"U-rd21=,)^caU*p6Ts<->kNILbj5'OR'YeOSo5f)W*&9?lhP-n%X3coS4Wg*uf4G<kWmdGFNK!N1iRU`t/F-?OY%8.6X.F6^H5i2s^53oN_;7r[I"5DpDdY`c!V1QN*BM^ASNtctD9/*h95%JSL\Iaj%ojIH?G[L&*H9pFn=YBTc=^Q[6?c]mN-h@p[3B]d*Jj,.hnpu$O+6UWiM$j)S!_3EBO+QU:'(jFf163dKr6d5%I0\,ITGs+IpVI=7%5XeVbg<L*&8748JiDi2$KTY8_[gMsYoMX;e]q>o,X"Fo:Z]lToU0"n(:_2;tH?uV.oV$2jZN'[b&5@5X8HjOk\H@iqIFs1GHQG'Q%qBjk14\o&]IGC,0!qV"-*!P.KX]3Y+OU]c7"apVh=#<^G$Mk6.o7F^T<t>I_qqJ6)5(8,3Q)UDehqG*r?WPR00j2O]/,Cr=bqnI9%$b>[_,@d'[AYadc/6Oid(\H[f=VV-Id>-DYSiE[+5-0l)]iKb#IH7mFmU*8W5-?niYc4GeZs6VZpUGh4YsI5APk\,kUV'kM-l$6d%H!3A\-%@sA-JDf4k*A/`Kq^Chbt<)H\lAa!e'$"t[[uhTgm=d]RhJ&V^$'?LbhNWK)L*?!0n;E3!j,a`i4>P(*QC"1C,Kf]#aiO1%cs3\0#dsmjdBh09J`nnoI12c`KfiX92;DA'DY$^sPFLD2BXDI%):=<1%,#'="<$UWF^7GgbV.1.>'EJ(SEir-aUMi"hmO!G<cB5a%ML!`Xe1p;Wa7R=EMKo<RJtFaHOT6^%\sOt$dG6XcUO*VM2%/+J%Sf\8B*AbYBZY)fFk`E9I2u,L3>*fs%'H,f<]4:\\:Wgm6M:hj%M3&VkdMVE<6"oO&0#=-3>Ps+<)S@mNP6e#s.a$]3Bf5k?4PYcti10q6ZBq<HPQ][V2pM2g%qj)roeX\%Z#)=VG$:e)`A:crF(H%6%'k:!M&KagAM'MbBWhW`C?:k@`F@12cNgf#k4`-i!V-JHa@=!,)gY9OZ^<6*@%7eK7o`GJj0$&0[!(h$4FRra/Q&H^C<K\kJCe(;a%NOkJmYXS@r7=o&!CMNp18f_@V0j_$K<`I(n!ZH2S^4aBjKdE+Wl"Qf(J:/,P86SaXks6#4\\p+=L)Qi/fsjqQB49tj,<2Bj9J+HH%^;PP$!&!j1(.lWV.S!jr_qHgn:c`;:JGP-^RoZ9^grekBQiY)H<eU+59HKHY:!eR@9q=S)/;8t%]C>[<7m'-(gcL.bc"^_Clf-m"%iT""E^e@Bd\W6cb1qm%6cPOoEMQGm1#WpoEArg(g*BBUnZ"sYD((S6g.i":O3Rl5pE=iH.doZr900b?c0V)P\_C.")!'<(0@PqPN%S8M&p=su2l=-!`dg60-#Tm*Tb\"hS_XAcbP_f2/U)lDcCe:LiB>/p[0k"I2i?8b0)SFro8`0S;#k2op&&io4;RlPcL"d\6fatkk9%7<ai:5G@6%Cde1.^UgNN:RMYdV]fBcUJi`="_@6Eco!/"[DEODm`6*Bh-0*dkUf02<c&V5@0&,qJ3DHeE7Pq'f/9)h%O'kMZIPtq%]$/J-0XkbBeK!AQoGr2McD4Q-6'[dERpuJ?@?_X1TSQI;3"J0;9.e9eAujKs-l@C7;K=m#DZd#e>lgYOgX.J1+[K3kJD+[CE8;.h%hKOjN>jTb@o"C,/28OQ^NY2DNb%*XD-<MXna!K>[-'gDGH<<m7*L0<W#[=B.E/N+8A'?f5^U'![@F%^GE0<?;,ME1OCP9^uQ@s@6%PTWA1'tol_*DUoqIi*6t#mJYF;eZhN`7S!"AZGI4Y):P9+4.Ur7g!o7`caU9oPE:o$7?_Q2r.A$K,36-ha#LFD:D_oS3`J6fh3p*%O@BtM(*\@cWZXq@QGo@*-j,]T[Y3a)nuu=c=Xhad>'>O*p6Yj)c(LO"4XV/;VMPCe^CF9"dB5iQL\j)V:3<JD[YgU%H4q_&de8Ip%BLJ`d&^"RhFfW<o*_`pLbPOVEK:uL^oIODA@nGO%*cS:U^<tqtaL0Rq*n#R5S5ldu`Ud)0M@>S+,ZhXa!VUm241bh]!Q)/JBXDC#%S@akc@bq\gQ'hF4._>QU`S_,tkRjj4&t>eWULLbcB[eBNZSJ'r2_l_iq)8M"o%&ei\?RnOHIT&Y+VhH8j,*>eU[RT#q%k-$Dam^?%paL-9%mIn!q)p\>Vok7k!2?%^M;Uql#ejQZKNc">'+!J@Q8YDPgj%=4D8sM)+LbRs=K#,/?ohG6d'c_h/5F21]KiQa9ecb"<9OfD%>ns?&f&(GE/O\0#28Cp/DF?/[d*1a)i(iW;pF+d-GY+fE.nGFY6Xr`=+2FU/S:hUEJ0BHN%u?BR<fm/t!bBT-7Ki+%n02rKODMe)%D^O)=!533@Z(.t2<jN,<mj'))-3-+D\KCQQ99#:;><!drZ.Nf:Q0_*@`jRArKt8b-Vj#q<C)'\_Z:<)Bnf*Jjh&ts6k+`VT@d.nq%6WoATB5ju[rC%-Bj_'k@.?&<2YSLg&ffSdf+\9So53Y.bnm2d$X"1m!\%n-uKP#PbD()G8J7I661&Esm'.74<?%^EEB&LiEoPCPZ%$b-L&>Ktt[pA1uo[D;a4_Z_a$4mR&KJ?Uu6`0ePo'\(R&M]c#S8J?GnSR%T!@KuJ&L$H&OlW8]D55)Hi@UT4j,F$,-HP@9O;$lMS%Z@`c@;',3ac=nca;R:q+)*fE,JK)ed\+`7UdW.u)-'_#Al5$6LS=r[A(k-+</UKhCjY+iSN,%$/LeRI3q*MXkAit;".W0Z<b$u)L%Pf=(nY*pS;-&sGf:6-*dJ8/>B<4,8[Tcm]+L/97%TVZa6%0\mib%9*;=;p:A?(##"`QVE+`St.&ZS!+Th%d@)Dqu:0E/u9#9@(sg%1^di?FH6:u*NZ8iR8Ori>0lXe1;nB-h]GohZX$YK*-s0WSEpaI.4YaNEeL2hiWh#16JW;d&nkh_c/9oHaj'l'Mn<>df>/$.4H81n%/jG4md+D+^[Z*W^nalu-CtPjZqbjXSP^0gBpUsgb:Lh<i?@EVL7.pIu"4GX_Q*0Zk</WlJ-a75)Z?/el!lZW;pRMSJol:%r/-)t2%^tXUQ)]"`2M5O7,5IqjXIHkL;VnB1u4.?DJ$lk?t+VA5S;+f+/&-@53J3n$H"G+KFN&amh*R``Mg=t`#d[]o\Yq&("3`U*gWS=P[%Greet>l?@7ZR9D5F?nTdjoMDeU^;)o$/1=kmJN*PnKH7\9)2it,tKRh45]:QL(raU`7ad;qK*s8hBCe5Xo\Ob&$nOkEgdrqdVL,1%"=;mki2],26d.XJ`X5NNcIK_C;a>'m.8sk%(LWgb?N]DUJEkbn+u(_spos.BVjjB4TV@:e9j-9T<Is2fjV]i(J[FXgqPX]PoU)!:%<L]07E<9g(ZZr+>Q.CgS'=5-#TfXN]Z4juj)j*sTftMMAWAZ&"T=9kJ4rL"2G':s4XfI'E96Ue_#9nA+3V"&Q"?!HWdaVR?S&UNr%R9E!;1Xkdm2J;(Zd4Xb,l],T?-Y*GTFp'`>lW/MF%%=N#")e6W&5$`8@[*RD7[Cq:h$MVcJ4fO^I"j0<$l)c_T0XD.PWsNG/b;a5%X3F""+in!*gJskEk+1MDB(ot5`_,CFMi2/m46=Q&kQsccV?9HT6k>.-)Vkq\OKqT\'3/ML^sFYq>*$^A@2SA;C"[j%o/`JZ-0=r.%-@+RdF4J+4:*F4R?"qu6(dLDH-O?6):YVSJ>=M,E'm)Q$ZEk@Q(n*t1E.>;."9Iktmu_n<X6/Ct@`@8)dmkcm5`m@1"9I45FZn\&%oVKh93JYe4=RH#*=k3oaaaEY=]5b+kmR896AgEIA]Ma<B-73p1hqE2ZhVFH?b$E>TKrHSgGKMM$>b,Hh0.j!=(kaM@>](0Y4;43&%RM&[/A`Mj<(#VF8.Dd86BZTkJ>Bd=7@6;EA*dO[2IW__1QXl7*6f27-VaV]9*EYfTI3ZtnEE%<5@JB:o)!XEdM6jE,?1e33$;C8_%4iaPdMha#&mC!oRim,uRVWt`!bE"']UG'0L\F&>)_@3`V@e=uXDA@VI+tFdZ^%uup5ipF!jcq,l>o1)M@C+VPAcTPmI.NE:pmf*P%nTiS.[sd#7Vg;SHkJO:US2PRUePR%BX2n'/ArS-5V`M>0SX7u(Fm)TnI&]QHGa7YWeIb0lX.4j@3iWe'dfXXR%QF+mV`Hs!DNX]o%4jESt4qJ%kZboR]7&uk3g5bjjhP'mM8#DQ$^cL&EG:hI.FYM_7o<F=S8@T`,YZIAH;TChceXIqWku\0:HcqumB#csbpId`AlP3j#%IQH)sp`E!j5e=@M1AeY!/mUg,3dM,YB5.'\]lI*LnQZ=K<sBViob6ELq?bZ5n7b'33nNo&U"&\EN_Td7T?_S,6Ln"uSa6(IZ#"5<%f.2,$h9+<Z5/1PkU>reE8kMllp2_5`H/.c;Z-F>EQ'</o.a'!sg!97#cA2#eO'MR.qFLm\deQuuk[!OSQ9*S)!Zp0_0HTNbBKt'D%TT8]N(M!6FNZUf''pR>pghc0)4Qg$P[@U173aR$8kkVKDFsYO],'9oi&)C$(e48m7MK[LCnnA9sFK0OF,EKl&bbO2!XrT]-27$SC%G%&3M4?D"I<dQAWq6J>kqZ>t\a"iOD;P6r/>9TnUl0;6g9!+"2K;UcaE3)U#:A"^rTB[e#V`LI4[-Kd'\H11@<6+,A:ACqi]ojXN%Q':uh4q$t+S3#QLqKtC@%]B/&jnnjQ#KLL@TB^b7H(F468T*-YI3?qe?+2lFU#I]]7\/-"2gD@[3n<b),Fu!lr<DRe8$_DP$1q00%XiSFAe_s8po5pus%)=sEpW'6Cc!S?d4Mf3)r3Ioj[\#0[LJRc3TZ8NYQ&B^n,3gn!F+d$QN&X:/7CI;MJ4$q/VgA[3k-hh8g(e_>%GCe8T_Y?\OGA,&o_tc@'GI%PA_:o6//r.,QI9$tS3:iOrDF\0/Q[p;`!ba3,S*1e-M4K5:WlkF=eX\-d`1A*<V[&;8$]D0oL*=W-%j'b)Mhmji[HJM`ZS\`ANTO'b\5!Y;7<'t]L1rX.;VX!E(9p,NCdZqE4j478WK8G6fNGk9/9oL)l).m#G[j\W7bT+nY:o14QDniFt%(iBjOM$f>,]E3:((,JW=r&a!QI>:p.h,?F/6^VLnK!'\g+4hfJ3CqeK4b5.Cbe,q^LQiNMPH"[J*jZ)d;Fp2&?*_?cgm?M&n2]/N%eLY:,U(Xe:Q9bW["XN^uTGI65NlN#H/cP?s"3<&Q.0iXVimOW'@<O#V/GUW8nIpbaKl9*J,U'<10OX?\o:[2>s56"/l\9G'PG<7f%C?ML+1">Dg9n0:'!RD;"Zd_Oej1g^/mgt-/=guI0D3W)6ZXY)u1K_fHG,U<\L)b&\9(PBh0%#[`*SL<'("C5)g<]7V=TJ$@jU^c;%OA&$HF%<gq#*hW+2,Z3'='*@XZD5-!,du0E`Tb5.1kr4bX6eZ->SV4n[Y_/fFXblZQB=fim'ni.6hfhdE2!Qc2IZ55GSGSl8'=O'%1m)%ELZWK7ET?Mjb]3JYLGVUL/[N^*gZ4UNe1_sY!urr<ZoASs_i3qKbZ=;K2AnT1P?PZK(!R]RC2@dH)Kq<u[R<#6*G9c2=\A-b%WBX-$B`=/]cj=amjLhh#EW8G2c&iMZ+E*/CP$-iKZHId[1,Q6S!/oFiMG9H^00A5M^u'<i6F2r]K?0PEZ&Y^k9;QOM?QeZ]n]Yp0%N)XsL[3U`:m!ZtopJE3M>Z^g#)RS<-iqL+>q!gC%/MMW10Wu_:JX-JW;aZGP^B$6665[6\TUrg&+0&J)aSr.d0Lu#f:#UpmE0,6Z%/eK`=N0h^J*p3Qr:n2WQc.6H,hm*+9%*0FGh2[t#8!$U#5n38c.U%b6XMKil`H9l*FmYl0[Z(Qn]OP">aM!$JCAlDBIBXCl\;3J_%>\BYcQ)0"2PZD(GALVT+3VO$MikppiP![;-LgU"+>.RF?s6Bh^9NPE4i:J^Y(Er<d)>59BW[>L*iM6+!Faa2H!8[rp?+1?@4_l/.%__:HLZJOq)c`,P`]1i/b<n370HC!E0;,0r=f;872=s**#?lCh[KpN7#1i\'UZEP!sM1llFH3%jhj/@mbQS<G_crApq*Xsgb<Q*0_%L[GWu+#Vr4rW,$do,:*1J.^Pt\ifP0)L"SQ["A1p+joRIZt[*->^,-=nskOWKM4_+f]rjf.L[FVVa6:m-(tU^oAN.Yp*R>^S5.:I%a(P'kb.-1js,_8V@5;;gFkp@TC=LCV8:L1#:]eSWOb8jo6<1M'Pr6XHp]r&=DFAsR%\gE4)8!/F9&"L8:(*bX/Mt!b%;ut@]:7uU%OU-V5EB'f'Crk0=MfrYKeg-o!9c;NBD9'S8hq;rXNI&.<&!'"6Ue^uZag3p\G]kGpj*eg$<!FbR<2M@m"_"]nmbGY'2"(3oYR5&:%dZ9^V[#><(l*JCN8p$3Oh3\Z^Wpo.Gl@pI2-('Ig@RI%F$@Puu&JB!^eQ&7ZI#W^B`;@PhL\2DQNp)@B6#r<KHNG-iW:O02j0g1R%>Bc1'qT1Q\[Tc\$X3,>LZI$pp.iA)?1PW)=%4B!)>ZTFNR/Ym&rp4L&KBUUj7YZEi6l.)NUt*a]7dkunqf:A[h@/%1G)AMtq'UbC%c1>"4Z,D,s6i[mb]k^T,#QUOlW!*dKcui?i\1AMNkN;uEWC"iCaKPuC-H['X6TCD7Y!4]bkh5oh0-!;8';>]ED[Kg_^V+2(<;'ot%;-o6j<6=0Ck1fQaOZM;?ejQkF0_Nu&Q[(n?0l:5b);l]!+o\/_O>W9CLIDe+*IfmqTV0p0G?`NM_1^GoPBE;CGH@,i4gl$"UY56S%)!q3C!V:tT-5GQu`iuD=0:t?39^<e5VV)L=d.uWk]:*NZ+:^KN"9su0)7Le(i'BJOMZK[6d26oTcd)@jhdCU7JXpb_Ngi]QgRuno%iZ\PU7k9rOJic9di>hB2)4444oB0N"5j[G^R%co9+H[_oK9M_47e@XB.PD?M+!Dn@aY5]*$)PgqlHZ<C:aF,+Vl*>#A-,?kW\eHH%-,*YVX)SjG76kp*<>`:*,]WIN7>+5ABFZ\>;fnh1),)Ia8-9jCa(am$Pe/N!0C3H!:%V[[nh+Z\4VOuUbncDolH=BFb!p#`TE;9#%B3DW>[:ms)MpJHu&^KL$X398GjVdCMUa!i1EkAT0]sKWFCNW%f/BMd7=@5]D*p&W]"-aa.jW5G06i%5B\[@P@MGs'Jbh!;mp0f$]%4hlQ0/cB#QjgrmGf>^_g!$e?Q^;6(7mEW("D+BJ^#/XM)i[8si!."1.4jC4;+O?H.ZrWli`0FmOL<XaB]G],+>?\^E-d!O9C?@!U%)lSt<3a+<s'W239G[4$%M\]]=mbA0'6tf?R5?WU*R-Z[(E7k]V)=hgl:WhuJ1e[%UVh<!o7]:[*iV%DG@bLWCq/:RG(NL7[0$D?s%%MQ^DLY$,"GaW`U&[G>?EY:,EL-=g_Z=%Q65JZ'bMBQ/OHtVDXKqt<O<%S%4g8'#%4l@<Y$.jVH(c7f/EIq#L1HN0AI'9m0N:u=X%"cZ\4GZrR*bL)3+_>,:-BkO5Zp#>Ep\0$hD)pD]"'SD<(H#(Oa?O@!3BC`#]56*Pu%RKE4@CM\Ok)aGf;X3L-Le&oGW3'`[kM5I)%DQ+hN:!r==+k^p!ma-p`k#?`KJbr`ld;uO!Mb+(uANu_N&hn5[7HRQFRiOI.!9LHU.E$$50J5iBL/odn0nU=HlWt9Kj2ghV<(esO%8p*gKBtPo@Dk/Ur]8Yh;i`'0)=G(<CV\MCI4tpB`SshS==tq?O%3]S53K]5Y?%MR%JKqeoX;Oo*q\5=95oBh\Fl#\U&OQaWoh+1^%o*?&pbrs6B2!>>[fQNsB""6n,L.g4n#3;sD160T='qE^DA>*Dg!SUiH-W!AMI%#9*R*]@Djks;"[17]Fidl&@7=;m#<aq'm5BNeH%[c;O[[G!g-Vcfe'$5%CLXjK:bFYF2Od;JLd_Hb'%N#_4`H8'S(o?4`<7?_c9Vh_)N9Dq[O1p4=,.E<W[0$<k$#sFsEJZ@+V>MV?`%hO=LV5D-AUSr2F:D&CS?W+t.hNTH!%PHstj-OUcMDmnmlKYX&XGQtAV<&F'YZD>8Jgh&3[fQq[GUEc<1:g&Qc<Z`Q:T"^*'O_m=T%(T\KFomQZFdDX@RVd1&J6*7s,%X.`\8/`22@B0B@nk\n"NBOE$1LECb5FiF/4'Sbfe)%`>+YkbUOCCeK"(WUHTs^qE&B"_!Y%rJY%FSeXj/VPSVD,@gum`l)nn,n9+SlF92n2pR_[C34V%o8'Q`)VF*^$uY$9=qPejKpf<bLT'9M_2p.K]^fdpb;5ehB&$('H-5]14$tj%rGfDJVXLHqhA/2?etTp(5`kfj&Yr'5)rB0SaKRClQJH+&BE'6Pb1"Ih$VIk7Q`:L#(=S+KFFm5nLEhJG?Bp)^lh4p#HJ/S"^)Bo&%YC]M+XVMOs\NqF7Gl34.`(tg\Dud`A10GH>_N6ng?o>D6n6HV5c=P%p(>`OdP.B.;_%2.Fl)Ed$7:$)Pe5hKoBn@F5)=L5:mfHHh%7jf22?oafRNB\tN"RO:5[*s.<(:%-QYi<dP4n@R^E$nP64itC4F#9Oa1%iJa^t!jd5W/95iIDr7bm@or0LF/CJ323t8^Zs++Og'C%&'n5mMaMflP-03r^f%:9>m:N%M&[L3MlZbR:P3/''o)Le<]KNfl0Tru-i3'HNmLrg$hUa;f*b-7LsSbWZa7&c487bQ>b,#45H@)p%EiQMeot]h$%Xt3nQLf6liRrLk]8!I<<Vhg)M5cl6V_[3V#1Q`SjG6QOB*^N5Rf=CD:n1k&&B!d/UQhsekD[7__BU)>p`9k]9a-O7%_4R<<MI[MSokZf-:HcV8.B>8&V5Rhkf+mT"FU5[aVVk!!!n>3aION"%8BgcWb(/>e#PjXddlAOhZ!j9)>IWekVnte%b0mO]"A%8I%Zql=(.HiR_.qNN;1dSFX!Y5&0ciN=K@q;2=)UCTBT*eKC[RcLIg'??aiH\(+84J,aeuJS8q10paVVGZMr<uL4:(c?gX@k8'AoDiF%6CV+YD?Kel=<n+W:6<ILmg^BLQQp1!$\%)_[M5t&>n7_c,VR"u*A/3T0..nD0&:\[^=N%F390,3'ZZ)O<t/GKkouS3Vn)r^&e^Rf%FHR5+`'qV]TLj^Bm.H=bO=(Z(FdW]R!VPD87of]T27gCH9<cTe,N3;BJu\S1$'tOHV%fII8gheU?cf4O%ZH854e4I=<:a!nrOSGG%MpDIL'!$Cu9-dPn$0IB/7E0#RK,lc2l7PMpItG\YFjf!%Dp$oQ.9eM9_A*k[dD"">hP"r&RHO1\$J4$8+,`'i`ek6NY$jRos(#M>%mF;da4@9.0J.!WdlT;<)T6C(]0;n&+Dl+T6dCHFV2Kc2==Q9G[4OangZYm2I"r-l@;ZI0]3N@]<JfcgYF[`Fb:`M)<_1(A4Yl8b9%]$F_G'(PAUM7?_=YWSj#)i6<)_I:]NTN+tq6Oq2;Nic.j\,4?dSot%W0;$nlFrUjM?6kd^/"I>]ElVeniB<mu4P=8;!n=,,(s:B"%i6KsM#MhN0r2];]TJugsG]^>7<%JfBp-EirH=6,'T[qq6N!R>eK=n]DB:kg)N5g[-GBk$nDtp)F#4k?Wm7gbHJ:bF3S'ZZ[o'_%V%[BV/-X0`Xbn(aQbIUu5P"jN94W!'Kbn2T>JVQDQlKnjo).O+\K:`N]EiFu"T:Pn^@Rh/2.MED&b:so6R%ffi*S'c!3L"J5oB#>8@%==LCt8H^J23C1LXYb&,:4C\69@SCJ+#>HaXoB9F9kSsM7Zq-Tl(GYlGmeG7+OT"AD>OMd8Z'WoU@"nL0(E#ehXO0@<F5n'#Y#pe'%Eq2-m#42tr%6H<Hrketk>r`o3$j=Cb[`#-JH>$ta&IDTC8:g)Z59'Pr92`gnbdAW+fM(5*<ZQrKM!M'da$+n"M'6Tr\XFQ#i[uTA%>I,i.-o1PL&rkU!JNf8r!Olg\B%CKQZOK<og0nT>(JJGKa-Gqc>`;GsR#O0ZOh*Rh<4b0.)O:l+g-%0pAn<OqCn;PI\R*WL5+3k-%J7XsAnne9QUe+!oLUj+DiR8"l[.H>X@4Xid2gB5(olh)5l9%?urZ4/^QI38W\oC??bKr&_D9<!`*`2<3L_iq!pADb0Z]Bp)@L_[<%:)$L,M^&?O,:3/W^s7irq-\hJNoLC#k]f@7=0d)$IT8p&:]9kALECRKoL`!Lkt_?mjZ*:56+XHTVL`l\pMg:'+e@.sdO%`/00Z@[%DV8VJf]Y_1#dnVn5fC-499I7PP/V<i8IHlQ"a/Xhe#L\Cd?d[9'LEg[9s1M[X(nkd#Z1)G^cjVZ[jCjP$:(2V(_)=38*k)N1GuXF%ltqs8qp]MhWdp/W"88F&o77b$)aL63COR%sP\AM:XI.Xu;0C*KAbkN9Ur/2S4FNd-Ko\"N*GXE"cI.RD[@Z(Yal&*bd(")[88p'/%_%Q5>B(ue2??L')_+Z'ocu@E%FP@roUSV7";BW">\i760U*u\cqo\D`Wku%5/ighDquj><)$]Z`EXmL/\I.9+)T?l/1kIVRKO$.8%'FR_L"V)[RU-479I(Un0S%Vj6nNSBSH)`@hN45((m/"\%hr&$niQZ@eLEO<4<NBR-":OZ.cf\K<2iXjZ3>EK6cfoH7XgBI-U+;ZA%m%1@hZ*tN5D`/Dl&]K/<N+t,G^]=@X)VJ*WjU*H6R0D(\+tYgPY.9Y;<PBR#HM@$0kQg7M@L+2><4jIX7Y:&u`Tnt!%@Vra)FmgI%A?O>Hl_VG(WGddIV[="uGSY"X%pP-4P50$'o*0W\>H9XG4'^C&$&XS:5P##[21GaGDsU8(46U+N]gLt-gAo7qaDM8A<69UKnfse#%8(iLD(.%-LPus$F;2O*]Ko@(M.8\9(l+t,"&o,pT3"6RkK*"Y&+/*VOa^o7\Z*&^da3=YHW(!qn\)G*%"V]R0dGD>g@SR<Rqhhgj%[`Z;&nS"?GfIqG\:7pCPac8YPDRRqEqaD9-o_8<%MiV7OI1Do/8a>bD;t7mdRk_QAW@jTT'po4#6G8bQFeH!bV^-NaK$o#jii4'_%.YA3<(7H2\L_(_Fo*;3cHN="tq^:>-HP*^APHB_L';4k[P9e`1=7K`?S/,)tQ0</-2eJS*p8Y8fE3/hQFq?ndZ@k:CerUS!c@\mO%%62;2NV8CJ&1NeaA.PTh'O8$,`IJR4hpL]J*I''^Xsb$[f9V)`.U[eE>uef(Y*B&r"KN\SV/2g]=6F(qhM*1/+VmDYXnWX"Uu"Xo%0,HD$e[UH="HhB&d8eZ4r*=j+/'>r1,SS-Y!S3@?'h\.2W@U(f%ps@/,>sC3b)<-jg"&;OLm_r.+2QINic.dTMaY^Zqc\Jk=/3Rj%mQ,H;(?F-Q'hjcti7)i*hjoPlcBHm^rI6@e>Hk3a30Kb0]I.@_aMep'4sUsKKQaR=C0BF_HOi0^=Ns,=)g?<e$r>k&Fu7h;nWAF5%Q<&J(bh"2\r,<Zi0Nta+jiXdZACBbE%EiO#PfOs&^""=5QZ:Bljr,_/9H*e+UlplK^S+"B=>.i#6AEE%EI'#L2(*;B+\<HE=Bh+8%'k<^4Tlk*g601Q/UIt9;HeTX*L<9JT/M[rjjH?43]@Oc01cdk=l8:s^%uB-1XL'0NG(IS\CX)e\bS>Th->_r]!"erZ0*J?'Z'_SB%;W"d+iFH>oMhb%*jn?Z_jWVjei+l+ecR\8nV4Ek3VDCM'cA@0S/?PHcUk.:k/I1^68?''_%&O#0'8IYe8..X"@F)M;ai6A(Ce"uM%\V'5(p4ob'Gkf]?QbMA9XraX]H@a'Yn,%d#P7JefUKc46kHb91P9Bh,Gf"W7MU:<Ra=i<#EVMtTU^H`/%(5D_Ek[=DH94FiNugQ5%[DTo[ocHEib6ROW@Bt1-g&/h>p$_+QnD2FgqG6!tq[\2OcbKECs7#nMrq9&Ri:?)u?[qk$?iP!AmGIj3mp:J;kAUCmn`,C3rT`;<%me>W<?[qq.+'u_\dtci\j7!!IDkDLQa$9S%5Q1#B^AWiS02K@_e$oAP:OiDBDkI%!5Q1Pq!828[bCB2c^\Qd%rpX7pHhGr6~>%AI9_PrivateDataEnd